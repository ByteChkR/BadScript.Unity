using System;
using System.Collections;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.ConstrainedExecution;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Security;
using System.Security.Cryptography.X509Certificates;
using System.Threading;
using System.Threading.Tasks;
using BadScript.Common.Types;
using BadScript.Common.Types.Implementations;
using BadScript.Tools.CodeGenerator.Runtime;
using BadScript.Unity.Wrapper.Core.Generated;
using BadScript.Utils.Reflection;
using Microsoft.Win32.SafeHandles;
using UnityEngine;
using UnityEngine.Events;
using UnityEngine.EventSystems;
using UnityEngine.Experimental.Rendering;
using UnityEngine.Playables;
using UnityEngine.Profiling;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using Object = UnityEngine.Object;
using Random = UnityEngine.Random;

#pragma warning disable 618

namespace BadScript.Unity.Wrapper.Core.Generated
{

    public class BSWrapperObject_UnityEngine_SceneManagement_SceneManager : BSWrapperObject < SceneManager >

    {
        #region Public

        public BSWrapperObject_UnityEngine_SceneManagement_SceneManager( SceneManager obj ) : base( obj )
        {
            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_SceneManagement_SceneManager : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_SceneManagement_SceneManager() : base( typeof( SceneManager ) )
        {
            m_StaticProperties["sceneCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) SceneManager.sceneCount ),
                null );

            m_StaticProperties["sceneCountInBuildSettings"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) SceneManager.sceneCountInBuildSettings ),
                null );

            m_StaticProperties["GetActiveScene"] = new BSFunctionReference(
                new BSFunction(
                    "function GetActiveScene()",
                    a => new BSWrapperObject_UnityEngine_SceneManagement_Scene( SceneManager.GetActiveScene() ),
                    0 ) );

            m_StaticProperties["SetActiveScene"] = new BSFunctionReference(
                new BSFunction(
                    "function SetActiveScene(scene)",
                    a => SceneManager.SetActiveScene( WrapperHelper.UnwrapObject < Scene >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["GetSceneByPath"] = new BSFunctionReference(
                new BSFunction(
                    "function GetSceneByPath(scenePath)",
                    a => new BSWrapperObject_UnityEngine_SceneManagement_Scene(
                        SceneManager.GetSceneByPath( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetSceneByName"] = new BSFunctionReference(
                new BSFunction(
                    "function GetSceneByName(name)",
                    a => new BSWrapperObject_UnityEngine_SceneManagement_Scene(
                        SceneManager.GetSceneByName( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetSceneByBuildIndex"] = new BSFunctionReference(
                new BSFunction(
                    "function GetSceneByBuildIndex(buildIndex)",
                    a => new BSWrapperObject_UnityEngine_SceneManagement_Scene(
                        SceneManager.GetSceneByBuildIndex( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetSceneAt"] = new BSFunctionReference(
                new BSFunction(
                    "function GetSceneAt(index)",
                    a => new BSWrapperObject_UnityEngine_SceneManagement_Scene(
                        SceneManager.GetSceneAt( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["CreateScene"] = new BSFunctionReference(
                new BSFunction(
                    "function CreateScene(sceneName, parameters)",
                    a => new BSWrapperObject_UnityEngine_SceneManagement_Scene(
                        SceneManager.CreateScene(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < CreateSceneParameters >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["MergeScenes"] = new BSFunctionReference(
                new BSFunction(
                    "function MergeScenes(sourceScene, destinationScene)",
                    a =>
                    {
                        SceneManager.MergeScenes(
                            WrapperHelper.UnwrapObject < Scene >( a[0] ),
                            WrapperHelper.UnwrapObject < Scene >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["MoveGameObjectToScene"] = new BSFunctionReference(
                new BSFunction(
                    "function MoveGameObjectToScene(go, scene)",
                    a =>
                    {
                        SceneManager.MoveGameObjectToScene(
                            WrapperHelper.UnwrapObject < GameObject >( a[0] ),
                            WrapperHelper.UnwrapObject < Scene >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["CreateScene"] = new BSFunctionReference(
                new BSFunction(
                    "function CreateScene(sceneName)",
                    a => new BSWrapperObject_UnityEngine_SceneManagement_Scene(
                        SceneManager.CreateScene( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["LoadScene"] = new BSFunctionReference(
                new BSFunction(
                    "function LoadScene(sceneName)",
                    a =>
                    {
                        SceneManager.LoadScene( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_StaticProperties["LoadScene"] = new BSFunctionReference(
                new BSFunction(
                    "function LoadScene(sceneName, parameters)",
                    a => new BSWrapperObject_UnityEngine_SceneManagement_Scene(
                        SceneManager.LoadScene(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < LoadSceneParameters >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["LoadScene"] = new BSFunctionReference(
                new BSFunction(
                    "function LoadScene(sceneBuildIndex)",
                    a =>
                    {
                        SceneManager.LoadScene( WrapperHelper.UnwrapObject < int >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_StaticProperties["LoadScene"] = new BSFunctionReference(
                new BSFunction(
                    "function LoadScene(sceneBuildIndex, parameters)",
                    a => new BSWrapperObject_UnityEngine_SceneManagement_Scene(
                        SceneManager.LoadScene(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < LoadSceneParameters >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["LoadSceneAsync"] = new BSFunctionReference(
                new BSFunction(
                    "function LoadSceneAsync(sceneBuildIndex)",
                    a => new BSWrapperObject_UnityEngine_AsyncOperation(
                        SceneManager.LoadSceneAsync( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["LoadSceneAsync"] = new BSFunctionReference(
                new BSFunction(
                    "function LoadSceneAsync(sceneBuildIndex, parameters)",
                    a => new BSWrapperObject_UnityEngine_AsyncOperation(
                        SceneManager.LoadSceneAsync(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < LoadSceneParameters >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["LoadSceneAsync"] = new BSFunctionReference(
                new BSFunction(
                    "function LoadSceneAsync(sceneName)",
                    a => new BSWrapperObject_UnityEngine_AsyncOperation(
                        SceneManager.LoadSceneAsync( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["LoadSceneAsync"] = new BSFunctionReference(
                new BSFunction(
                    "function LoadSceneAsync(sceneName, parameters)",
                    a => new BSWrapperObject_UnityEngine_AsyncOperation(
                        SceneManager.LoadSceneAsync(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < LoadSceneParameters >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["UnloadScene"] = new BSFunctionReference(
                new BSFunction(
                    "function UnloadScene(scene)",
                    a => SceneManager.UnloadScene( WrapperHelper.UnwrapObject < Scene >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["UnloadScene"] = new BSFunctionReference(
                new BSFunction(
                    "function UnloadScene(sceneBuildIndex)",
                    a => SceneManager.UnloadScene( WrapperHelper.UnwrapObject < int >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["UnloadScene"] = new BSFunctionReference(
                new BSFunction(
                    "function UnloadScene(sceneName)",
                    a => SceneManager.UnloadScene( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["UnloadSceneAsync"] = new BSFunctionReference(
                new BSFunction(
                    "function UnloadSceneAsync(sceneBuildIndex)",
                    a => new BSWrapperObject_UnityEngine_AsyncOperation(
                        SceneManager.UnloadSceneAsync( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["UnloadSceneAsync"] = new BSFunctionReference(
                new BSFunction(
                    "function UnloadSceneAsync(sceneName)",
                    a => new BSWrapperObject_UnityEngine_AsyncOperation(
                        SceneManager.UnloadSceneAsync( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["UnloadSceneAsync"] = new BSFunctionReference(
                new BSFunction(
                    "function UnloadSceneAsync(scene)",
                    a => new BSWrapperObject_UnityEngine_AsyncOperation(
                        SceneManager.UnloadSceneAsync( WrapperHelper.UnwrapObject < Scene >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_SceneManagement_SceneManager()
        {
            WrapperHelper.AddRecastWrapper < SceneManager >(
                o => new BSWrapperObject_UnityEngine_SceneManagement_SceneManager( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Object : BSWrapperObject < object >

    {
        #region Public

        public BSWrapperObject_System_Object( object obj ) : base( obj )
        {
            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Object : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Object() : base( typeof( object ) )
        {
            m_StaticProperties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(objA, objB)",
                    a => Equals(
                        WrapperHelper.UnwrapObject < object >( a[0] ),
                        WrapperHelper.UnwrapObject < object >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["ReferenceEquals"] = new BSFunctionReference(
                new BSFunction(
                    "function ReferenceEquals(objA, objB)",
                    a => ReferenceEquals(
                        WrapperHelper.UnwrapObject < object >( a[0] ),
                        WrapperHelper.UnwrapObject < object >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Object()
        {
            WrapperHelper.AddRecastWrapper < object >( o => new BSWrapperObject_System_Object( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_SceneManagement_Scene : BSWrapperObject < Scene >

    {
        #region Public

        public BSWrapperObject_UnityEngine_SceneManagement_Scene( Scene obj ) : base( obj )
        {
            m_Properties["handle"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.handle ),
                null );

            m_Properties["path"] = new BSReflectionReference( () => new BSObject( m_InternalObject.path ), null );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["isLoaded"] = new BSReflectionReference(
                () => m_InternalObject.isLoaded ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["buildIndex"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.buildIndex ),
                null );

            m_Properties["isDirty"] = new BSReflectionReference(
                () => m_InternalObject.isDirty ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["rootCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.rootCount ),
                null );

            m_Properties["isSubScene"] = new BSReflectionReference(
                () => m_InternalObject.isSubScene ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.isSubScene = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["IsValid"] = new BSFunctionReference(
                new BSFunction(
                    "function IsValid()",
                    a => m_InternalObject.IsValid() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_SceneManagement_Scene : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_SceneManagement_Scene() : base( typeof( Scene ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_SceneManagement_Scene()
        {
            WrapperHelper.AddRecastWrapper < Scene >( o => new BSWrapperObject_UnityEngine_SceneManagement_Scene( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_ValueType : BSWrapperObject < ValueType >

    {
        #region Public

        public BSWrapperObject_System_ValueType( ValueType obj ) : base( obj )
        {
            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_ValueType : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_ValueType() : base( typeof( ValueType ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_ValueType()
        {
            WrapperHelper.AddRecastWrapper < ValueType >( o => new BSWrapperObject_System_ValueType( o ) );
        }

        #endregion
    }

    public class
        BSWrapperObject_UnityEngine_SceneManagement_CreateSceneParameters : BSWrapperObject < CreateSceneParameters >

    {
        #region Public

        public BSWrapperObject_UnityEngine_SceneManagement_CreateSceneParameters( CreateSceneParameters obj ) : base(
            obj )
        {
            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_SceneManagement_CreateSceneParameters : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_SceneManagement_CreateSceneParameters() : base(
            typeof( CreateSceneParameters ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_SceneManagement_CreateSceneParameters()
        {
            WrapperHelper.AddRecastWrapper < CreateSceneParameters >(
                o => new BSWrapperObject_UnityEngine_SceneManagement_CreateSceneParameters( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_GameObject : BSWrapperObject < GameObject >

    {
        #region Public

        public BSWrapperObject_UnityEngine_GameObject( GameObject obj ) : base( obj )
        {
            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["layer"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.layer ),
                x => m_InternalObject.layer = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["active"] = new BSReflectionReference(
                () => m_InternalObject.active ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.active = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["activeSelf"] = new BSReflectionReference(
                () => m_InternalObject.activeSelf ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["activeInHierarchy"] = new BSReflectionReference(
                () => m_InternalObject.activeInHierarchy ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["isStatic"] = new BSReflectionReference(
                () => m_InternalObject.isStatic ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.isStatic = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["scene"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_SceneManagement_Scene( m_InternalObject.scene ),
                null );

            m_Properties["sceneCullingMask"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.sceneCullingMask ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["SetActive"] = new BSFunctionReference(
                new BSFunction(
                    "function SetActive(value)",
                    a =>
                    {
                        m_InternalObject.SetActive( WrapperHelper.UnwrapObject < bool >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetActiveRecursively"] = new BSFunctionReference(
                new BSFunction(
                    "function SetActiveRecursively(state)",
                    a =>
                    {
                        m_InternalObject.SetActiveRecursively( WrapperHelper.UnwrapObject < bool >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_GameObject : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_GameObject() : base( typeof( GameObject ) )
        {
            m_StaticProperties["FindWithTag"] = new BSFunctionReference(
                new BSFunction(
                    "function FindWithTag(tag)",
                    a => new BSWrapperObject_UnityEngine_GameObject(
                        GameObject.FindWithTag( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["FindGameObjectWithTag"] = new BSFunctionReference(
                new BSFunction(
                    "function FindGameObjectWithTag(tag)",
                    a => new BSWrapperObject_UnityEngine_GameObject(
                        GameObject.FindGameObjectWithTag( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Find"] = new BSFunctionReference(
                new BSFunction(
                    "function Find(name)",
                    a => new BSWrapperObject_UnityEngine_GameObject(
                        GameObject.Find( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_GameObject()
        {
            WrapperHelper.AddRecastWrapper < GameObject >( o => new BSWrapperObject_UnityEngine_GameObject( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Transform : BSWrapperObject < Transform >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Transform( Transform obj ) : base( obj )
        {
            m_Properties["position"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.position ),
                x => m_InternalObject.position = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["localPosition"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.localPosition ),
                x => m_InternalObject.localPosition = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["eulerAngles"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.eulerAngles ),
                x => m_InternalObject.eulerAngles = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["localEulerAngles"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.localEulerAngles ),
                x => m_InternalObject.localEulerAngles = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["right"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.right ),
                x => m_InternalObject.right = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["up"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.up ),
                x => m_InternalObject.up = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["forward"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.forward ),
                x => m_InternalObject.forward = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["rotation"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Quaternion( m_InternalObject.rotation ),
                x => m_InternalObject.rotation = WrapperHelper.UnwrapObject < Quaternion >( x ) );

            m_Properties["localRotation"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Quaternion( m_InternalObject.localRotation ),
                x => m_InternalObject.localRotation = WrapperHelper.UnwrapObject < Quaternion >( x ) );

            m_Properties["localScale"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.localScale ),
                x => m_InternalObject.localScale = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["parent"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.parent ),
                x => m_InternalObject.parent = WrapperHelper.UnwrapObject < Transform >( x ) );

            m_Properties["worldToLocalMatrix"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Matrix4x4( m_InternalObject.worldToLocalMatrix ),
                null );

            m_Properties["localToWorldMatrix"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Matrix4x4( m_InternalObject.localToWorldMatrix ),
                null );

            m_Properties["root"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.root ),
                null );

            m_Properties["childCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.childCount ),
                null );

            m_Properties["lossyScale"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.lossyScale ),
                null );

            m_Properties["hasChanged"] = new BSReflectionReference(
                () => m_InternalObject.hasChanged ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.hasChanged = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["hierarchyCapacity"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.hierarchyCapacity ),
                x => m_InternalObject.hierarchyCapacity = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["hierarchyCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.hierarchyCount ),
                null );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["SetParent"] = new BSFunctionReference(
                new BSFunction(
                    "function SetParent(p)",
                    a =>
                    {
                        m_InternalObject.SetParent( WrapperHelper.UnwrapObject < Transform >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetParent"] = new BSFunctionReference(
                new BSFunction(
                    "function SetParent(parent, worldPositionStays)",
                    a =>
                    {
                        m_InternalObject.SetParent(
                            WrapperHelper.UnwrapObject < Transform >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetPositionAndRotation"] = new BSFunctionReference(
                new BSFunction(
                    "function SetPositionAndRotation(position, rotation)",
                    a =>
                    {
                        m_InternalObject.SetPositionAndRotation(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Quaternion >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Translate"] = new BSFunctionReference(
                new BSFunction(
                    "function Translate(translation)",
                    a =>
                    {
                        m_InternalObject.Translate( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Translate"] = new BSFunctionReference(
                new BSFunction(
                    "function Translate(x, y, z)",
                    a =>
                    {
                        m_InternalObject.Translate(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["Translate"] = new BSFunctionReference(
                new BSFunction(
                    "function Translate(translation, relativeTo)",
                    a =>
                    {
                        m_InternalObject.Translate(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Transform >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Translate"] = new BSFunctionReference(
                new BSFunction(
                    "function Translate(x, y, z, relativeTo)",
                    a =>
                    {
                        m_InternalObject.Translate(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ),
                            WrapperHelper.UnwrapObject < Transform >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["Rotate"] = new BSFunctionReference(
                new BSFunction(
                    "function Rotate(eulers)",
                    a =>
                    {
                        m_InternalObject.Rotate( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Rotate"] = new BSFunctionReference(
                new BSFunction(
                    "function Rotate(xAngle, yAngle, zAngle)",
                    a =>
                    {
                        m_InternalObject.Rotate(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["Rotate"] = new BSFunctionReference(
                new BSFunction(
                    "function Rotate(axis, angle)",
                    a =>
                    {
                        m_InternalObject.Rotate(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["RotateAround"] = new BSFunctionReference(
                new BSFunction(
                    "function RotateAround(point, axis, angle)",
                    a =>
                    {
                        m_InternalObject.RotateAround(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["LookAt"] = new BSFunctionReference(
                new BSFunction(
                    "function LookAt(target, worldUp)",
                    a =>
                    {
                        m_InternalObject.LookAt(
                            WrapperHelper.UnwrapObject < Transform >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["LookAt"] = new BSFunctionReference(
                new BSFunction(
                    "function LookAt(target)",
                    a =>
                    {
                        m_InternalObject.LookAt( WrapperHelper.UnwrapObject < Transform >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["LookAt"] = new BSFunctionReference(
                new BSFunction(
                    "function LookAt(worldPosition, worldUp)",
                    a =>
                    {
                        m_InternalObject.LookAt(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["LookAt"] = new BSFunctionReference(
                new BSFunction(
                    "function LookAt(worldPosition)",
                    a =>
                    {
                        m_InternalObject.LookAt( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["TransformDirection"] = new BSFunctionReference(
                new BSFunction(
                    "function TransformDirection(direction)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.TransformDirection( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["TransformDirection"] = new BSFunctionReference(
                new BSFunction(
                    "function TransformDirection(x, y, z)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.TransformDirection(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_Properties["InverseTransformDirection"] = new BSFunctionReference(
                new BSFunction(
                    "function InverseTransformDirection(direction)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.InverseTransformDirection( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["InverseTransformDirection"] = new BSFunctionReference(
                new BSFunction(
                    "function InverseTransformDirection(x, y, z)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.InverseTransformDirection(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_Properties["TransformVector"] = new BSFunctionReference(
                new BSFunction(
                    "function TransformVector(vector)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.TransformVector( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["TransformVector"] = new BSFunctionReference(
                new BSFunction(
                    "function TransformVector(x, y, z)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.TransformVector(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_Properties["InverseTransformVector"] = new BSFunctionReference(
                new BSFunction(
                    "function InverseTransformVector(vector)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.InverseTransformVector( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["InverseTransformVector"] = new BSFunctionReference(
                new BSFunction(
                    "function InverseTransformVector(x, y, z)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.InverseTransformVector(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_Properties["TransformPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function TransformPoint(position)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.TransformPoint( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["TransformPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function TransformPoint(x, y, z)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.TransformPoint(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_Properties["InverseTransformPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function InverseTransformPoint(position)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.InverseTransformPoint( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["InverseTransformPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function InverseTransformPoint(x, y, z)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.InverseTransformPoint(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_Properties["DetachChildren"] = new BSFunctionReference(
                new BSFunction(
                    "function DetachChildren()",
                    a =>
                    {
                        m_InternalObject.DetachChildren();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetAsFirstSibling"] = new BSFunctionReference(
                new BSFunction(
                    "function SetAsFirstSibling()",
                    a =>
                    {
                        m_InternalObject.SetAsFirstSibling();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetAsLastSibling"] = new BSFunctionReference(
                new BSFunction(
                    "function SetAsLastSibling()",
                    a =>
                    {
                        m_InternalObject.SetAsLastSibling();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetSiblingIndex"] = new BSFunctionReference(
                new BSFunction(
                    "function SetSiblingIndex(index)",
                    a =>
                    {
                        m_InternalObject.SetSiblingIndex( WrapperHelper.UnwrapObject < int >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetSiblingIndex"] = new BSFunctionReference(
                new BSFunction(
                    "function GetSiblingIndex()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetSiblingIndex() ),
                    0 ) );

            m_Properties["Find"] = new BSFunctionReference(
                new BSFunction(
                    "function Find(n)",
                    a => new BSWrapperObject_UnityEngine_Transform(
                        m_InternalObject.Find( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["IsChildOf"] = new BSFunctionReference(
                new BSFunction(
                    "function IsChildOf(parent)",
                    a => m_InternalObject.IsChildOf( WrapperHelper.UnwrapObject < Transform >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["FindChild"] = new BSFunctionReference(
                new BSFunction(
                    "function FindChild(n)",
                    a => new BSWrapperObject_UnityEngine_Transform(
                        m_InternalObject.FindChild( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetEnumerator"] = new BSFunctionReference(
                new BSFunction(
                    "function GetEnumerator()",
                    a => new BSWrapperObject_System_Collections_IEnumerator( m_InternalObject.GetEnumerator() ),
                    0 ) );

            m_Properties["RotateAround"] = new BSFunctionReference(
                new BSFunction(
                    "function RotateAround(axis, angle)",
                    a =>
                    {
                        m_InternalObject.RotateAround(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["RotateAroundLocal"] = new BSFunctionReference(
                new BSFunction(
                    "function RotateAroundLocal(axis, angle)",
                    a =>
                    {
                        m_InternalObject.RotateAroundLocal(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetChild"] = new BSFunctionReference(
                new BSFunction(
                    "function GetChild(index)",
                    a => new BSWrapperObject_UnityEngine_Transform(
                        m_InternalObject.GetChild( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetChildCount"] = new BSFunctionReference(
                new BSFunction(
                    "function GetChildCount()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetChildCount() ),
                    0 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Transform : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Transform() : base( typeof( Transform ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Transform()
        {
            WrapperHelper.AddRecastWrapper < Transform >( o => new BSWrapperObject_UnityEngine_Transform( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Vector3 : BSWrapperObject < Vector3 >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Vector3( Vector3 obj ) : base( obj )
        {
            m_Properties["get_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function get_Item(index)",
                    a => new BSObject( ( decimal ) m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] )] ),
                    1 ) );

            m_Properties["set_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function set_Item(index, value)",
                    a =>
                    {
                        m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] )] =
                            WrapperHelper.UnwrapObject < float >( a[1] );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["normalized"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.normalized ),
                null );

            m_Properties["magnitude"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.magnitude ),
                null );

            m_Properties["sqrMagnitude"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.sqrMagnitude ),
                null );

            m_Properties["x"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.x ),
                x => m_InternalObject.x = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["y"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.y ),
                x => m_InternalObject.y = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["z"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.z ),
                x => m_InternalObject.z = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["Set"] = new BSFunctionReference(
                new BSFunction(
                    "function Set(newX, newY, newZ)",
                    a =>
                    {
                        m_InternalObject.Set(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["Scale"] = new BSFunctionReference(
                new BSFunction(
                    "function Scale(scale)",
                    a =>
                    {
                        m_InternalObject.Scale( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Normalize"] = new BSFunctionReference(
                new BSFunction(
                    "function Normalize()",
                    a =>
                    {
                        m_InternalObject.Normalize();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format)",
                    a => new BSObject( m_InternalObject.ToString( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format, formatProvider)",
                    a => new BSObject(
                        m_InternalObject.ToString(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < IFormatProvider >( a[1] ) ) ),
                    2 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Vector3 : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Vector3() : base( typeof( Vector3 ) )
        {
            m_StaticProperties["zero"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( Vector3.zero ),
                null );

            m_StaticProperties["one"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( Vector3.one ),
                null );

            m_StaticProperties["forward"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( Vector3.forward ),
                null );

            m_StaticProperties["back"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( Vector3.back ),
                null );

            m_StaticProperties["up"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( Vector3.up ),
                null );

            m_StaticProperties["down"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( Vector3.down ),
                null );

            m_StaticProperties["left"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( Vector3.left ),
                null );

            m_StaticProperties["right"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( Vector3.right ),
                null );

            m_StaticProperties["positiveInfinity"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( Vector3.positiveInfinity ),
                null );

            m_StaticProperties["negativeInfinity"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( Vector3.negativeInfinity ),
                null );

            m_StaticProperties["fwd"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( Vector3.fwd ),
                null );

            m_StaticProperties["kEpsilon"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Vector3.kEpsilon ),
                null );

            m_StaticProperties["kEpsilonNormalSqrt"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Vector3.kEpsilonNormalSqrt ),
                null );

            m_StaticProperties["Slerp"] = new BSFunctionReference(
                new BSFunction(
                    "function Slerp(a, b, t)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        Vector3.Slerp(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["SlerpUnclamped"] = new BSFunctionReference(
                new BSFunction(
                    "function SlerpUnclamped(a, b, t)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        Vector3.SlerpUnclamped(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["RotateTowards"] = new BSFunctionReference(
                new BSFunction(
                    "function RotateTowards(current, target, maxRadiansDelta, maxMagnitudeDelta)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        Vector3.RotateTowards(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ) ) ),
                    4 ) );

            m_StaticProperties["Lerp"] = new BSFunctionReference(
                new BSFunction(
                    "function Lerp(a, b, t)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        Vector3.Lerp(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["LerpUnclamped"] = new BSFunctionReference(
                new BSFunction(
                    "function LerpUnclamped(a, b, t)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        Vector3.LerpUnclamped(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["MoveTowards"] = new BSFunctionReference(
                new BSFunction(
                    "function MoveTowards(current, target, maxDistanceDelta)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        Vector3.MoveTowards(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["Scale"] = new BSFunctionReference(
                new BSFunction(
                    "function Scale(a, b)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        Vector3.Scale(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Cross"] = new BSFunctionReference(
                new BSFunction(
                    "function Cross(lhs, rhs)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        Vector3.Cross(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Reflect"] = new BSFunctionReference(
                new BSFunction(
                    "function Reflect(inDirection, inNormal)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        Vector3.Reflect(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Normalize"] = new BSFunctionReference(
                new BSFunction(
                    "function Normalize(value)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        Vector3.Normalize( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Dot"] = new BSFunctionReference(
                new BSFunction(
                    "function Dot(lhs, rhs)",
                    a => new BSObject(
                        ( decimal ) Vector3.Dot(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Project"] = new BSFunctionReference(
                new BSFunction(
                    "function Project(vector, onNormal)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        Vector3.Project(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["ProjectOnPlane"] = new BSFunctionReference(
                new BSFunction(
                    "function ProjectOnPlane(vector, planeNormal)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        Vector3.ProjectOnPlane(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Angle"] = new BSFunctionReference(
                new BSFunction(
                    "function Angle(from, to)",
                    a => new BSObject(
                        ( decimal ) Vector3.Angle(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["SignedAngle"] = new BSFunctionReference(
                new BSFunction(
                    "function SignedAngle(from, to, axis)",
                    a => new BSObject(
                        ( decimal ) Vector3.SignedAngle(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["Distance"] = new BSFunctionReference(
                new BSFunction(
                    "function Distance(a, b)",
                    a => new BSObject(
                        ( decimal ) Vector3.Distance(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["ClampMagnitude"] = new BSFunctionReference(
                new BSFunction(
                    "function ClampMagnitude(vector, maxLength)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        Vector3.ClampMagnitude(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Magnitude"] = new BSFunctionReference(
                new BSFunction(
                    "function Magnitude(vector)",
                    a => new BSObject(
                        ( decimal ) Vector3.Magnitude( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["SqrMagnitude"] = new BSFunctionReference(
                new BSFunction(
                    "function SqrMagnitude(vector)",
                    a => new BSObject(
                        ( decimal ) Vector3.SqrMagnitude( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Min"] = new BSFunctionReference(
                new BSFunction(
                    "function Min(lhs, rhs)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        Vector3.Min(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Max"] = new BSFunctionReference(
                new BSFunction(
                    "function Max(lhs, rhs)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        Vector3.Max(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["AngleBetween"] = new BSFunctionReference(
                new BSFunction(
                    "function AngleBetween(from, to)",
                    a => new BSObject(
                        ( decimal ) Vector3.AngleBetween(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Exclude"] = new BSFunctionReference(
                new BSFunction(
                    "function Exclude(excludeThis, fromThat)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        Vector3.Exclude(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) ) ),
                    2 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Vector3()
        {
            WrapperHelper.AddRecastWrapper < Vector3 >( o => new BSWrapperObject_UnityEngine_Vector3( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_IFormatProvider : BSWrapperObject < IFormatProvider >

    {
        #region Public

        public BSWrapperObject_System_IFormatProvider( IFormatProvider obj ) : base( obj )
        {

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_IFormatProvider : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_IFormatProvider() : base( typeof( IFormatProvider ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_IFormatProvider()
        {
            WrapperHelper.AddRecastWrapper < IFormatProvider >( o => new BSWrapperObject_System_IFormatProvider( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Quaternion : BSWrapperObject < Quaternion >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Quaternion( Quaternion obj ) : base( obj )
        {
            m_Properties["get_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function get_Item(index)",
                    a => new BSObject( ( decimal ) m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] )] ),
                    1 ) );

            m_Properties["set_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function set_Item(index, value)",
                    a =>
                    {
                        m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] )] =
                            WrapperHelper.UnwrapObject < float >( a[1] );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["eulerAngles"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.eulerAngles ),
                x => m_InternalObject.eulerAngles = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["normalized"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Quaternion( m_InternalObject.normalized ),
                null );

            m_Properties["x"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.x ),
                x => m_InternalObject.x = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["y"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.y ),
                x => m_InternalObject.y = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["z"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.z ),
                x => m_InternalObject.z = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["w"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.w ),
                x => m_InternalObject.w = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["Set"] = new BSFunctionReference(
                new BSFunction(
                    "function Set(newX, newY, newZ, newW)",
                    a =>
                    {
                        m_InternalObject.Set(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetLookRotation"] = new BSFunctionReference(
                new BSFunction(
                    "function SetLookRotation(view)",
                    a =>
                    {
                        m_InternalObject.SetLookRotation( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetLookRotation"] = new BSFunctionReference(
                new BSFunction(
                    "function SetLookRotation(view, up)",
                    a =>
                    {
                        m_InternalObject.SetLookRotation(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetFromToRotation"] = new BSFunctionReference(
                new BSFunction(
                    "function SetFromToRotation(fromDirection, toDirection)",
                    a =>
                    {
                        m_InternalObject.SetFromToRotation(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Normalize"] = new BSFunctionReference(
                new BSFunction(
                    "function Normalize()",
                    a =>
                    {
                        m_InternalObject.Normalize();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < Quaternion >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format)",
                    a => new BSObject( m_InternalObject.ToString( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format, formatProvider)",
                    a => new BSObject(
                        m_InternalObject.ToString(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < IFormatProvider >( a[1] ) ) ),
                    2 ) );

            m_Properties["SetEulerRotation"] = new BSFunctionReference(
                new BSFunction(
                    "function SetEulerRotation(x, y, z)",
                    a =>
                    {
                        m_InternalObject.SetEulerRotation(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetEulerRotation"] = new BSFunctionReference(
                new BSFunction(
                    "function SetEulerRotation(euler)",
                    a =>
                    {
                        m_InternalObject.SetEulerRotation( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["ToEuler"] = new BSFunctionReference(
                new BSFunction(
                    "function ToEuler()",
                    a => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.ToEuler() ),
                    0 ) );

            m_Properties["SetEulerAngles"] = new BSFunctionReference(
                new BSFunction(
                    "function SetEulerAngles(x, y, z)",
                    a =>
                    {
                        m_InternalObject.SetEulerAngles(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetEulerAngles"] = new BSFunctionReference(
                new BSFunction(
                    "function SetEulerAngles(euler)",
                    a =>
                    {
                        m_InternalObject.SetEulerAngles( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["ToEulerAngles"] = new BSFunctionReference(
                new BSFunction(
                    "function ToEulerAngles()",
                    a => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.ToEulerAngles() ),
                    0 ) );

            m_Properties["SetAxisAngle"] = new BSFunctionReference(
                new BSFunction(
                    "function SetAxisAngle(axis, angle)",
                    a =>
                    {
                        m_InternalObject.SetAxisAngle(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Quaternion : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Quaternion() : base( typeof( Quaternion ) )
        {
            m_StaticProperties["identity"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Quaternion( Quaternion.identity ),
                null );

            m_StaticProperties["kEpsilon"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Quaternion.kEpsilon ),
                null );

            m_StaticProperties["FromToRotation"] = new BSFunctionReference(
                new BSFunction(
                    "function FromToRotation(fromDirection, toDirection)",
                    a => new BSWrapperObject_UnityEngine_Quaternion(
                        Quaternion.FromToRotation(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Inverse"] = new BSFunctionReference(
                new BSFunction(
                    "function Inverse(rotation)",
                    a => new BSWrapperObject_UnityEngine_Quaternion(
                        Quaternion.Inverse( WrapperHelper.UnwrapObject < Quaternion >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Slerp"] = new BSFunctionReference(
                new BSFunction(
                    "function Slerp(a, b, t)",
                    a => new BSWrapperObject_UnityEngine_Quaternion(
                        Quaternion.Slerp(
                            WrapperHelper.UnwrapObject < Quaternion >( a[0] ),
                            WrapperHelper.UnwrapObject < Quaternion >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["SlerpUnclamped"] = new BSFunctionReference(
                new BSFunction(
                    "function SlerpUnclamped(a, b, t)",
                    a => new BSWrapperObject_UnityEngine_Quaternion(
                        Quaternion.SlerpUnclamped(
                            WrapperHelper.UnwrapObject < Quaternion >( a[0] ),
                            WrapperHelper.UnwrapObject < Quaternion >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["Lerp"] = new BSFunctionReference(
                new BSFunction(
                    "function Lerp(a, b, t)",
                    a => new BSWrapperObject_UnityEngine_Quaternion(
                        Quaternion.Lerp(
                            WrapperHelper.UnwrapObject < Quaternion >( a[0] ),
                            WrapperHelper.UnwrapObject < Quaternion >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["LerpUnclamped"] = new BSFunctionReference(
                new BSFunction(
                    "function LerpUnclamped(a, b, t)",
                    a => new BSWrapperObject_UnityEngine_Quaternion(
                        Quaternion.LerpUnclamped(
                            WrapperHelper.UnwrapObject < Quaternion >( a[0] ),
                            WrapperHelper.UnwrapObject < Quaternion >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["AngleAxis"] = new BSFunctionReference(
                new BSFunction(
                    "function AngleAxis(angle, axis)",
                    a => new BSWrapperObject_UnityEngine_Quaternion(
                        Quaternion.AngleAxis(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["LookRotation"] = new BSFunctionReference(
                new BSFunction(
                    "function LookRotation(forward, upwards)",
                    a => new BSWrapperObject_UnityEngine_Quaternion(
                        Quaternion.LookRotation(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["LookRotation"] = new BSFunctionReference(
                new BSFunction(
                    "function LookRotation(forward)",
                    a => new BSWrapperObject_UnityEngine_Quaternion(
                        Quaternion.LookRotation( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Dot"] = new BSFunctionReference(
                new BSFunction(
                    "function Dot(a, b)",
                    a => new BSObject(
                        ( decimal ) Quaternion.Dot(
                            WrapperHelper.UnwrapObject < Quaternion >( a[0] ),
                            WrapperHelper.UnwrapObject < Quaternion >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Angle"] = new BSFunctionReference(
                new BSFunction(
                    "function Angle(a, b)",
                    a => new BSObject(
                        ( decimal ) Quaternion.Angle(
                            WrapperHelper.UnwrapObject < Quaternion >( a[0] ),
                            WrapperHelper.UnwrapObject < Quaternion >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Euler"] = new BSFunctionReference(
                new BSFunction(
                    "function Euler(x, y, z)",
                    a => new BSWrapperObject_UnityEngine_Quaternion(
                        Quaternion.Euler(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["Euler"] = new BSFunctionReference(
                new BSFunction(
                    "function Euler(euler)",
                    a => new BSWrapperObject_UnityEngine_Quaternion(
                        Quaternion.Euler( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["RotateTowards"] = new BSFunctionReference(
                new BSFunction(
                    "function RotateTowards(from, to, maxDegreesDelta)",
                    a => new BSWrapperObject_UnityEngine_Quaternion(
                        Quaternion.RotateTowards(
                            WrapperHelper.UnwrapObject < Quaternion >( a[0] ),
                            WrapperHelper.UnwrapObject < Quaternion >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["Normalize"] = new BSFunctionReference(
                new BSFunction(
                    "function Normalize(q)",
                    a => new BSWrapperObject_UnityEngine_Quaternion(
                        Quaternion.Normalize( WrapperHelper.UnwrapObject < Quaternion >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["EulerRotation"] = new BSFunctionReference(
                new BSFunction(
                    "function EulerRotation(x, y, z)",
                    a => new BSWrapperObject_UnityEngine_Quaternion(
                        Quaternion.EulerRotation(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["EulerRotation"] = new BSFunctionReference(
                new BSFunction(
                    "function EulerRotation(euler)",
                    a => new BSWrapperObject_UnityEngine_Quaternion(
                        Quaternion.EulerRotation( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["EulerAngles"] = new BSFunctionReference(
                new BSFunction(
                    "function EulerAngles(x, y, z)",
                    a => new BSWrapperObject_UnityEngine_Quaternion(
                        Quaternion.EulerAngles(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["EulerAngles"] = new BSFunctionReference(
                new BSFunction(
                    "function EulerAngles(euler)",
                    a => new BSWrapperObject_UnityEngine_Quaternion(
                        Quaternion.EulerAngles( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["ToEulerAngles"] = new BSFunctionReference(
                new BSFunction(
                    "function ToEulerAngles(rotation)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        Quaternion.ToEulerAngles( WrapperHelper.UnwrapObject < Quaternion >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["AxisAngle"] = new BSFunctionReference(
                new BSFunction(
                    "function AxisAngle(axis, angle)",
                    a => new BSWrapperObject_UnityEngine_Quaternion(
                        Quaternion.AxisAngle(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) ) ),
                    2 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Quaternion()
        {
            WrapperHelper.AddRecastWrapper < Quaternion >( o => new BSWrapperObject_UnityEngine_Quaternion( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Matrix4x4 : BSWrapperObject < Matrix4x4 >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Matrix4x4( Matrix4x4 obj ) : base( obj )
        {
            m_Properties["rotation"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Quaternion( m_InternalObject.rotation ),
                null );

            m_Properties["lossyScale"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.lossyScale ),
                null );

            m_Properties["isIdentity"] = new BSReflectionReference(
                () => m_InternalObject.isIdentity ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["determinant"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.determinant ),
                null );

            m_Properties["decomposeProjection"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_FrustumPlanes( m_InternalObject.decomposeProjection ),
                null );

            m_Properties["inverse"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Matrix4x4( m_InternalObject.inverse ),
                null );

            m_Properties["transpose"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Matrix4x4( m_InternalObject.transpose ),
                null );

            m_Properties["get_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function get_Item(row, column)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] ),
                                                     WrapperHelper.UnwrapObject < int >( a[1] )] ),
                    2 ) );

            m_Properties["set_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function set_Item(row, column, value)",
                    a =>
                    {
                        m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] ),
                                         WrapperHelper.UnwrapObject < int >( a[1] )] =
                            WrapperHelper.UnwrapObject < float >( a[2] );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["get_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function get_Item(index)",
                    a => new BSObject( ( decimal ) m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] )] ),
                    1 ) );

            m_Properties["set_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function set_Item(index, value)",
                    a =>
                    {
                        m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] )] =
                            WrapperHelper.UnwrapObject < float >( a[1] );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["m00"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.m00 ),
                x => m_InternalObject.m00 = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["m10"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.m10 ),
                x => m_InternalObject.m10 = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["m20"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.m20 ),
                x => m_InternalObject.m20 = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["m30"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.m30 ),
                x => m_InternalObject.m30 = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["m01"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.m01 ),
                x => m_InternalObject.m01 = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["m11"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.m11 ),
                x => m_InternalObject.m11 = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["m21"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.m21 ),
                x => m_InternalObject.m21 = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["m31"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.m31 ),
                x => m_InternalObject.m31 = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["m02"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.m02 ),
                x => m_InternalObject.m02 = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["m12"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.m12 ),
                x => m_InternalObject.m12 = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["m22"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.m22 ),
                x => m_InternalObject.m22 = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["m32"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.m32 ),
                x => m_InternalObject.m32 = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["m03"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.m03 ),
                x => m_InternalObject.m03 = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["m13"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.m13 ),
                x => m_InternalObject.m13 = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["m23"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.m23 ),
                x => m_InternalObject.m23 = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["m33"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.m33 ),
                x => m_InternalObject.m33 = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["ValidTRS"] = new BSFunctionReference(
                new BSFunction(
                    "function ValidTRS()",
                    a => m_InternalObject.ValidTRS() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["SetTRS"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTRS(pos, q, s)",
                    a =>
                    {
                        m_InternalObject.SetTRS(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Quaternion >( a[1] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < Matrix4x4 >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetColumn"] = new BSFunctionReference(
                new BSFunction(
                    "function GetColumn(index)",
                    a => new BSWrapperObject_UnityEngine_Vector4(
                        m_InternalObject.GetColumn( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetRow"] = new BSFunctionReference(
                new BSFunction(
                    "function GetRow(index)",
                    a => new BSWrapperObject_UnityEngine_Vector4(
                        m_InternalObject.GetRow( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["SetColumn"] = new BSFunctionReference(
                new BSFunction(
                    "function SetColumn(index, column)",
                    a =>
                    {
                        m_InternalObject.SetColumn(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetRow"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRow(index, row)",
                    a =>
                    {
                        m_InternalObject.SetRow(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["MultiplyPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function MultiplyPoint(point)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.MultiplyPoint( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["MultiplyPoint3x4"] = new BSFunctionReference(
                new BSFunction(
                    "function MultiplyPoint3x4(point)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.MultiplyPoint3x4( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["MultiplyVector"] = new BSFunctionReference(
                new BSFunction(
                    "function MultiplyVector(vector)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.MultiplyVector( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["TransformPlane"] = new BSFunctionReference(
                new BSFunction(
                    "function TransformPlane(plane)",
                    a => new BSWrapperObject_UnityEngine_Plane(
                        m_InternalObject.TransformPlane( WrapperHelper.UnwrapObject < Plane >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format)",
                    a => new BSObject( m_InternalObject.ToString( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format, formatProvider)",
                    a => new BSObject(
                        m_InternalObject.ToString(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < IFormatProvider >( a[1] ) ) ),
                    2 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Matrix4x4 : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Matrix4x4() : base( typeof( Matrix4x4 ) )
        {
            m_StaticProperties["zero"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Matrix4x4( Matrix4x4.zero ),
                null );

            m_StaticProperties["identity"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Matrix4x4( Matrix4x4.identity ),
                null );

            m_StaticProperties["Determinant"] = new BSFunctionReference(
                new BSFunction(
                    "function Determinant(m)",
                    a => new BSObject(
                        ( decimal ) Matrix4x4.Determinant( WrapperHelper.UnwrapObject < Matrix4x4 >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["TRS"] = new BSFunctionReference(
                new BSFunction(
                    "function TRS(pos, q, s)",
                    a => new BSWrapperObject_UnityEngine_Matrix4x4(
                        Matrix4x4.TRS(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Quaternion >( a[1] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["Inverse"] = new BSFunctionReference(
                new BSFunction(
                    "function Inverse(m)",
                    a => new BSWrapperObject_UnityEngine_Matrix4x4(
                        Matrix4x4.Inverse( WrapperHelper.UnwrapObject < Matrix4x4 >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Transpose"] = new BSFunctionReference(
                new BSFunction(
                    "function Transpose(m)",
                    a => new BSWrapperObject_UnityEngine_Matrix4x4(
                        Matrix4x4.Transpose( WrapperHelper.UnwrapObject < Matrix4x4 >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Ortho"] = new BSFunctionReference(
                new BSFunction(
                    "function Ortho(left, right, bottom, top, zNear, zFar)",
                    a => new BSWrapperObject_UnityEngine_Matrix4x4(
                        Matrix4x4.Ortho(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ),
                            WrapperHelper.UnwrapObject < float >( a[4] ),
                            WrapperHelper.UnwrapObject < float >( a[5] ) ) ),
                    6 ) );

            m_StaticProperties["Perspective"] = new BSFunctionReference(
                new BSFunction(
                    "function Perspective(fov, aspect, zNear, zFar)",
                    a => new BSWrapperObject_UnityEngine_Matrix4x4(
                        Matrix4x4.Perspective(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ) ) ),
                    4 ) );

            m_StaticProperties["LookAt"] = new BSFunctionReference(
                new BSFunction(
                    "function LookAt(from, to, up)",
                    a => new BSWrapperObject_UnityEngine_Matrix4x4(
                        Matrix4x4.LookAt(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["Frustum"] = new BSFunctionReference(
                new BSFunction(
                    "function Frustum(left, right, bottom, top, zNear, zFar)",
                    a => new BSWrapperObject_UnityEngine_Matrix4x4(
                        Matrix4x4.Frustum(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ),
                            WrapperHelper.UnwrapObject < float >( a[4] ),
                            WrapperHelper.UnwrapObject < float >( a[5] ) ) ),
                    6 ) );

            m_StaticProperties["Frustum"] = new BSFunctionReference(
                new BSFunction(
                    "function Frustum(fp)",
                    a => new BSWrapperObject_UnityEngine_Matrix4x4(
                        Matrix4x4.Frustum( WrapperHelper.UnwrapObject < FrustumPlanes >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Scale"] = new BSFunctionReference(
                new BSFunction(
                    "function Scale(vector)",
                    a => new BSWrapperObject_UnityEngine_Matrix4x4(
                        Matrix4x4.Scale( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Translate"] = new BSFunctionReference(
                new BSFunction(
                    "function Translate(vector)",
                    a => new BSWrapperObject_UnityEngine_Matrix4x4(
                        Matrix4x4.Translate( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Rotate"] = new BSFunctionReference(
                new BSFunction(
                    "function Rotate(q)",
                    a => new BSWrapperObject_UnityEngine_Matrix4x4(
                        Matrix4x4.Rotate( WrapperHelper.UnwrapObject < Quaternion >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Matrix4x4()
        {
            WrapperHelper.AddRecastWrapper < Matrix4x4 >( o => new BSWrapperObject_UnityEngine_Matrix4x4( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_FrustumPlanes : BSWrapperObject < FrustumPlanes >

    {
        #region Public

        public BSWrapperObject_UnityEngine_FrustumPlanes( FrustumPlanes obj ) : base( obj )
        {
            m_Properties["left"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.left ),
                x => m_InternalObject.left = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["right"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.right ),
                x => m_InternalObject.right = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["bottom"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.bottom ),
                x => m_InternalObject.bottom = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["top"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.top ),
                x => m_InternalObject.top = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["zNear"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.zNear ),
                x => m_InternalObject.zNear = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["zFar"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.zFar ),
                x => m_InternalObject.zFar = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_FrustumPlanes : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_FrustumPlanes() : base( typeof( FrustumPlanes ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_FrustumPlanes()
        {
            WrapperHelper.AddRecastWrapper < FrustumPlanes >( o => new BSWrapperObject_UnityEngine_FrustumPlanes( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Vector4 : BSWrapperObject < Vector4 >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Vector4( Vector4 obj ) : base( obj )
        {
            m_Properties["get_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function get_Item(index)",
                    a => new BSObject( ( decimal ) m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] )] ),
                    1 ) );

            m_Properties["set_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function set_Item(index, value)",
                    a =>
                    {
                        m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] )] =
                            WrapperHelper.UnwrapObject < float >( a[1] );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["normalized"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector4( m_InternalObject.normalized ),
                null );

            m_Properties["magnitude"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.magnitude ),
                null );

            m_Properties["sqrMagnitude"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.sqrMagnitude ),
                null );

            m_Properties["x"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.x ),
                x => m_InternalObject.x = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["y"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.y ),
                x => m_InternalObject.y = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["z"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.z ),
                x => m_InternalObject.z = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["w"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.w ),
                x => m_InternalObject.w = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["Set"] = new BSFunctionReference(
                new BSFunction(
                    "function Set(newX, newY, newZ, newW)",
                    a =>
                    {
                        m_InternalObject.Set(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["Scale"] = new BSFunctionReference(
                new BSFunction(
                    "function Scale(scale)",
                    a =>
                    {
                        m_InternalObject.Scale( WrapperHelper.UnwrapObject < Vector4 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < Vector4 >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Normalize"] = new BSFunctionReference(
                new BSFunction(
                    "function Normalize()",
                    a =>
                    {
                        m_InternalObject.Normalize();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format)",
                    a => new BSObject( m_InternalObject.ToString( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format, formatProvider)",
                    a => new BSObject(
                        m_InternalObject.ToString(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < IFormatProvider >( a[1] ) ) ),
                    2 ) );

            m_Properties["SqrMagnitude"] = new BSFunctionReference(
                new BSFunction(
                    "function SqrMagnitude()",
                    a => new BSObject( ( decimal ) m_InternalObject.SqrMagnitude() ),
                    0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Vector4 : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Vector4() : base( typeof( Vector4 ) )
        {
            m_StaticProperties["zero"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector4( Vector4.zero ),
                null );

            m_StaticProperties["one"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector4( Vector4.one ),
                null );

            m_StaticProperties["positiveInfinity"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector4( Vector4.positiveInfinity ),
                null );

            m_StaticProperties["negativeInfinity"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector4( Vector4.negativeInfinity ),
                null );

            m_StaticProperties["kEpsilon"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Vector4.kEpsilon ),
                null );

            m_StaticProperties["Lerp"] = new BSFunctionReference(
                new BSFunction(
                    "function Lerp(a, b, t)",
                    a => new BSWrapperObject_UnityEngine_Vector4(
                        Vector4.Lerp(
                            WrapperHelper.UnwrapObject < Vector4 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["LerpUnclamped"] = new BSFunctionReference(
                new BSFunction(
                    "function LerpUnclamped(a, b, t)",
                    a => new BSWrapperObject_UnityEngine_Vector4(
                        Vector4.LerpUnclamped(
                            WrapperHelper.UnwrapObject < Vector4 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["MoveTowards"] = new BSFunctionReference(
                new BSFunction(
                    "function MoveTowards(current, target, maxDistanceDelta)",
                    a => new BSWrapperObject_UnityEngine_Vector4(
                        Vector4.MoveTowards(
                            WrapperHelper.UnwrapObject < Vector4 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["Scale"] = new BSFunctionReference(
                new BSFunction(
                    "function Scale(a, b)",
                    a => new BSWrapperObject_UnityEngine_Vector4(
                        Vector4.Scale(
                            WrapperHelper.UnwrapObject < Vector4 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Normalize"] = new BSFunctionReference(
                new BSFunction(
                    "function Normalize(a)",
                    a => new BSWrapperObject_UnityEngine_Vector4(
                        Vector4.Normalize( WrapperHelper.UnwrapObject < Vector4 >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Dot"] = new BSFunctionReference(
                new BSFunction(
                    "function Dot(a, b)",
                    a => new BSObject(
                        ( decimal ) Vector4.Dot(
                            WrapperHelper.UnwrapObject < Vector4 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Project"] = new BSFunctionReference(
                new BSFunction(
                    "function Project(a, b)",
                    a => new BSWrapperObject_UnityEngine_Vector4(
                        Vector4.Project(
                            WrapperHelper.UnwrapObject < Vector4 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Distance"] = new BSFunctionReference(
                new BSFunction(
                    "function Distance(a, b)",
                    a => new BSObject(
                        ( decimal ) Vector4.Distance(
                            WrapperHelper.UnwrapObject < Vector4 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Magnitude"] = new BSFunctionReference(
                new BSFunction(
                    "function Magnitude(a)",
                    a => new BSObject(
                        ( decimal ) Vector4.Magnitude( WrapperHelper.UnwrapObject < Vector4 >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Min"] = new BSFunctionReference(
                new BSFunction(
                    "function Min(lhs, rhs)",
                    a => new BSWrapperObject_UnityEngine_Vector4(
                        Vector4.Min(
                            WrapperHelper.UnwrapObject < Vector4 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Max"] = new BSFunctionReference(
                new BSFunction(
                    "function Max(lhs, rhs)",
                    a => new BSWrapperObject_UnityEngine_Vector4(
                        Vector4.Max(
                            WrapperHelper.UnwrapObject < Vector4 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["SqrMagnitude"] = new BSFunctionReference(
                new BSFunction(
                    "function SqrMagnitude(a)",
                    a => new BSObject(
                        ( decimal ) Vector4.SqrMagnitude( WrapperHelper.UnwrapObject < Vector4 >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Vector4()
        {
            WrapperHelper.AddRecastWrapper < Vector4 >( o => new BSWrapperObject_UnityEngine_Vector4( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Plane : BSWrapperObject < Plane >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Plane( Plane obj ) : base( obj )
        {
            m_Properties["normal"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.normal ),
                x => m_InternalObject.normal = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["distance"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.distance ),
                x => m_InternalObject.distance = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["flipped"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Plane( m_InternalObject.flipped ),
                null );

            m_Properties["SetNormalAndPosition"] = new BSFunctionReference(
                new BSFunction(
                    "function SetNormalAndPosition(inNormal, inPoint)",
                    a =>
                    {
                        m_InternalObject.SetNormalAndPosition(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Set3Points"] = new BSFunctionReference(
                new BSFunction(
                    "function Set3Points(a, b, c)",
                    a =>
                    {
                        m_InternalObject.Set3Points(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["Flip"] = new BSFunctionReference(
                new BSFunction(
                    "function Flip()",
                    a =>
                    {
                        m_InternalObject.Flip();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Translate"] = new BSFunctionReference(
                new BSFunction(
                    "function Translate(translation)",
                    a =>
                    {
                        m_InternalObject.Translate( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["ClosestPointOnPlane"] = new BSFunctionReference(
                new BSFunction(
                    "function ClosestPointOnPlane(point)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.ClosestPointOnPlane( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetDistanceToPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function GetDistanceToPoint(point)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetDistanceToPoint(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetSide"] = new BSFunctionReference(
                new BSFunction(
                    "function GetSide(point)",
                    a => m_InternalObject.GetSide( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SameSide"] = new BSFunctionReference(
                new BSFunction(
                    "function SameSide(inPt0, inPt1)",
                    a => m_InternalObject.SameSide(
                        WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format)",
                    a => new BSObject( m_InternalObject.ToString( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format, formatProvider)",
                    a => new BSObject(
                        m_InternalObject.ToString(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < IFormatProvider >( a[1] ) ) ),
                    2 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Plane : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Plane() : base( typeof( Plane ) )
        {
            m_StaticProperties["Translate"] = new BSFunctionReference(
                new BSFunction(
                    "function Translate(plane, translation)",
                    a => new BSWrapperObject_UnityEngine_Plane(
                        Plane.Translate(
                            WrapperHelper.UnwrapObject < Plane >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) ) ),
                    2 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Plane()
        {
            WrapperHelper.AddRecastWrapper < Plane >( o => new BSWrapperObject_UnityEngine_Plane( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Collections_IEnumerator : BSWrapperObject < IEnumerator >

    {
        #region Public

        public BSWrapperObject_System_Collections_IEnumerator( IEnumerator obj ) : base( obj )
        {
            m_Properties["Current"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.Current ),
                null );

            m_Properties["MoveNext"] = new BSFunctionReference(
                new BSFunction(
                    "function MoveNext()",
                    a => m_InternalObject.MoveNext() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["Reset"] = new BSFunctionReference(
                new BSFunction(
                    "function Reset()",
                    a =>
                    {
                        m_InternalObject.Reset();

                        return new BSObject( null );
                    },
                    0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Collections_IEnumerator : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Collections_IEnumerator() : base( typeof( IEnumerator ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Collections_IEnumerator()
        {
            WrapperHelper.AddRecastWrapper < IEnumerator >(
                o => new BSWrapperObject_System_Collections_IEnumerator( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Component : BSWrapperObject < Component >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Component( Component obj ) : base( obj )
        {
            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Component : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Component() : base( typeof( Component ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Component()
        {
            WrapperHelper.AddRecastWrapper < Component >( o => new BSWrapperObject_UnityEngine_Component( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Object : BSWrapperObject < Object >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Object( Object obj ) : base( obj )
        {
            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Object : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Object() : base( typeof( Object ) )
        {
            m_StaticProperties["Instantiate"] = new BSFunctionReference(
                new BSFunction(
                    "function Instantiate(original, position, rotation)",
                    a => new BSWrapperObject_UnityEngine_Object(
                        Object.Instantiate(
                            WrapperHelper.UnwrapObject < Object >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                            WrapperHelper.UnwrapObject < Quaternion >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["Instantiate"] = new BSFunctionReference(
                new BSFunction(
                    "function Instantiate(original, position, rotation, parent)",
                    a => new BSWrapperObject_UnityEngine_Object(
                        Object.Instantiate(
                            WrapperHelper.UnwrapObject < Object >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                            WrapperHelper.UnwrapObject < Quaternion >( a[2] ),
                            WrapperHelper.UnwrapObject < Transform >( a[3] ) ) ),
                    4 ) );

            m_StaticProperties["Instantiate"] = new BSFunctionReference(
                new BSFunction(
                    "function Instantiate(original)",
                    a => new BSWrapperObject_UnityEngine_Object(
                        Object.Instantiate( WrapperHelper.UnwrapObject < Object >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Instantiate"] = new BSFunctionReference(
                new BSFunction(
                    "function Instantiate(original, parent)",
                    a => new BSWrapperObject_UnityEngine_Object(
                        Object.Instantiate(
                            WrapperHelper.UnwrapObject < Object >( a[0] ),
                            WrapperHelper.UnwrapObject < Transform >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Instantiate"] = new BSFunctionReference(
                new BSFunction(
                    "function Instantiate(original, parent, instantiateInWorldSpace)",
                    a => new BSWrapperObject_UnityEngine_Object(
                        Object.Instantiate(
                            WrapperHelper.UnwrapObject < Object >( a[0] ),
                            WrapperHelper.UnwrapObject < Transform >( a[1] ),
                            WrapperHelper.UnwrapObject < bool >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["Destroy"] = new BSFunctionReference(
                new BSFunction(
                    "function Destroy(obj, t)",
                    a =>
                    {
                        Object.Destroy(
                            WrapperHelper.UnwrapObject < Object >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["Destroy"] = new BSFunctionReference(
                new BSFunction(
                    "function Destroy(obj)",
                    a =>
                    {
                        Object.Destroy( WrapperHelper.UnwrapObject < Object >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_StaticProperties["DestroyImmediate"] = new BSFunctionReference(
                new BSFunction(
                    "function DestroyImmediate(obj, allowDestroyingAssets)",
                    a =>
                    {
                        Object.DestroyImmediate(
                            WrapperHelper.UnwrapObject < Object >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["DestroyImmediate"] = new BSFunctionReference(
                new BSFunction(
                    "function DestroyImmediate(obj)",
                    a =>
                    {
                        Object.DestroyImmediate( WrapperHelper.UnwrapObject < Object >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_StaticProperties["DontDestroyOnLoad"] = new BSFunctionReference(
                new BSFunction(
                    "function DontDestroyOnLoad(target)",
                    a =>
                    {
                        Object.DontDestroyOnLoad( WrapperHelper.UnwrapObject < Object >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_StaticProperties["DestroyObject"] = new BSFunctionReference(
                new BSFunction(
                    "function DestroyObject(obj, t)",
                    a =>
                    {
                        Object.DestroyObject(
                            WrapperHelper.UnwrapObject < Object >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["DestroyObject"] = new BSFunctionReference(
                new BSFunction(
                    "function DestroyObject(obj)",
                    a =>
                    {
                        Object.DestroyObject( WrapperHelper.UnwrapObject < Object >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Object()
        {
            WrapperHelper.AddRecastWrapper < Object >( o => new BSWrapperObject_UnityEngine_Object( o ) );
        }

        #endregion
    }

    public class
        BSWrapperObject_UnityEngine_SceneManagement_LoadSceneParameters : BSWrapperObject < LoadSceneParameters >

    {
        #region Public

        public BSWrapperObject_UnityEngine_SceneManagement_LoadSceneParameters( LoadSceneParameters obj ) : base( obj )
        {
            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_SceneManagement_LoadSceneParameters : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_SceneManagement_LoadSceneParameters() : base(
            typeof( LoadSceneParameters ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_SceneManagement_LoadSceneParameters()
        {
            WrapperHelper.AddRecastWrapper < LoadSceneParameters >(
                o => new BSWrapperObject_UnityEngine_SceneManagement_LoadSceneParameters( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_AsyncOperation : BSWrapperObject < AsyncOperation >

    {
        #region Public

        public BSWrapperObject_UnityEngine_AsyncOperation( AsyncOperation obj ) : base( obj )
        {
            m_Properties["isDone"] = new BSReflectionReference(
                () => m_InternalObject.isDone ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["progress"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.progress ),
                null );

            m_Properties["priority"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.priority ),
                x => m_InternalObject.priority = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["allowSceneActivation"] = new BSReflectionReference(
                () => m_InternalObject.allowSceneActivation ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.allowSceneActivation = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_AsyncOperation : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_AsyncOperation() : base( typeof( AsyncOperation ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_AsyncOperation()
        {
            WrapperHelper.AddRecastWrapper < AsyncOperation >(
                o => new BSWrapperObject_UnityEngine_AsyncOperation( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_YieldInstruction : BSWrapperObject < YieldInstruction >

    {
        #region Public

        public BSWrapperObject_UnityEngine_YieldInstruction( YieldInstruction obj ) : base( obj )
        {
            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_YieldInstruction : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_YieldInstruction() : base( typeof( YieldInstruction ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_YieldInstruction()
        {
            WrapperHelper.AddRecastWrapper < YieldInstruction >(
                o => new BSWrapperObject_UnityEngine_YieldInstruction( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_MonoBehaviour : BSWrapperObject < MonoBehaviour >

    {
        #region Public

        public BSWrapperObject_UnityEngine_MonoBehaviour( MonoBehaviour obj ) : base( obj )
        {
            m_Properties["useGUILayout"] = new BSReflectionReference(
                () => m_InternalObject.useGUILayout ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useGUILayout = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["runInEditMode"] = new BSReflectionReference(
                () => m_InternalObject.runInEditMode ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.runInEditMode = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isActiveAndEnabled"] = new BSReflectionReference(
                () => m_InternalObject.isActiveAndEnabled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking()",
                    a => m_InternalObject.IsInvoking() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke()",
                    a =>
                    {
                        m_InternalObject.CancelInvoke();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Invoke"] = new BSFunctionReference(
                new BSFunction(
                    "function Invoke(methodName, time)",
                    a =>
                    {
                        m_InternalObject.Invoke(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["InvokeRepeating"] = new BSFunctionReference(
                new BSFunction(
                    "function InvokeRepeating(methodName, time, repeatRate)",
                    a =>
                    {
                        m_InternalObject.InvokeRepeating(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke(methodName)",
                    a =>
                    {
                        m_InternalObject.CancelInvoke( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking(methodName)",
                    a => m_InternalObject.IsInvoking( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName, value)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) ) ),
                    2 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine_Auto"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine_Auto(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine_Auto( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < Coroutine >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(methodName)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopAllCoroutines"] = new BSFunctionReference(
                new BSFunction(
                    "function StopAllCoroutines()",
                    a =>
                    {
                        m_InternalObject.StopAllCoroutines();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_MonoBehaviour : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_MonoBehaviour() : base( typeof( MonoBehaviour ) )
        {
            m_StaticProperties["print"] = new BSFunctionReference(
                new BSFunction(
                    "function print(message)",
                    a =>
                    {
                        MonoBehaviour.print( WrapperHelper.UnwrapObject < object >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_MonoBehaviour()
        {
            WrapperHelper.AddRecastWrapper < MonoBehaviour >( o => new BSWrapperObject_UnityEngine_MonoBehaviour( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Coroutine : BSWrapperObject < Coroutine >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Coroutine( Coroutine obj ) : base( obj )
        {
            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Coroutine : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Coroutine() : base( typeof( Coroutine ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Coroutine()
        {
            WrapperHelper.AddRecastWrapper < Coroutine >( o => new BSWrapperObject_UnityEngine_Coroutine( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Behaviour : BSWrapperObject < Behaviour >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Behaviour( Behaviour obj ) : base( obj )
        {
            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isActiveAndEnabled"] = new BSReflectionReference(
                () => m_InternalObject.isActiveAndEnabled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Behaviour : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Behaviour() : base( typeof( Behaviour ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Behaviour()
        {
            WrapperHelper.AddRecastWrapper < Behaviour >( o => new BSWrapperObject_UnityEngine_Behaviour( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Physics : BSWrapperObject < Physics >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Physics( Physics obj ) : base( obj )
        {
            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Physics : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Physics() : base( typeof( Physics ) )
        {
            m_StaticProperties["gravity"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( Physics.gravity ),
                x => Physics.gravity = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_StaticProperties["defaultContactOffset"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Physics.defaultContactOffset ),
                x => Physics.defaultContactOffset = WrapperHelper.UnwrapObject < float >( x ) );

            m_StaticProperties["sleepThreshold"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Physics.sleepThreshold ),
                x => Physics.sleepThreshold = WrapperHelper.UnwrapObject < float >( x ) );

            m_StaticProperties["queriesHitTriggers"] = new BSReflectionReference(
                () => Physics.queriesHitTriggers ? BSObject.One : BSObject.Zero,
                x => Physics.queriesHitTriggers = WrapperHelper.UnwrapObject < bool >( x ) );

            m_StaticProperties["queriesHitBackfaces"] = new BSReflectionReference(
                () => Physics.queriesHitBackfaces ? BSObject.One : BSObject.Zero,
                x => Physics.queriesHitBackfaces = WrapperHelper.UnwrapObject < bool >( x ) );

            m_StaticProperties["bounceThreshold"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Physics.bounceThreshold ),
                x => Physics.bounceThreshold = WrapperHelper.UnwrapObject < float >( x ) );

            m_StaticProperties["defaultMaxDepenetrationVelocity"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Physics.defaultMaxDepenetrationVelocity ),
                x => Physics.defaultMaxDepenetrationVelocity = WrapperHelper.UnwrapObject < float >( x ) );

            m_StaticProperties["defaultSolverIterations"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Physics.defaultSolverIterations ),
                x => Physics.defaultSolverIterations = WrapperHelper.UnwrapObject < int >( x ) );

            m_StaticProperties["defaultSolverVelocityIterations"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Physics.defaultSolverVelocityIterations ),
                x => Physics.defaultSolverVelocityIterations = WrapperHelper.UnwrapObject < int >( x ) );

            m_StaticProperties["bounceTreshold"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Physics.bounceTreshold ),
                x => Physics.bounceTreshold = WrapperHelper.UnwrapObject < float >( x ) );

            m_StaticProperties["sleepVelocity"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Physics.sleepVelocity ),
                x => Physics.sleepVelocity = WrapperHelper.UnwrapObject < float >( x ) );

            m_StaticProperties["sleepAngularVelocity"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Physics.sleepAngularVelocity ),
                x => Physics.sleepAngularVelocity = WrapperHelper.UnwrapObject < float >( x ) );

            m_StaticProperties["solverIterationCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Physics.defaultSolverIterations ),
                x => Physics.defaultSolverIterations = WrapperHelper.UnwrapObject < int >( x ) );

            m_StaticProperties["solverVelocityIterationCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Physics.defaultSolverVelocityIterations ),
                x => Physics.defaultSolverVelocityIterations = WrapperHelper.UnwrapObject < int >( x ) );

            m_StaticProperties["penetrationPenaltyForce"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Physics.penetrationPenaltyForce ),
                x => Physics.penetrationPenaltyForce = WrapperHelper.UnwrapObject < float >( x ) );

            m_StaticProperties["defaultMaxAngularSpeed"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Physics.defaultMaxAngularSpeed ),
                x => Physics.defaultMaxAngularSpeed = WrapperHelper.UnwrapObject < float >( x ) );

            m_StaticProperties["defaultPhysicsScene"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_PhysicsScene( Physics.defaultPhysicsScene ),
                null );

            m_StaticProperties["autoSimulation"] = new BSReflectionReference(
                () => Physics.autoSimulation ? BSObject.One : BSObject.Zero,
                x => Physics.autoSimulation = WrapperHelper.UnwrapObject < bool >( x ) );

            m_StaticProperties["autoSyncTransforms"] = new BSReflectionReference(
                () => Physics.autoSyncTransforms ? BSObject.One : BSObject.Zero,
                x => Physics.autoSyncTransforms = WrapperHelper.UnwrapObject < bool >( x ) );

            m_StaticProperties["reuseCollisionCallbacks"] = new BSReflectionReference(
                () => Physics.reuseCollisionCallbacks ? BSObject.One : BSObject.Zero,
                x => Physics.reuseCollisionCallbacks = WrapperHelper.UnwrapObject < bool >( x ) );

            m_StaticProperties["interCollisionDistance"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Physics.interCollisionDistance ),
                x => Physics.interCollisionDistance = WrapperHelper.UnwrapObject < float >( x ) );

            m_StaticProperties["interCollisionStiffness"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Physics.interCollisionStiffness ),
                x => Physics.interCollisionStiffness = WrapperHelper.UnwrapObject < float >( x ) );

            m_StaticProperties["interCollisionSettingsToggle"] = new BSReflectionReference(
                () => Physics.interCollisionSettingsToggle ? BSObject.One : BSObject.Zero,
                x => Physics.interCollisionSettingsToggle = WrapperHelper.UnwrapObject < bool >( x ) );

            m_StaticProperties["clothGravity"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( Physics.clothGravity ),
                x => Physics.clothGravity = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_StaticProperties["IgnoreRaycastLayer"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Physics.IgnoreRaycastLayer ),
                null );

            m_StaticProperties["DefaultRaycastLayers"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Physics.DefaultRaycastLayers ),
                null );

            m_StaticProperties["AllLayers"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Physics.AllLayers ),
                null );

            m_StaticProperties["IgnoreCollision"] = new BSFunctionReference(
                new BSFunction(
                    "function IgnoreCollision(collider1, collider2, ignore)",
                    a =>
                    {
                        Physics.IgnoreCollision(
                            WrapperHelper.UnwrapObject < Collider >( a[0] ),
                            WrapperHelper.UnwrapObject < Collider >( a[1] ),
                            WrapperHelper.UnwrapObject < bool >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_StaticProperties["IgnoreCollision"] = new BSFunctionReference(
                new BSFunction(
                    "function IgnoreCollision(collider1, collider2)",
                    a =>
                    {
                        Physics.IgnoreCollision(
                            WrapperHelper.UnwrapObject < Collider >( a[0] ),
                            WrapperHelper.UnwrapObject < Collider >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["IgnoreLayerCollision"] = new BSFunctionReference(
                new BSFunction(
                    "function IgnoreLayerCollision(layer1, layer2, ignore)",
                    a =>
                    {
                        Physics.IgnoreLayerCollision(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < bool >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_StaticProperties["IgnoreLayerCollision"] = new BSFunctionReference(
                new BSFunction(
                    "function IgnoreLayerCollision(layer1, layer2)",
                    a =>
                    {
                        Physics.IgnoreLayerCollision(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["GetIgnoreLayerCollision"] = new BSFunctionReference(
                new BSFunction(
                    "function GetIgnoreLayerCollision(layer1, layer2)",
                    a => Physics.GetIgnoreLayerCollision(
                        WrapperHelper.UnwrapObject < int >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["GetIgnoreCollision"] = new BSFunctionReference(
                new BSFunction(
                    "function GetIgnoreCollision(collider1, collider2)",
                    a => Physics.GetIgnoreCollision(
                        WrapperHelper.UnwrapObject < Collider >( a[0] ),
                        WrapperHelper.UnwrapObject < Collider >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["Raycast"] = new BSFunctionReference(
                new BSFunction(
                    "function Raycast(origin, direction, maxDistance, layerMask)",
                    a => Physics.Raycast(
                        WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                        WrapperHelper.UnwrapObject < float >( a[2] ),
                        WrapperHelper.UnwrapObject < int >( a[3] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    4 ) );

            m_StaticProperties["Raycast"] = new BSFunctionReference(
                new BSFunction(
                    "function Raycast(origin, direction, maxDistance)",
                    a => Physics.Raycast(
                        WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                        WrapperHelper.UnwrapObject < float >( a[2] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    3 ) );

            m_StaticProperties["Raycast"] = new BSFunctionReference(
                new BSFunction(
                    "function Raycast(origin, direction)",
                    a => Physics.Raycast(
                        WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["Raycast"] = new BSFunctionReference(
                new BSFunction(
                    "function Raycast(ray, maxDistance, layerMask)",
                    a => Physics.Raycast(
                        WrapperHelper.UnwrapObject < Ray >( a[0] ),
                        WrapperHelper.UnwrapObject < float >( a[1] ),
                        WrapperHelper.UnwrapObject < int >( a[2] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    3 ) );

            m_StaticProperties["Raycast"] = new BSFunctionReference(
                new BSFunction(
                    "function Raycast(ray, maxDistance)",
                    a => Physics.Raycast(
                        WrapperHelper.UnwrapObject < Ray >( a[0] ),
                        WrapperHelper.UnwrapObject < float >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["Raycast"] = new BSFunctionReference(
                new BSFunction(
                    "function Raycast(ray)",
                    a => Physics.Raycast( WrapperHelper.UnwrapObject < Ray >( a[0] ) ) ? BSObject.One : BSObject.Zero,
                    1 ) );

            m_StaticProperties["Linecast"] = new BSFunctionReference(
                new BSFunction(
                    "function Linecast(start, end, layerMask)",
                    a => Physics.Linecast(
                        WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                        WrapperHelper.UnwrapObject < int >( a[2] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    3 ) );

            m_StaticProperties["Linecast"] = new BSFunctionReference(
                new BSFunction(
                    "function Linecast(start, end)",
                    a => Physics.Linecast(
                        WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["CapsuleCast"] = new BSFunctionReference(
                new BSFunction(
                    "function CapsuleCast(point1, point2, radius, direction, maxDistance, layerMask)",
                    a => Physics.CapsuleCast(
                        WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                        WrapperHelper.UnwrapObject < float >( a[2] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[3] ),
                        WrapperHelper.UnwrapObject < float >( a[4] ),
                        WrapperHelper.UnwrapObject < int >( a[5] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    6 ) );

            m_StaticProperties["CapsuleCast"] = new BSFunctionReference(
                new BSFunction(
                    "function CapsuleCast(point1, point2, radius, direction, maxDistance)",
                    a => Physics.CapsuleCast(
                        WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                        WrapperHelper.UnwrapObject < float >( a[2] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[3] ),
                        WrapperHelper.UnwrapObject < float >( a[4] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    5 ) );

            m_StaticProperties["CapsuleCast"] = new BSFunctionReference(
                new BSFunction(
                    "function CapsuleCast(point1, point2, radius, direction)",
                    a => Physics.CapsuleCast(
                        WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                        WrapperHelper.UnwrapObject < float >( a[2] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[3] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    4 ) );

            m_StaticProperties["SphereCast"] = new BSFunctionReference(
                new BSFunction(
                    "function SphereCast(ray, radius, maxDistance, layerMask)",
                    a => Physics.SphereCast(
                        WrapperHelper.UnwrapObject < Ray >( a[0] ),
                        WrapperHelper.UnwrapObject < float >( a[1] ),
                        WrapperHelper.UnwrapObject < float >( a[2] ),
                        WrapperHelper.UnwrapObject < int >( a[3] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    4 ) );

            m_StaticProperties["SphereCast"] = new BSFunctionReference(
                new BSFunction(
                    "function SphereCast(ray, radius, maxDistance)",
                    a => Physics.SphereCast(
                        WrapperHelper.UnwrapObject < Ray >( a[0] ),
                        WrapperHelper.UnwrapObject < float >( a[1] ),
                        WrapperHelper.UnwrapObject < float >( a[2] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    3 ) );

            m_StaticProperties["SphereCast"] = new BSFunctionReference(
                new BSFunction(
                    "function SphereCast(ray, radius)",
                    a => Physics.SphereCast(
                        WrapperHelper.UnwrapObject < Ray >( a[0] ),
                        WrapperHelper.UnwrapObject < float >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["BoxCast"] = new BSFunctionReference(
                new BSFunction(
                    "function BoxCast(center, halfExtents, direction, orientation, maxDistance, layerMask)",
                    a => Physics.BoxCast(
                        WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[2] ),
                        WrapperHelper.UnwrapObject < Quaternion >( a[3] ),
                        WrapperHelper.UnwrapObject < float >( a[4] ),
                        WrapperHelper.UnwrapObject < int >( a[5] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    6 ) );

            m_StaticProperties["BoxCast"] = new BSFunctionReference(
                new BSFunction(
                    "function BoxCast(center, halfExtents, direction, orientation, maxDistance)",
                    a => Physics.BoxCast(
                        WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[2] ),
                        WrapperHelper.UnwrapObject < Quaternion >( a[3] ),
                        WrapperHelper.UnwrapObject < float >( a[4] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    5 ) );

            m_StaticProperties["BoxCast"] = new BSFunctionReference(
                new BSFunction(
                    "function BoxCast(center, halfExtents, direction, orientation)",
                    a => Physics.BoxCast(
                        WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[2] ),
                        WrapperHelper.UnwrapObject < Quaternion >( a[3] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    4 ) );

            m_StaticProperties["BoxCast"] = new BSFunctionReference(
                new BSFunction(
                    "function BoxCast(center, halfExtents, direction)",
                    a => Physics.BoxCast(
                        WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[2] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    3 ) );

            m_StaticProperties["Simulate"] = new BSFunctionReference(
                new BSFunction(
                    "function Simulate(step)",
                    a =>
                    {
                        Physics.Simulate( WrapperHelper.UnwrapObject < float >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_StaticProperties["SyncTransforms"] = new BSFunctionReference(
                new BSFunction(
                    "function SyncTransforms()",
                    a =>
                    {
                        Physics.SyncTransforms();

                        return new BSObject( null );
                    },
                    0 ) );

            m_StaticProperties["ClosestPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function ClosestPoint(point, collider, position, rotation)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        Physics.ClosestPoint(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Collider >( a[1] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[2] ),
                            WrapperHelper.UnwrapObject < Quaternion >( a[3] ) ) ),
                    4 ) );

            m_StaticProperties["CheckSphere"] = new BSFunctionReference(
                new BSFunction(
                    "function CheckSphere(position, radius, layerMask)",
                    a => Physics.CheckSphere(
                        WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                        WrapperHelper.UnwrapObject < float >( a[1] ),
                        WrapperHelper.UnwrapObject < int >( a[2] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    3 ) );

            m_StaticProperties["CheckSphere"] = new BSFunctionReference(
                new BSFunction(
                    "function CheckSphere(position, radius)",
                    a => Physics.CheckSphere(
                        WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                        WrapperHelper.UnwrapObject < float >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["CheckCapsule"] = new BSFunctionReference(
                new BSFunction(
                    "function CheckCapsule(start, end, radius, layerMask)",
                    a => Physics.CheckCapsule(
                        WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                        WrapperHelper.UnwrapObject < float >( a[2] ),
                        WrapperHelper.UnwrapObject < int >( a[3] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    4 ) );

            m_StaticProperties["CheckCapsule"] = new BSFunctionReference(
                new BSFunction(
                    "function CheckCapsule(start, end, radius)",
                    a => Physics.CheckCapsule(
                        WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                        WrapperHelper.UnwrapObject < float >( a[2] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    3 ) );

            m_StaticProperties["CheckBox"] = new BSFunctionReference(
                new BSFunction(
                    "function CheckBox(center, halfExtents, orientation, layerMask)",
                    a => Physics.CheckBox(
                        WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                        WrapperHelper.UnwrapObject < Quaternion >( a[2] ),
                        WrapperHelper.UnwrapObject < int >( a[3] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    4 ) );

            m_StaticProperties["CheckBox"] = new BSFunctionReference(
                new BSFunction(
                    "function CheckBox(center, halfExtents, orientation)",
                    a => Physics.CheckBox(
                        WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                        WrapperHelper.UnwrapObject < Quaternion >( a[2] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    3 ) );

            m_StaticProperties["CheckBox"] = new BSFunctionReference(
                new BSFunction(
                    "function CheckBox(center, halfExtents)",
                    a => Physics.CheckBox(
                        WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                        WrapperHelper.UnwrapObject < Vector3 >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["RebuildBroadphaseRegions"] = new BSFunctionReference(
                new BSFunction(
                    "function RebuildBroadphaseRegions(worldBounds, subdivisions)",
                    a =>
                    {
                        Physics.RebuildBroadphaseRegions(
                            WrapperHelper.UnwrapObject < Bounds >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["BakeMesh"] = new BSFunctionReference(
                new BSFunction(
                    "function BakeMesh(meshID, convex)",
                    a =>
                    {
                        Physics.BakeMesh(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Physics()
        {
            WrapperHelper.AddRecastWrapper < Physics >( o => new BSWrapperObject_UnityEngine_Physics( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_PhysicsScene : BSWrapperObject < PhysicsScene >

    {
        #region Public

        public BSWrapperObject_UnityEngine_PhysicsScene( PhysicsScene obj ) : base( obj )
        {
            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < PhysicsScene >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["IsValid"] = new BSFunctionReference(
                new BSFunction(
                    "function IsValid()",
                    a => m_InternalObject.IsValid() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsEmpty"] = new BSFunctionReference(
                new BSFunction(
                    "function IsEmpty()",
                    a => m_InternalObject.IsEmpty() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["Simulate"] = new BSFunctionReference(
                new BSFunction(
                    "function Simulate(step)",
                    a =>
                    {
                        m_InternalObject.Simulate( WrapperHelper.UnwrapObject < float >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_PhysicsScene : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_PhysicsScene() : base( typeof( PhysicsScene ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_PhysicsScene()
        {
            WrapperHelper.AddRecastWrapper < PhysicsScene >( o => new BSWrapperObject_UnityEngine_PhysicsScene( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Collider : BSWrapperObject < Collider >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Collider( Collider obj ) : base( obj )
        {
            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["attachedRigidbody"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Rigidbody( m_InternalObject.attachedRigidbody ),
                null );

            m_Properties["attachedArticulationBody"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_ArticulationBody( m_InternalObject.attachedArticulationBody ),
                null );

            m_Properties["isTrigger"] = new BSReflectionReference(
                () => m_InternalObject.isTrigger ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.isTrigger = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["contactOffset"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.contactOffset ),
                x => m_InternalObject.contactOffset = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["bounds"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Bounds( m_InternalObject.bounds ),
                null );

            m_Properties["sharedMaterial"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_PhysicMaterial( m_InternalObject.sharedMaterial ),
                x => m_InternalObject.sharedMaterial = WrapperHelper.UnwrapObject < PhysicMaterial >( x ) );

            m_Properties["material"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_PhysicMaterial( m_InternalObject.material ),
                x => m_InternalObject.material = WrapperHelper.UnwrapObject < PhysicMaterial >( x ) );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["ClosestPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function ClosestPoint(position)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.ClosestPoint( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["ClosestPointOnBounds"] = new BSFunctionReference(
                new BSFunction(
                    "function ClosestPointOnBounds(position)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.ClosestPointOnBounds( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Collider : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Collider() : base( typeof( Collider ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Collider()
        {
            WrapperHelper.AddRecastWrapper < Collider >( o => new BSWrapperObject_UnityEngine_Collider( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Rigidbody : BSWrapperObject < Rigidbody >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Rigidbody( Rigidbody obj ) : base( obj )
        {
            m_Properties["velocity"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.velocity ),
                x => m_InternalObject.velocity = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["angularVelocity"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.angularVelocity ),
                x => m_InternalObject.angularVelocity = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["drag"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.drag ),
                x => m_InternalObject.drag = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["angularDrag"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.angularDrag ),
                x => m_InternalObject.angularDrag = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["mass"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.mass ),
                x => m_InternalObject.mass = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["useGravity"] = new BSReflectionReference(
                () => m_InternalObject.useGravity ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useGravity = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["maxDepenetrationVelocity"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.maxDepenetrationVelocity ),
                x => m_InternalObject.maxDepenetrationVelocity = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["isKinematic"] = new BSReflectionReference(
                () => m_InternalObject.isKinematic ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.isKinematic = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["freezeRotation"] = new BSReflectionReference(
                () => m_InternalObject.freezeRotation ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.freezeRotation = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["centerOfMass"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.centerOfMass ),
                x => m_InternalObject.centerOfMass = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["worldCenterOfMass"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.worldCenterOfMass ),
                null );

            m_Properties["inertiaTensorRotation"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Quaternion( m_InternalObject.inertiaTensorRotation ),
                x => m_InternalObject.inertiaTensorRotation = WrapperHelper.UnwrapObject < Quaternion >( x ) );

            m_Properties["inertiaTensor"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.inertiaTensor ),
                x => m_InternalObject.inertiaTensor = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["detectCollisions"] = new BSReflectionReference(
                () => m_InternalObject.detectCollisions ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.detectCollisions = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["position"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.position ),
                x => m_InternalObject.position = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["rotation"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Quaternion( m_InternalObject.rotation ),
                x => m_InternalObject.rotation = WrapperHelper.UnwrapObject < Quaternion >( x ) );

            m_Properties["solverIterations"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.solverIterations ),
                x => m_InternalObject.solverIterations = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["sleepThreshold"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.sleepThreshold ),
                x => m_InternalObject.sleepThreshold = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["maxAngularVelocity"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.maxAngularVelocity ),
                x => m_InternalObject.maxAngularVelocity = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["solverVelocityIterations"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.solverVelocityIterations ),
                x => m_InternalObject.solverVelocityIterations = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["sleepVelocity"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.sleepVelocity ),
                x => m_InternalObject.sleepVelocity = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["sleepAngularVelocity"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.sleepAngularVelocity ),
                x => m_InternalObject.sleepAngularVelocity = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["useConeFriction"] = new BSReflectionReference(
                () => m_InternalObject.useConeFriction ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useConeFriction = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["solverIterationCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.solverIterationCount ),
                x => m_InternalObject.solverIterationCount = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["solverVelocityIterationCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.solverVelocityIterationCount ),
                x => m_InternalObject.solverVelocityIterationCount = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["SetDensity"] = new BSFunctionReference(
                new BSFunction(
                    "function SetDensity(density)",
                    a =>
                    {
                        m_InternalObject.SetDensity( WrapperHelper.UnwrapObject < float >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["MovePosition"] = new BSFunctionReference(
                new BSFunction(
                    "function MovePosition(position)",
                    a =>
                    {
                        m_InternalObject.MovePosition( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["MoveRotation"] = new BSFunctionReference(
                new BSFunction(
                    "function MoveRotation(rot)",
                    a =>
                    {
                        m_InternalObject.MoveRotation( WrapperHelper.UnwrapObject < Quaternion >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Sleep"] = new BSFunctionReference(
                new BSFunction(
                    "function Sleep()",
                    a =>
                    {
                        m_InternalObject.Sleep();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["IsSleeping"] = new BSFunctionReference(
                new BSFunction(
                    "function IsSleeping()",
                    a => m_InternalObject.IsSleeping() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["WakeUp"] = new BSFunctionReference(
                new BSFunction(
                    "function WakeUp()",
                    a =>
                    {
                        m_InternalObject.WakeUp();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["ResetCenterOfMass"] = new BSFunctionReference(
                new BSFunction(
                    "function ResetCenterOfMass()",
                    a =>
                    {
                        m_InternalObject.ResetCenterOfMass();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["ResetInertiaTensor"] = new BSFunctionReference(
                new BSFunction(
                    "function ResetInertiaTensor()",
                    a =>
                    {
                        m_InternalObject.ResetInertiaTensor();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetRelativePointVelocity"] = new BSFunctionReference(
                new BSFunction(
                    "function GetRelativePointVelocity(relativePoint)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.GetRelativePointVelocity( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetPointVelocity"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPointVelocity(worldPoint)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.GetPointVelocity( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["SetMaxAngularVelocity"] = new BSFunctionReference(
                new BSFunction(
                    "function SetMaxAngularVelocity(a)",
                    a =>
                    {
                        m_InternalObject.SetMaxAngularVelocity( WrapperHelper.UnwrapObject < float >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["AddForce"] = new BSFunctionReference(
                new BSFunction(
                    "function AddForce(force)",
                    a =>
                    {
                        m_InternalObject.AddForce( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["AddForce"] = new BSFunctionReference(
                new BSFunction(
                    "function AddForce(x, y, z)",
                    a =>
                    {
                        m_InternalObject.AddForce(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["AddRelativeForce"] = new BSFunctionReference(
                new BSFunction(
                    "function AddRelativeForce(force)",
                    a =>
                    {
                        m_InternalObject.AddRelativeForce( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["AddRelativeForce"] = new BSFunctionReference(
                new BSFunction(
                    "function AddRelativeForce(x, y, z)",
                    a =>
                    {
                        m_InternalObject.AddRelativeForce(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["AddTorque"] = new BSFunctionReference(
                new BSFunction(
                    "function AddTorque(torque)",
                    a =>
                    {
                        m_InternalObject.AddTorque( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["AddTorque"] = new BSFunctionReference(
                new BSFunction(
                    "function AddTorque(x, y, z)",
                    a =>
                    {
                        m_InternalObject.AddTorque(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["AddRelativeTorque"] = new BSFunctionReference(
                new BSFunction(
                    "function AddRelativeTorque(torque)",
                    a =>
                    {
                        m_InternalObject.AddRelativeTorque( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["AddRelativeTorque"] = new BSFunctionReference(
                new BSFunction(
                    "function AddRelativeTorque(x, y, z)",
                    a =>
                    {
                        m_InternalObject.AddRelativeTorque(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["AddForceAtPosition"] = new BSFunctionReference(
                new BSFunction(
                    "function AddForceAtPosition(force, position)",
                    a =>
                    {
                        m_InternalObject.AddForceAtPosition(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddExplosionForce"] = new BSFunctionReference(
                new BSFunction(
                    "function AddExplosionForce(explosionForce, explosionPosition, explosionRadius, upwardsModifier)",
                    a =>
                    {
                        m_InternalObject.AddExplosionForce(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["AddExplosionForce"] = new BSFunctionReference(
                new BSFunction(
                    "function AddExplosionForce(explosionForce, explosionPosition, explosionRadius)",
                    a =>
                    {
                        m_InternalObject.AddExplosionForce(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["ClosestPointOnBounds"] = new BSFunctionReference(
                new BSFunction(
                    "function ClosestPointOnBounds(position)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.ClosestPointOnBounds( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Rigidbody : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Rigidbody() : base( typeof( Rigidbody ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Rigidbody()
        {
            WrapperHelper.AddRecastWrapper < Rigidbody >( o => new BSWrapperObject_UnityEngine_Rigidbody( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_ArticulationBody : BSWrapperObject < ArticulationBody >

    {
        #region Public

        public BSWrapperObject_UnityEngine_ArticulationBody( ArticulationBody obj ) : base( obj )
        {
            m_Properties["anchorPosition"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.anchorPosition ),
                x => m_InternalObject.anchorPosition = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["parentAnchorPosition"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.parentAnchorPosition ),
                x => m_InternalObject.parentAnchorPosition = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["anchorRotation"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Quaternion( m_InternalObject.anchorRotation ),
                x => m_InternalObject.anchorRotation = WrapperHelper.UnwrapObject < Quaternion >( x ) );

            m_Properties["parentAnchorRotation"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Quaternion( m_InternalObject.parentAnchorRotation ),
                x => m_InternalObject.parentAnchorRotation = WrapperHelper.UnwrapObject < Quaternion >( x ) );

            m_Properties["isRoot"] = new BSReflectionReference(
                () => m_InternalObject.isRoot ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["xDrive"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_ArticulationDrive( m_InternalObject.xDrive ),
                x => m_InternalObject.xDrive = WrapperHelper.UnwrapObject < ArticulationDrive >( x ) );

            m_Properties["yDrive"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_ArticulationDrive( m_InternalObject.yDrive ),
                x => m_InternalObject.yDrive = WrapperHelper.UnwrapObject < ArticulationDrive >( x ) );

            m_Properties["zDrive"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_ArticulationDrive( m_InternalObject.zDrive ),
                x => m_InternalObject.zDrive = WrapperHelper.UnwrapObject < ArticulationDrive >( x ) );

            m_Properties["immovable"] = new BSReflectionReference(
                () => m_InternalObject.immovable ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.immovable = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["useGravity"] = new BSReflectionReference(
                () => m_InternalObject.useGravity ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useGravity = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["linearDamping"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.linearDamping ),
                x => m_InternalObject.linearDamping = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["angularDamping"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.angularDamping ),
                x => m_InternalObject.angularDamping = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["jointFriction"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.jointFriction ),
                x => m_InternalObject.jointFriction = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["velocity"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.velocity ),
                x => m_InternalObject.velocity = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["angularVelocity"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.angularVelocity ),
                x => m_InternalObject.angularVelocity = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["mass"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.mass ),
                x => m_InternalObject.mass = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["centerOfMass"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.centerOfMass ),
                x => m_InternalObject.centerOfMass = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["worldCenterOfMass"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.worldCenterOfMass ),
                null );

            m_Properties["inertiaTensor"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.inertiaTensor ),
                x => m_InternalObject.inertiaTensor = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["inertiaTensorRotation"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Quaternion( m_InternalObject.inertiaTensorRotation ),
                x => m_InternalObject.inertiaTensorRotation = WrapperHelper.UnwrapObject < Quaternion >( x ) );

            m_Properties["sleepThreshold"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.sleepThreshold ),
                x => m_InternalObject.sleepThreshold = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["solverIterations"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.solverIterations ),
                x => m_InternalObject.solverIterations = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["solverVelocityIterations"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.solverVelocityIterations ),
                x => m_InternalObject.solverVelocityIterations = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["maxAngularVelocity"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.maxAngularVelocity ),
                x => m_InternalObject.maxAngularVelocity = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["maxLinearVelocity"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.maxLinearVelocity ),
                x => m_InternalObject.maxLinearVelocity = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["maxJointVelocity"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.maxJointVelocity ),
                x => m_InternalObject.maxJointVelocity = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["maxDepenetrationVelocity"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.maxDepenetrationVelocity ),
                x => m_InternalObject.maxDepenetrationVelocity = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["jointPosition"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_ArticulationReducedSpace( m_InternalObject.jointPosition ),
                x => m_InternalObject.jointPosition = WrapperHelper.UnwrapObject < ArticulationReducedSpace >( x ) );

            m_Properties["jointVelocity"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_ArticulationReducedSpace( m_InternalObject.jointVelocity ),
                x => m_InternalObject.jointVelocity = WrapperHelper.UnwrapObject < ArticulationReducedSpace >( x ) );

            m_Properties["jointAcceleration"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_ArticulationReducedSpace( m_InternalObject.jointAcceleration ),
                x => m_InternalObject.jointAcceleration =
                    WrapperHelper.UnwrapObject < ArticulationReducedSpace >( x ) );

            m_Properties["jointForce"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_ArticulationReducedSpace( m_InternalObject.jointForce ),
                x => m_InternalObject.jointForce = WrapperHelper.UnwrapObject < ArticulationReducedSpace >( x ) );

            m_Properties["dofCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.dofCount ),
                null );

            m_Properties["index"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.index ),
                null );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isActiveAndEnabled"] = new BSReflectionReference(
                () => m_InternalObject.isActiveAndEnabled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["AddForce"] = new BSFunctionReference(
                new BSFunction(
                    "function AddForce(force)",
                    a =>
                    {
                        m_InternalObject.AddForce( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["AddRelativeForce"] = new BSFunctionReference(
                new BSFunction(
                    "function AddRelativeForce(force)",
                    a =>
                    {
                        m_InternalObject.AddRelativeForce( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["AddTorque"] = new BSFunctionReference(
                new BSFunction(
                    "function AddTorque(torque)",
                    a =>
                    {
                        m_InternalObject.AddTorque( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["AddRelativeTorque"] = new BSFunctionReference(
                new BSFunction(
                    "function AddRelativeTorque(torque)",
                    a =>
                    {
                        m_InternalObject.AddRelativeTorque( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["AddForceAtPosition"] = new BSFunctionReference(
                new BSFunction(
                    "function AddForceAtPosition(force, position)",
                    a =>
                    {
                        m_InternalObject.AddForceAtPosition(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["ResetCenterOfMass"] = new BSFunctionReference(
                new BSFunction(
                    "function ResetCenterOfMass()",
                    a =>
                    {
                        m_InternalObject.ResetCenterOfMass();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["ResetInertiaTensor"] = new BSFunctionReference(
                new BSFunction(
                    "function ResetInertiaTensor()",
                    a =>
                    {
                        m_InternalObject.ResetInertiaTensor();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Sleep"] = new BSFunctionReference(
                new BSFunction(
                    "function Sleep()",
                    a =>
                    {
                        m_InternalObject.Sleep();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["IsSleeping"] = new BSFunctionReference(
                new BSFunction(
                    "function IsSleeping()",
                    a => m_InternalObject.IsSleeping() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["WakeUp"] = new BSFunctionReference(
                new BSFunction(
                    "function WakeUp()",
                    a =>
                    {
                        m_InternalObject.WakeUp();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["TeleportRoot"] = new BSFunctionReference(
                new BSFunction(
                    "function TeleportRoot(position, rotation)",
                    a =>
                    {
                        m_InternalObject.TeleportRoot(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Quaternion >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetClosestPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function GetClosestPoint(point)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.GetClosestPoint( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetRelativePointVelocity"] = new BSFunctionReference(
                new BSFunction(
                    "function GetRelativePointVelocity(relativePoint)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.GetRelativePointVelocity( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetPointVelocity"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPointVelocity(worldPoint)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.GetPointVelocity( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_ArticulationBody : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_ArticulationBody() : base( typeof( ArticulationBody ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_ArticulationBody()
        {
            WrapperHelper.AddRecastWrapper < ArticulationBody >(
                o => new BSWrapperObject_UnityEngine_ArticulationBody( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_ArticulationDrive : BSWrapperObject < ArticulationDrive >

    {
        #region Public

        public BSWrapperObject_UnityEngine_ArticulationDrive( ArticulationDrive obj ) : base( obj )
        {
            m_Properties["lowerLimit"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.lowerLimit ),
                x => m_InternalObject.lowerLimit = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["upperLimit"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.upperLimit ),
                x => m_InternalObject.upperLimit = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["stiffness"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.stiffness ),
                x => m_InternalObject.stiffness = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["damping"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.damping ),
                x => m_InternalObject.damping = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["forceLimit"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.forceLimit ),
                x => m_InternalObject.forceLimit = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["target"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.target ),
                x => m_InternalObject.target = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["targetVelocity"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.targetVelocity ),
                x => m_InternalObject.targetVelocity = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_ArticulationDrive : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_ArticulationDrive() : base( typeof( ArticulationDrive ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_ArticulationDrive()
        {
            WrapperHelper.AddRecastWrapper < ArticulationDrive >(
                o => new BSWrapperObject_UnityEngine_ArticulationDrive( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_ArticulationReducedSpace : BSWrapperObject < ArticulationReducedSpace >

    {
        #region Public

        public BSWrapperObject_UnityEngine_ArticulationReducedSpace( ArticulationReducedSpace obj ) : base( obj )
        {
            m_Properties["get_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function get_Item(i)",
                    a => new BSObject( ( decimal ) m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] )] ),
                    1 ) );

            m_Properties["set_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function set_Item(i, value)",
                    a =>
                    {
                        m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] )] =
                            WrapperHelper.UnwrapObject < float >( a[1] );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["dofCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.dofCount ),
                x => m_InternalObject.dofCount = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_ArticulationReducedSpace : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_ArticulationReducedSpace() : base( typeof( ArticulationReducedSpace ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_ArticulationReducedSpace()
        {
            WrapperHelper.AddRecastWrapper < ArticulationReducedSpace >(
                o => new BSWrapperObject_UnityEngine_ArticulationReducedSpace( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Bounds : BSWrapperObject < Bounds >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Bounds( Bounds obj ) : base( obj )
        {
            m_Properties["center"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.center ),
                x => m_InternalObject.center = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["size"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.size ),
                x => m_InternalObject.size = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["extents"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.extents ),
                x => m_InternalObject.extents = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["min"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.min ),
                x => m_InternalObject.min = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["max"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.max ),
                x => m_InternalObject.max = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < Bounds >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SetMinMax"] = new BSFunctionReference(
                new BSFunction(
                    "function SetMinMax(min, max)",
                    a =>
                    {
                        m_InternalObject.SetMinMax(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Encapsulate"] = new BSFunctionReference(
                new BSFunction(
                    "function Encapsulate(point)",
                    a =>
                    {
                        m_InternalObject.Encapsulate( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Encapsulate"] = new BSFunctionReference(
                new BSFunction(
                    "function Encapsulate(bounds)",
                    a =>
                    {
                        m_InternalObject.Encapsulate( WrapperHelper.UnwrapObject < Bounds >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Expand"] = new BSFunctionReference(
                new BSFunction(
                    "function Expand(amount)",
                    a =>
                    {
                        m_InternalObject.Expand( WrapperHelper.UnwrapObject < float >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Expand"] = new BSFunctionReference(
                new BSFunction(
                    "function Expand(amount)",
                    a =>
                    {
                        m_InternalObject.Expand( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Intersects"] = new BSFunctionReference(
                new BSFunction(
                    "function Intersects(bounds)",
                    a => m_InternalObject.Intersects( WrapperHelper.UnwrapObject < Bounds >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["IntersectRay"] = new BSFunctionReference(
                new BSFunction(
                    "function IntersectRay(ray)",
                    a => m_InternalObject.IntersectRay( WrapperHelper.UnwrapObject < Ray >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format)",
                    a => new BSObject( m_InternalObject.ToString( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format, formatProvider)",
                    a => new BSObject(
                        m_InternalObject.ToString(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < IFormatProvider >( a[1] ) ) ),
                    2 ) );

            m_Properties["Contains"] = new BSFunctionReference(
                new BSFunction(
                    "function Contains(point)",
                    a => m_InternalObject.Contains( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SqrDistance"] = new BSFunctionReference(
                new BSFunction(
                    "function SqrDistance(point)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.SqrDistance( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["ClosestPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function ClosestPoint(point)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.ClosestPoint( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Bounds : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Bounds() : base( typeof( Bounds ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Bounds()
        {
            WrapperHelper.AddRecastWrapper < Bounds >( o => new BSWrapperObject_UnityEngine_Bounds( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Ray : BSWrapperObject < Ray >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Ray( Ray obj ) : base( obj )
        {
            m_Properties["origin"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.origin ),
                x => m_InternalObject.origin = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["direction"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.direction ),
                x => m_InternalObject.direction = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["GetPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPoint(distance)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.GetPoint( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format)",
                    a => new BSObject( m_InternalObject.ToString( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format, formatProvider)",
                    a => new BSObject(
                        m_InternalObject.ToString(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < IFormatProvider >( a[1] ) ) ),
                    2 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Ray : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Ray() : base( typeof( Ray ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Ray()
        {
            WrapperHelper.AddRecastWrapper < Ray >( o => new BSWrapperObject_UnityEngine_Ray( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_PhysicMaterial : BSWrapperObject < PhysicMaterial >

    {
        #region Public

        public BSWrapperObject_UnityEngine_PhysicMaterial( PhysicMaterial obj ) : base( obj )
        {
            m_Properties["bounciness"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.bounciness ),
                x => m_InternalObject.bounciness = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["dynamicFriction"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.dynamicFriction ),
                x => m_InternalObject.dynamicFriction = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["staticFriction"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.staticFriction ),
                x => m_InternalObject.staticFriction = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["bouncyness"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.bouncyness ),
                x => m_InternalObject.bouncyness = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_PhysicMaterial : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_PhysicMaterial() : base( typeof( PhysicMaterial ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_PhysicMaterial()
        {
            WrapperHelper.AddRecastWrapper < PhysicMaterial >(
                o => new BSWrapperObject_UnityEngine_PhysicMaterial( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Input : BSWrapperObject < Input >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Input( Input obj ) : base( obj )
        {
            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Input : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Input() : base( typeof( Input ) )
        {
            m_StaticProperties["simulateMouseWithTouches"] = new BSReflectionReference(
                () => Input.simulateMouseWithTouches ? BSObject.One : BSObject.Zero,
                x => Input.simulateMouseWithTouches = WrapperHelper.UnwrapObject < bool >( x ) );

            m_StaticProperties["anyKey"] = new BSReflectionReference(
                () => Input.anyKey ? BSObject.One : BSObject.Zero,
                null );

            m_StaticProperties["anyKeyDown"] = new BSReflectionReference(
                () => Input.anyKeyDown ? BSObject.One : BSObject.Zero,
                null );

            m_StaticProperties["inputString"] =
                new BSReflectionReference( () => new BSObject( Input.inputString ), null );

            m_StaticProperties["mousePosition"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( Input.mousePosition ),
                null );

            m_StaticProperties["mouseScrollDelta"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( Input.mouseScrollDelta ),
                null );

            m_StaticProperties["compositionString"] = new BSReflectionReference(
                () => new BSObject( Input.compositionString ),
                null );

            m_StaticProperties["imeIsSelected"] = new BSReflectionReference(
                () => Input.imeIsSelected ? BSObject.One : BSObject.Zero,
                null );

            m_StaticProperties["compositionCursorPos"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( Input.compositionCursorPos ),
                x => Input.compositionCursorPos = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_StaticProperties["eatKeyPressOnTextFieldFocus"] = new BSReflectionReference(
                () => Input.eatKeyPressOnTextFieldFocus ? BSObject.One : BSObject.Zero,
                x => Input.eatKeyPressOnTextFieldFocus = WrapperHelper.UnwrapObject < bool >( x ) );

            m_StaticProperties["mousePresent"] = new BSReflectionReference(
                () => Input.mousePresent ? BSObject.One : BSObject.Zero,
                null );

            m_StaticProperties["touchCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Input.touchCount ),
                null );

            m_StaticProperties["touchPressureSupported"] = new BSReflectionReference(
                () => Input.touchPressureSupported ? BSObject.One : BSObject.Zero,
                null );

            m_StaticProperties["stylusTouchSupported"] = new BSReflectionReference(
                () => Input.stylusTouchSupported ? BSObject.One : BSObject.Zero,
                null );

            m_StaticProperties["touchSupported"] = new BSReflectionReference(
                () => Input.touchSupported ? BSObject.One : BSObject.Zero,
                null );

            m_StaticProperties["multiTouchEnabled"] = new BSReflectionReference(
                () => Input.multiTouchEnabled ? BSObject.One : BSObject.Zero,
                x => Input.multiTouchEnabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_StaticProperties["isGyroAvailable"] = new BSReflectionReference(
                () => Input.isGyroAvailable ? BSObject.One : BSObject.Zero,
                null );

            m_StaticProperties["acceleration"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( Input.acceleration ),
                null );

            m_StaticProperties["compensateSensors"] = new BSReflectionReference(
                () => Input.compensateSensors ? BSObject.One : BSObject.Zero,
                x => Input.compensateSensors = WrapperHelper.UnwrapObject < bool >( x ) );

            m_StaticProperties["accelerationEventCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Input.accelerationEventCount ),
                null );

            m_StaticProperties["backButtonLeavesApp"] = new BSReflectionReference(
                () => Input.backButtonLeavesApp ? BSObject.One : BSObject.Zero,
                x => Input.backButtonLeavesApp = WrapperHelper.UnwrapObject < bool >( x ) );

            m_StaticProperties["location"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_LocationService( Input.location ),
                null );

            m_StaticProperties["compass"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Compass( Input.compass ),
                null );

            m_StaticProperties["gyro"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Gyroscope( Input.gyro ),
                null );

            m_StaticProperties["GetAxis"] = new BSFunctionReference(
                new BSFunction(
                    "function GetAxis(axisName)",
                    a => new BSObject( ( decimal ) Input.GetAxis( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetAxisRaw"] = new BSFunctionReference(
                new BSFunction(
                    "function GetAxisRaw(axisName)",
                    a => new BSObject( ( decimal ) Input.GetAxisRaw( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetButton"] = new BSFunctionReference(
                new BSFunction(
                    "function GetButton(buttonName)",
                    a => Input.GetButton( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["GetButtonDown"] = new BSFunctionReference(
                new BSFunction(
                    "function GetButtonDown(buttonName)",
                    a => Input.GetButtonDown( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["GetButtonUp"] = new BSFunctionReference(
                new BSFunction(
                    "function GetButtonUp(buttonName)",
                    a => Input.GetButtonUp( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["GetMouseButton"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMouseButton(button)",
                    a => Input.GetMouseButton( WrapperHelper.UnwrapObject < int >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["GetMouseButtonDown"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMouseButtonDown(button)",
                    a => Input.GetMouseButtonDown( WrapperHelper.UnwrapObject < int >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["GetMouseButtonUp"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMouseButtonUp(button)",
                    a => Input.GetMouseButtonUp( WrapperHelper.UnwrapObject < int >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["ResetInputAxes"] = new BSFunctionReference(
                new BSFunction(
                    "function ResetInputAxes()",
                    a =>
                    {
                        Input.ResetInputAxes();

                        return new BSObject( null );
                    },
                    0 ) );

            m_StaticProperties["IsJoystickPreconfigured"] = new BSFunctionReference(
                new BSFunction(
                    "function IsJoystickPreconfigured(joystickName)",
                    a => Input.IsJoystickPreconfigured( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["GetTouch"] = new BSFunctionReference(
                new BSFunction(
                    "function GetTouch(index)",
                    a => new BSWrapperObject_UnityEngine_Touch(
                        Input.GetTouch( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetAccelerationEvent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetAccelerationEvent(index)",
                    a => new BSWrapperObject_UnityEngine_AccelerationEvent(
                        Input.GetAccelerationEvent( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetKey"] = new BSFunctionReference(
                new BSFunction(
                    "function GetKey(name)",
                    a => Input.GetKey( WrapperHelper.UnwrapObject < string >( a[0] ) ) ? BSObject.One : BSObject.Zero,
                    1 ) );

            m_StaticProperties["GetKeyUp"] = new BSFunctionReference(
                new BSFunction(
                    "function GetKeyUp(name)",
                    a => Input.GetKeyUp( WrapperHelper.UnwrapObject < string >( a[0] ) ) ? BSObject.One : BSObject.Zero,
                    1 ) );

            m_StaticProperties["GetKeyDown"] = new BSFunctionReference(
                new BSFunction(
                    "function GetKeyDown(name)",
                    a => Input.GetKeyDown( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Input()
        {
            WrapperHelper.AddRecastWrapper < Input >( o => new BSWrapperObject_UnityEngine_Input( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Vector2 : BSWrapperObject < Vector2 >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Vector2( Vector2 obj ) : base( obj )
        {
            m_Properties["get_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function get_Item(index)",
                    a => new BSObject( ( decimal ) m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] )] ),
                    1 ) );

            m_Properties["set_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function set_Item(index, value)",
                    a =>
                    {
                        m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] )] =
                            WrapperHelper.UnwrapObject < float >( a[1] );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["normalized"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.normalized ),
                null );

            m_Properties["magnitude"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.magnitude ),
                null );

            m_Properties["sqrMagnitude"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.sqrMagnitude ),
                null );

            m_Properties["x"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.x ),
                x => m_InternalObject.x = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["y"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.y ),
                x => m_InternalObject.y = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["Set"] = new BSFunctionReference(
                new BSFunction(
                    "function Set(newX, newY)",
                    a =>
                    {
                        m_InternalObject.Set(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Scale"] = new BSFunctionReference(
                new BSFunction(
                    "function Scale(scale)",
                    a =>
                    {
                        m_InternalObject.Scale( WrapperHelper.UnwrapObject < Vector2 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Normalize"] = new BSFunctionReference(
                new BSFunction(
                    "function Normalize()",
                    a =>
                    {
                        m_InternalObject.Normalize();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format)",
                    a => new BSObject( m_InternalObject.ToString( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format, formatProvider)",
                    a => new BSObject(
                        m_InternalObject.ToString(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < IFormatProvider >( a[1] ) ) ),
                    2 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < Vector2 >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SqrMagnitude"] = new BSFunctionReference(
                new BSFunction(
                    "function SqrMagnitude()",
                    a => new BSObject( ( decimal ) m_InternalObject.SqrMagnitude() ),
                    0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Vector2 : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Vector2() : base( typeof( Vector2 ) )
        {
            m_StaticProperties["zero"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( Vector2.zero ),
                null );

            m_StaticProperties["one"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( Vector2.one ),
                null );

            m_StaticProperties["up"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( Vector2.up ),
                null );

            m_StaticProperties["down"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( Vector2.down ),
                null );

            m_StaticProperties["left"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( Vector2.left ),
                null );

            m_StaticProperties["right"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( Vector2.right ),
                null );

            m_StaticProperties["positiveInfinity"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( Vector2.positiveInfinity ),
                null );

            m_StaticProperties["negativeInfinity"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( Vector2.negativeInfinity ),
                null );

            m_StaticProperties["kEpsilon"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Vector2.kEpsilon ),
                null );

            m_StaticProperties["kEpsilonNormalSqrt"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Vector2.kEpsilonNormalSqrt ),
                null );

            m_StaticProperties["Lerp"] = new BSFunctionReference(
                new BSFunction(
                    "function Lerp(a, b, t)",
                    a => new BSWrapperObject_UnityEngine_Vector2(
                        Vector2.Lerp(
                            WrapperHelper.UnwrapObject < Vector2 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["LerpUnclamped"] = new BSFunctionReference(
                new BSFunction(
                    "function LerpUnclamped(a, b, t)",
                    a => new BSWrapperObject_UnityEngine_Vector2(
                        Vector2.LerpUnclamped(
                            WrapperHelper.UnwrapObject < Vector2 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["MoveTowards"] = new BSFunctionReference(
                new BSFunction(
                    "function MoveTowards(current, target, maxDistanceDelta)",
                    a => new BSWrapperObject_UnityEngine_Vector2(
                        Vector2.MoveTowards(
                            WrapperHelper.UnwrapObject < Vector2 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["Scale"] = new BSFunctionReference(
                new BSFunction(
                    "function Scale(a, b)",
                    a => new BSWrapperObject_UnityEngine_Vector2(
                        Vector2.Scale(
                            WrapperHelper.UnwrapObject < Vector2 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Reflect"] = new BSFunctionReference(
                new BSFunction(
                    "function Reflect(inDirection, inNormal)",
                    a => new BSWrapperObject_UnityEngine_Vector2(
                        Vector2.Reflect(
                            WrapperHelper.UnwrapObject < Vector2 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Perpendicular"] = new BSFunctionReference(
                new BSFunction(
                    "function Perpendicular(inDirection)",
                    a => new BSWrapperObject_UnityEngine_Vector2(
                        Vector2.Perpendicular( WrapperHelper.UnwrapObject < Vector2 >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Dot"] = new BSFunctionReference(
                new BSFunction(
                    "function Dot(lhs, rhs)",
                    a => new BSObject(
                        ( decimal ) Vector2.Dot(
                            WrapperHelper.UnwrapObject < Vector2 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Angle"] = new BSFunctionReference(
                new BSFunction(
                    "function Angle(from, to)",
                    a => new BSObject(
                        ( decimal ) Vector2.Angle(
                            WrapperHelper.UnwrapObject < Vector2 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["SignedAngle"] = new BSFunctionReference(
                new BSFunction(
                    "function SignedAngle(from, to)",
                    a => new BSObject(
                        ( decimal ) Vector2.SignedAngle(
                            WrapperHelper.UnwrapObject < Vector2 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Distance"] = new BSFunctionReference(
                new BSFunction(
                    "function Distance(a, b)",
                    a => new BSObject(
                        ( decimal ) Vector2.Distance(
                            WrapperHelper.UnwrapObject < Vector2 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["ClampMagnitude"] = new BSFunctionReference(
                new BSFunction(
                    "function ClampMagnitude(vector, maxLength)",
                    a => new BSWrapperObject_UnityEngine_Vector2(
                        Vector2.ClampMagnitude(
                            WrapperHelper.UnwrapObject < Vector2 >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["SqrMagnitude"] = new BSFunctionReference(
                new BSFunction(
                    "function SqrMagnitude(a)",
                    a => new BSObject(
                        ( decimal ) Vector2.SqrMagnitude( WrapperHelper.UnwrapObject < Vector2 >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Min"] = new BSFunctionReference(
                new BSFunction(
                    "function Min(lhs, rhs)",
                    a => new BSWrapperObject_UnityEngine_Vector2(
                        Vector2.Min(
                            WrapperHelper.UnwrapObject < Vector2 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Max"] = new BSFunctionReference(
                new BSFunction(
                    "function Max(lhs, rhs)",
                    a => new BSWrapperObject_UnityEngine_Vector2(
                        Vector2.Max(
                            WrapperHelper.UnwrapObject < Vector2 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[1] ) ) ),
                    2 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Vector2()
        {
            WrapperHelper.AddRecastWrapper < Vector2 >( o => new BSWrapperObject_UnityEngine_Vector2( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_LocationService : BSWrapperObject < LocationService >

    {
        #region Public

        public BSWrapperObject_UnityEngine_LocationService( LocationService obj ) : base( obj )
        {
            m_Properties["isEnabledByUser"] = new BSReflectionReference(
                () => m_InternalObject.isEnabledByUser ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["lastData"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_LocationInfo( m_InternalObject.lastData ),
                null );

            m_Properties["Start"] = new BSFunctionReference(
                new BSFunction(
                    "function Start(desiredAccuracyInMeters, updateDistanceInMeters)",
                    a =>
                    {
                        m_InternalObject.Start(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Start"] = new BSFunctionReference(
                new BSFunction(
                    "function Start(desiredAccuracyInMeters)",
                    a =>
                    {
                        m_InternalObject.Start( WrapperHelper.UnwrapObject < float >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Start"] = new BSFunctionReference(
                new BSFunction(
                    "function Start()",
                    a =>
                    {
                        m_InternalObject.Start();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Stop"] = new BSFunctionReference(
                new BSFunction(
                    "function Stop()",
                    a =>
                    {
                        m_InternalObject.Stop();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_LocationService : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_LocationService() : base( typeof( LocationService ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_LocationService()
        {
            WrapperHelper.AddRecastWrapper < LocationService >(
                o => new BSWrapperObject_UnityEngine_LocationService( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_LocationInfo : BSWrapperObject < LocationInfo >

    {
        #region Public

        public BSWrapperObject_UnityEngine_LocationInfo( LocationInfo obj ) : base( obj )
        {
            m_Properties["latitude"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.latitude ),
                null );

            m_Properties["longitude"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.longitude ),
                null );

            m_Properties["altitude"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.altitude ),
                null );

            m_Properties["horizontalAccuracy"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.horizontalAccuracy ),
                null );

            m_Properties["verticalAccuracy"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.verticalAccuracy ),
                null );

            m_Properties["timestamp"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.timestamp ),
                null );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_LocationInfo : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_LocationInfo() : base( typeof( LocationInfo ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_LocationInfo()
        {
            WrapperHelper.AddRecastWrapper < LocationInfo >( o => new BSWrapperObject_UnityEngine_LocationInfo( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Compass : BSWrapperObject < Compass >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Compass( Compass obj ) : base( obj )
        {
            m_Properties["magneticHeading"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.magneticHeading ),
                null );

            m_Properties["trueHeading"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.trueHeading ),
                null );

            m_Properties["headingAccuracy"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.headingAccuracy ),
                null );

            m_Properties["rawVector"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.rawVector ),
                null );

            m_Properties["timestamp"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.timestamp ),
                null );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Compass : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Compass() : base( typeof( Compass ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Compass()
        {
            WrapperHelper.AddRecastWrapper < Compass >( o => new BSWrapperObject_UnityEngine_Compass( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Gyroscope : BSWrapperObject < Gyroscope >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Gyroscope( Gyroscope obj ) : base( obj )
        {
            m_Properties["rotationRate"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.rotationRate ),
                null );

            m_Properties["rotationRateUnbiased"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.rotationRateUnbiased ),
                null );

            m_Properties["gravity"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.gravity ),
                null );

            m_Properties["userAcceleration"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.userAcceleration ),
                null );

            m_Properties["attitude"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Quaternion( m_InternalObject.attitude ),
                null );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["updateInterval"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.updateInterval ),
                x => m_InternalObject.updateInterval = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Gyroscope : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Gyroscope() : base( typeof( Gyroscope ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Gyroscope()
        {
            WrapperHelper.AddRecastWrapper < Gyroscope >( o => new BSWrapperObject_UnityEngine_Gyroscope( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Touch : BSWrapperObject < Touch >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Touch( Touch obj ) : base( obj )
        {
            m_Properties["fingerId"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.fingerId ),
                x => m_InternalObject.fingerId = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["position"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.position ),
                x => m_InternalObject.position = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["rawPosition"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.rawPosition ),
                x => m_InternalObject.rawPosition = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["deltaPosition"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.deltaPosition ),
                x => m_InternalObject.deltaPosition = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["deltaTime"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.deltaTime ),
                x => m_InternalObject.deltaTime = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["tapCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.tapCount ),
                x => m_InternalObject.tapCount = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["pressure"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.pressure ),
                x => m_InternalObject.pressure = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["maximumPossiblePressure"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.maximumPossiblePressure ),
                x => m_InternalObject.maximumPossiblePressure = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["altitudeAngle"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.altitudeAngle ),
                x => m_InternalObject.altitudeAngle = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["azimuthAngle"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.azimuthAngle ),
                x => m_InternalObject.azimuthAngle = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["radius"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.radius ),
                x => m_InternalObject.radius = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["radiusVariance"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.radiusVariance ),
                x => m_InternalObject.radiusVariance = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Touch : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Touch() : base( typeof( Touch ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Touch()
        {
            WrapperHelper.AddRecastWrapper < Touch >( o => new BSWrapperObject_UnityEngine_Touch( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_AccelerationEvent : BSWrapperObject < AccelerationEvent >

    {
        #region Public

        public BSWrapperObject_UnityEngine_AccelerationEvent( AccelerationEvent obj ) : base( obj )
        {
            m_Properties["acceleration"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.acceleration ),
                null );

            m_Properties["deltaTime"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.deltaTime ),
                null );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_AccelerationEvent : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_AccelerationEvent() : base( typeof( AccelerationEvent ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_AccelerationEvent()
        {
            WrapperHelper.AddRecastWrapper < AccelerationEvent >(
                o => new BSWrapperObject_UnityEngine_AccelerationEvent( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_UI_Slider : BSWrapperObject < Slider >

    {
        #region Public

        public BSWrapperObject_UnityEngine_UI_Slider( Slider obj ) : base( obj )
        {
            m_Properties["fillRect"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_RectTransform( m_InternalObject.fillRect ),
                x => m_InternalObject.fillRect = WrapperHelper.UnwrapObject < RectTransform >( x ) );

            m_Properties["handleRect"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_RectTransform( m_InternalObject.handleRect ),
                x => m_InternalObject.handleRect = WrapperHelper.UnwrapObject < RectTransform >( x ) );

            m_Properties["minValue"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.minValue ),
                x => m_InternalObject.minValue = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["maxValue"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.maxValue ),
                x => m_InternalObject.maxValue = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["wholeNumbers"] = new BSReflectionReference(
                () => m_InternalObject.wholeNumbers ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.wholeNumbers = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["value"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.value ),
                x => m_InternalObject.value = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["normalizedValue"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.normalizedValue ),
                x => m_InternalObject.normalizedValue = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["navigation"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_Navigation( m_InternalObject.navigation ),
                x => m_InternalObject.navigation = WrapperHelper.UnwrapObject < Navigation >( x ) );

            m_Properties["colors"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_ColorBlock( m_InternalObject.colors ),
                x => m_InternalObject.colors = WrapperHelper.UnwrapObject < ColorBlock >( x ) );

            m_Properties["spriteState"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_SpriteState( m_InternalObject.spriteState ),
                x => m_InternalObject.spriteState = WrapperHelper.UnwrapObject < SpriteState >( x ) );

            m_Properties["animationTriggers"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_AnimationTriggers( m_InternalObject.animationTriggers ),
                x => m_InternalObject.animationTriggers = WrapperHelper.UnwrapObject < AnimationTriggers >( x ) );

            m_Properties["targetGraphic"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_Graphic( m_InternalObject.targetGraphic ),
                x => m_InternalObject.targetGraphic = WrapperHelper.UnwrapObject < Graphic >( x ) );

            m_Properties["interactable"] = new BSReflectionReference(
                () => m_InternalObject.interactable ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.interactable = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["image"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_Image( m_InternalObject.image ),
                x => m_InternalObject.image = WrapperHelper.UnwrapObject < Image >( x ) );

            m_Properties["animator"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Animator( m_InternalObject.animator ),
                null );

            m_Properties["useGUILayout"] = new BSReflectionReference(
                () => m_InternalObject.useGUILayout ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useGUILayout = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["runInEditMode"] = new BSReflectionReference(
                () => m_InternalObject.runInEditMode ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.runInEditMode = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isActiveAndEnabled"] = new BSReflectionReference(
                () => m_InternalObject.isActiveAndEnabled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["SetValueWithoutNotify"] = new BSFunctionReference(
                new BSFunction(
                    "function SetValueWithoutNotify(input)",
                    a =>
                    {
                        m_InternalObject.SetValueWithoutNotify( WrapperHelper.UnwrapObject < float >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["LayoutComplete"] = new BSFunctionReference(
                new BSFunction(
                    "function LayoutComplete()",
                    a =>
                    {
                        m_InternalObject.LayoutComplete();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GraphicUpdateComplete"] = new BSFunctionReference(
                new BSFunction(
                    "function GraphicUpdateComplete()",
                    a =>
                    {
                        m_InternalObject.GraphicUpdateComplete();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["OnPointerDown"] = new BSFunctionReference(
                new BSFunction(
                    "function OnPointerDown(eventData)",
                    a =>
                    {
                        m_InternalObject.OnPointerDown( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnDrag"] = new BSFunctionReference(
                new BSFunction(
                    "function OnDrag(eventData)",
                    a =>
                    {
                        m_InternalObject.OnDrag( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnMove"] = new BSFunctionReference(
                new BSFunction(
                    "function OnMove(eventData)",
                    a =>
                    {
                        m_InternalObject.OnMove( WrapperHelper.UnwrapObject < AxisEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["FindSelectableOnLeft"] = new BSFunctionReference(
                new BSFunction(
                    "function FindSelectableOnLeft()",
                    a => new BSWrapperObject_UnityEngine_UI_Selectable( m_InternalObject.FindSelectableOnLeft() ),
                    0 ) );

            m_Properties["FindSelectableOnRight"] = new BSFunctionReference(
                new BSFunction(
                    "function FindSelectableOnRight()",
                    a => new BSWrapperObject_UnityEngine_UI_Selectable( m_InternalObject.FindSelectableOnRight() ),
                    0 ) );

            m_Properties["FindSelectableOnUp"] = new BSFunctionReference(
                new BSFunction(
                    "function FindSelectableOnUp()",
                    a => new BSWrapperObject_UnityEngine_UI_Selectable( m_InternalObject.FindSelectableOnUp() ),
                    0 ) );

            m_Properties["FindSelectableOnDown"] = new BSFunctionReference(
                new BSFunction(
                    "function FindSelectableOnDown()",
                    a => new BSWrapperObject_UnityEngine_UI_Selectable( m_InternalObject.FindSelectableOnDown() ),
                    0 ) );

            m_Properties["OnInitializePotentialDrag"] = new BSFunctionReference(
                new BSFunction(
                    "function OnInitializePotentialDrag(eventData)",
                    a =>
                    {
                        m_InternalObject.OnInitializePotentialDrag(
                            WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsInteractable"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInteractable()",
                    a => m_InternalObject.IsInteractable() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["FindSelectable"] = new BSFunctionReference(
                new BSFunction(
                    "function FindSelectable(dir)",
                    a => new BSWrapperObject_UnityEngine_UI_Selectable(
                        m_InternalObject.FindSelectable( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["OnPointerUp"] = new BSFunctionReference(
                new BSFunction(
                    "function OnPointerUp(eventData)",
                    a =>
                    {
                        m_InternalObject.OnPointerUp( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnPointerEnter"] = new BSFunctionReference(
                new BSFunction(
                    "function OnPointerEnter(eventData)",
                    a =>
                    {
                        m_InternalObject.OnPointerEnter( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnPointerExit"] = new BSFunctionReference(
                new BSFunction(
                    "function OnPointerExit(eventData)",
                    a =>
                    {
                        m_InternalObject.OnPointerExit( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnSelect"] = new BSFunctionReference(
                new BSFunction(
                    "function OnSelect(eventData)",
                    a =>
                    {
                        m_InternalObject.OnSelect( WrapperHelper.UnwrapObject < BaseEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnDeselect"] = new BSFunctionReference(
                new BSFunction(
                    "function OnDeselect(eventData)",
                    a =>
                    {
                        m_InternalObject.OnDeselect( WrapperHelper.UnwrapObject < BaseEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Select"] = new BSFunctionReference(
                new BSFunction(
                    "function Select()",
                    a =>
                    {
                        m_InternalObject.Select();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["IsActive"] = new BSFunctionReference(
                new BSFunction(
                    "function IsActive()",
                    a => m_InternalObject.IsActive() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsDestroyed"] = new BSFunctionReference(
                new BSFunction(
                    "function IsDestroyed()",
                    a => m_InternalObject.IsDestroyed() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking()",
                    a => m_InternalObject.IsInvoking() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke()",
                    a =>
                    {
                        m_InternalObject.CancelInvoke();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Invoke"] = new BSFunctionReference(
                new BSFunction(
                    "function Invoke(methodName, time)",
                    a =>
                    {
                        m_InternalObject.Invoke(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["InvokeRepeating"] = new BSFunctionReference(
                new BSFunction(
                    "function InvokeRepeating(methodName, time, repeatRate)",
                    a =>
                    {
                        m_InternalObject.InvokeRepeating(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke(methodName)",
                    a =>
                    {
                        m_InternalObject.CancelInvoke( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking(methodName)",
                    a => m_InternalObject.IsInvoking( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName, value)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) ) ),
                    2 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine_Auto"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine_Auto(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine_Auto( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < Coroutine >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(methodName)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopAllCoroutines"] = new BSFunctionReference(
                new BSFunction(
                    "function StopAllCoroutines()",
                    a =>
                    {
                        m_InternalObject.StopAllCoroutines();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_UI_Slider : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_UI_Slider() : base( typeof( Slider ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_UI_Slider()
        {
            WrapperHelper.AddRecastWrapper < Slider >( o => new BSWrapperObject_UnityEngine_UI_Slider( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_RectTransform : BSWrapperObject < RectTransform >

    {
        #region Public

        public BSWrapperObject_UnityEngine_RectTransform( RectTransform obj ) : base( obj )
        {
            m_Properties["rect"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Rect( m_InternalObject.rect ),
                null );

            m_Properties["anchorMin"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.anchorMin ),
                x => m_InternalObject.anchorMin = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["anchorMax"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.anchorMax ),
                x => m_InternalObject.anchorMax = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["anchoredPosition"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.anchoredPosition ),
                x => m_InternalObject.anchoredPosition = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["sizeDelta"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.sizeDelta ),
                x => m_InternalObject.sizeDelta = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["pivot"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.pivot ),
                x => m_InternalObject.pivot = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["anchoredPosition3D"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.anchoredPosition3D ),
                x => m_InternalObject.anchoredPosition3D = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["offsetMin"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.offsetMin ),
                x => m_InternalObject.offsetMin = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["offsetMax"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.offsetMax ),
                x => m_InternalObject.offsetMax = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["position"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.position ),
                x => m_InternalObject.position = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["localPosition"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.localPosition ),
                x => m_InternalObject.localPosition = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["eulerAngles"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.eulerAngles ),
                x => m_InternalObject.eulerAngles = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["localEulerAngles"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.localEulerAngles ),
                x => m_InternalObject.localEulerAngles = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["right"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.right ),
                x => m_InternalObject.right = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["up"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.up ),
                x => m_InternalObject.up = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["forward"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.forward ),
                x => m_InternalObject.forward = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["rotation"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Quaternion( m_InternalObject.rotation ),
                x => m_InternalObject.rotation = WrapperHelper.UnwrapObject < Quaternion >( x ) );

            m_Properties["localRotation"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Quaternion( m_InternalObject.localRotation ),
                x => m_InternalObject.localRotation = WrapperHelper.UnwrapObject < Quaternion >( x ) );

            m_Properties["localScale"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.localScale ),
                x => m_InternalObject.localScale = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["parent"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.parent ),
                x => m_InternalObject.parent = WrapperHelper.UnwrapObject < Transform >( x ) );

            m_Properties["worldToLocalMatrix"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Matrix4x4( m_InternalObject.worldToLocalMatrix ),
                null );

            m_Properties["localToWorldMatrix"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Matrix4x4( m_InternalObject.localToWorldMatrix ),
                null );

            m_Properties["root"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.root ),
                null );

            m_Properties["childCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.childCount ),
                null );

            m_Properties["lossyScale"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.lossyScale ),
                null );

            m_Properties["hasChanged"] = new BSReflectionReference(
                () => m_InternalObject.hasChanged ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.hasChanged = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["hierarchyCapacity"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.hierarchyCapacity ),
                x => m_InternalObject.hierarchyCapacity = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["hierarchyCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.hierarchyCount ),
                null );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["ForceUpdateRectTransforms"] = new BSFunctionReference(
                new BSFunction(
                    "function ForceUpdateRectTransforms()",
                    a =>
                    {
                        m_InternalObject.ForceUpdateRectTransforms();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetParent"] = new BSFunctionReference(
                new BSFunction(
                    "function SetParent(p)",
                    a =>
                    {
                        m_InternalObject.SetParent( WrapperHelper.UnwrapObject < Transform >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetParent"] = new BSFunctionReference(
                new BSFunction(
                    "function SetParent(parent, worldPositionStays)",
                    a =>
                    {
                        m_InternalObject.SetParent(
                            WrapperHelper.UnwrapObject < Transform >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetPositionAndRotation"] = new BSFunctionReference(
                new BSFunction(
                    "function SetPositionAndRotation(position, rotation)",
                    a =>
                    {
                        m_InternalObject.SetPositionAndRotation(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Quaternion >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Translate"] = new BSFunctionReference(
                new BSFunction(
                    "function Translate(translation)",
                    a =>
                    {
                        m_InternalObject.Translate( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Translate"] = new BSFunctionReference(
                new BSFunction(
                    "function Translate(x, y, z)",
                    a =>
                    {
                        m_InternalObject.Translate(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["Translate"] = new BSFunctionReference(
                new BSFunction(
                    "function Translate(translation, relativeTo)",
                    a =>
                    {
                        m_InternalObject.Translate(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Transform >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Translate"] = new BSFunctionReference(
                new BSFunction(
                    "function Translate(x, y, z, relativeTo)",
                    a =>
                    {
                        m_InternalObject.Translate(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ),
                            WrapperHelper.UnwrapObject < Transform >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["Rotate"] = new BSFunctionReference(
                new BSFunction(
                    "function Rotate(eulers)",
                    a =>
                    {
                        m_InternalObject.Rotate( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Rotate"] = new BSFunctionReference(
                new BSFunction(
                    "function Rotate(xAngle, yAngle, zAngle)",
                    a =>
                    {
                        m_InternalObject.Rotate(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["Rotate"] = new BSFunctionReference(
                new BSFunction(
                    "function Rotate(axis, angle)",
                    a =>
                    {
                        m_InternalObject.Rotate(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["RotateAround"] = new BSFunctionReference(
                new BSFunction(
                    "function RotateAround(point, axis, angle)",
                    a =>
                    {
                        m_InternalObject.RotateAround(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["LookAt"] = new BSFunctionReference(
                new BSFunction(
                    "function LookAt(target, worldUp)",
                    a =>
                    {
                        m_InternalObject.LookAt(
                            WrapperHelper.UnwrapObject < Transform >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["LookAt"] = new BSFunctionReference(
                new BSFunction(
                    "function LookAt(target)",
                    a =>
                    {
                        m_InternalObject.LookAt( WrapperHelper.UnwrapObject < Transform >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["LookAt"] = new BSFunctionReference(
                new BSFunction(
                    "function LookAt(worldPosition, worldUp)",
                    a =>
                    {
                        m_InternalObject.LookAt(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["LookAt"] = new BSFunctionReference(
                new BSFunction(
                    "function LookAt(worldPosition)",
                    a =>
                    {
                        m_InternalObject.LookAt( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["TransformDirection"] = new BSFunctionReference(
                new BSFunction(
                    "function TransformDirection(direction)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.TransformDirection( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["TransformDirection"] = new BSFunctionReference(
                new BSFunction(
                    "function TransformDirection(x, y, z)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.TransformDirection(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_Properties["InverseTransformDirection"] = new BSFunctionReference(
                new BSFunction(
                    "function InverseTransformDirection(direction)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.InverseTransformDirection( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["InverseTransformDirection"] = new BSFunctionReference(
                new BSFunction(
                    "function InverseTransformDirection(x, y, z)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.InverseTransformDirection(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_Properties["TransformVector"] = new BSFunctionReference(
                new BSFunction(
                    "function TransformVector(vector)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.TransformVector( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["TransformVector"] = new BSFunctionReference(
                new BSFunction(
                    "function TransformVector(x, y, z)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.TransformVector(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_Properties["InverseTransformVector"] = new BSFunctionReference(
                new BSFunction(
                    "function InverseTransformVector(vector)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.InverseTransformVector( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["InverseTransformVector"] = new BSFunctionReference(
                new BSFunction(
                    "function InverseTransformVector(x, y, z)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.InverseTransformVector(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_Properties["TransformPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function TransformPoint(position)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.TransformPoint( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["TransformPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function TransformPoint(x, y, z)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.TransformPoint(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_Properties["InverseTransformPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function InverseTransformPoint(position)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.InverseTransformPoint( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["InverseTransformPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function InverseTransformPoint(x, y, z)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.InverseTransformPoint(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_Properties["DetachChildren"] = new BSFunctionReference(
                new BSFunction(
                    "function DetachChildren()",
                    a =>
                    {
                        m_InternalObject.DetachChildren();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetAsFirstSibling"] = new BSFunctionReference(
                new BSFunction(
                    "function SetAsFirstSibling()",
                    a =>
                    {
                        m_InternalObject.SetAsFirstSibling();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetAsLastSibling"] = new BSFunctionReference(
                new BSFunction(
                    "function SetAsLastSibling()",
                    a =>
                    {
                        m_InternalObject.SetAsLastSibling();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetSiblingIndex"] = new BSFunctionReference(
                new BSFunction(
                    "function SetSiblingIndex(index)",
                    a =>
                    {
                        m_InternalObject.SetSiblingIndex( WrapperHelper.UnwrapObject < int >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetSiblingIndex"] = new BSFunctionReference(
                new BSFunction(
                    "function GetSiblingIndex()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetSiblingIndex() ),
                    0 ) );

            m_Properties["Find"] = new BSFunctionReference(
                new BSFunction(
                    "function Find(n)",
                    a => new BSWrapperObject_UnityEngine_Transform(
                        m_InternalObject.Find( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["IsChildOf"] = new BSFunctionReference(
                new BSFunction(
                    "function IsChildOf(parent)",
                    a => m_InternalObject.IsChildOf( WrapperHelper.UnwrapObject < Transform >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["FindChild"] = new BSFunctionReference(
                new BSFunction(
                    "function FindChild(n)",
                    a => new BSWrapperObject_UnityEngine_Transform(
                        m_InternalObject.FindChild( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetEnumerator"] = new BSFunctionReference(
                new BSFunction(
                    "function GetEnumerator()",
                    a => new BSWrapperObject_System_Collections_IEnumerator( m_InternalObject.GetEnumerator() ),
                    0 ) );

            m_Properties["RotateAround"] = new BSFunctionReference(
                new BSFunction(
                    "function RotateAround(axis, angle)",
                    a =>
                    {
                        m_InternalObject.RotateAround(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["RotateAroundLocal"] = new BSFunctionReference(
                new BSFunction(
                    "function RotateAroundLocal(axis, angle)",
                    a =>
                    {
                        m_InternalObject.RotateAroundLocal(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetChild"] = new BSFunctionReference(
                new BSFunction(
                    "function GetChild(index)",
                    a => new BSWrapperObject_UnityEngine_Transform(
                        m_InternalObject.GetChild( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetChildCount"] = new BSFunctionReference(
                new BSFunction(
                    "function GetChildCount()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetChildCount() ),
                    0 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_RectTransform : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_RectTransform() : base( typeof( RectTransform ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_RectTransform()
        {
            WrapperHelper.AddRecastWrapper < RectTransform >( o => new BSWrapperObject_UnityEngine_RectTransform( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Rect : BSWrapperObject < Rect >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Rect( Rect obj ) : base( obj )
        {
            m_Properties["x"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.x ),
                x => m_InternalObject.x = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["y"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.y ),
                x => m_InternalObject.y = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["position"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.position ),
                x => m_InternalObject.position = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["center"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.center ),
                x => m_InternalObject.center = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["min"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.min ),
                x => m_InternalObject.min = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["max"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.max ),
                x => m_InternalObject.max = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["width"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.width ),
                x => m_InternalObject.width = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["height"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.height ),
                x => m_InternalObject.height = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["size"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.size ),
                x => m_InternalObject.size = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["xMin"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.xMin ),
                x => m_InternalObject.xMin = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["yMin"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.yMin ),
                x => m_InternalObject.yMin = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["xMax"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.xMax ),
                x => m_InternalObject.xMax = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["yMax"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.yMax ),
                x => m_InternalObject.yMax = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["left"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.left ),
                null );

            m_Properties["right"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.right ),
                null );

            m_Properties["top"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.top ),
                null );

            m_Properties["bottom"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.bottom ),
                null );

            m_Properties["Set"] = new BSFunctionReference(
                new BSFunction(
                    "function Set(x, y, width, height)",
                    a =>
                    {
                        m_InternalObject.Set(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["Contains"] = new BSFunctionReference(
                new BSFunction(
                    "function Contains(point)",
                    a => m_InternalObject.Contains( WrapperHelper.UnwrapObject < Vector2 >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Contains"] = new BSFunctionReference(
                new BSFunction(
                    "function Contains(point)",
                    a => m_InternalObject.Contains( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Contains"] = new BSFunctionReference(
                new BSFunction(
                    "function Contains(point, allowInverse)",
                    a => m_InternalObject.Contains(
                        WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                        WrapperHelper.UnwrapObject < bool >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_Properties["Overlaps"] = new BSFunctionReference(
                new BSFunction(
                    "function Overlaps(other)",
                    a => m_InternalObject.Overlaps( WrapperHelper.UnwrapObject < Rect >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Overlaps"] = new BSFunctionReference(
                new BSFunction(
                    "function Overlaps(other, allowInverse)",
                    a => m_InternalObject.Overlaps(
                        WrapperHelper.UnwrapObject < Rect >( a[0] ),
                        WrapperHelper.UnwrapObject < bool >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < Rect >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format)",
                    a => new BSObject( m_InternalObject.ToString( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format, formatProvider)",
                    a => new BSObject(
                        m_InternalObject.ToString(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < IFormatProvider >( a[1] ) ) ),
                    2 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Rect : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Rect() : base( typeof( Rect ) )
        {
            m_StaticProperties["zero"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Rect( Rect.zero ),
                null );

            m_StaticProperties["MinMaxRect"] = new BSFunctionReference(
                new BSFunction(
                    "function MinMaxRect(xmin, ymin, xmax, ymax)",
                    a => new BSWrapperObject_UnityEngine_Rect(
                        Rect.MinMaxRect(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ) ) ),
                    4 ) );

            m_StaticProperties["NormalizedToPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function NormalizedToPoint(rectangle, normalizedRectCoordinates)",
                    a => new BSWrapperObject_UnityEngine_Vector2(
                        Rect.NormalizedToPoint(
                            WrapperHelper.UnwrapObject < Rect >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["PointToNormalized"] = new BSFunctionReference(
                new BSFunction(
                    "function PointToNormalized(rectangle, point)",
                    a => new BSWrapperObject_UnityEngine_Vector2(
                        Rect.PointToNormalized(
                            WrapperHelper.UnwrapObject < Rect >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[1] ) ) ),
                    2 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Rect()
        {
            WrapperHelper.AddRecastWrapper < Rect >( o => new BSWrapperObject_UnityEngine_Rect( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_UI_Navigation : BSWrapperObject < Navigation >

    {
        #region Public

        public BSWrapperObject_UnityEngine_UI_Navigation( Navigation obj ) : base( obj )
        {
            m_Properties["wrapAround"] = new BSReflectionReference(
                () => m_InternalObject.wrapAround ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.wrapAround = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["selectOnUp"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_Selectable( m_InternalObject.selectOnUp ),
                x => m_InternalObject.selectOnUp = WrapperHelper.UnwrapObject < Selectable >( x ) );

            m_Properties["selectOnDown"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_Selectable( m_InternalObject.selectOnDown ),
                x => m_InternalObject.selectOnDown = WrapperHelper.UnwrapObject < Selectable >( x ) );

            m_Properties["selectOnLeft"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_Selectable( m_InternalObject.selectOnLeft ),
                x => m_InternalObject.selectOnLeft = WrapperHelper.UnwrapObject < Selectable >( x ) );

            m_Properties["selectOnRight"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_Selectable( m_InternalObject.selectOnRight ),
                x => m_InternalObject.selectOnRight = WrapperHelper.UnwrapObject < Selectable >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < Navigation >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_UI_Navigation : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_UI_Navigation() : base( typeof( Navigation ) )
        {
            m_StaticProperties["defaultNavigation"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_Navigation( Navigation.defaultNavigation ),
                null );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_UI_Navigation()
        {
            WrapperHelper.AddRecastWrapper < Navigation >( o => new BSWrapperObject_UnityEngine_UI_Navigation( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_UI_Selectable : BSWrapperObject < Selectable >

    {
        #region Public

        public BSWrapperObject_UnityEngine_UI_Selectable( Selectable obj ) : base( obj )
        {
            m_Properties["navigation"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_Navigation( m_InternalObject.navigation ),
                x => m_InternalObject.navigation = WrapperHelper.UnwrapObject < Navigation >( x ) );

            m_Properties["colors"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_ColorBlock( m_InternalObject.colors ),
                x => m_InternalObject.colors = WrapperHelper.UnwrapObject < ColorBlock >( x ) );

            m_Properties["spriteState"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_SpriteState( m_InternalObject.spriteState ),
                x => m_InternalObject.spriteState = WrapperHelper.UnwrapObject < SpriteState >( x ) );

            m_Properties["animationTriggers"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_AnimationTriggers( m_InternalObject.animationTriggers ),
                x => m_InternalObject.animationTriggers = WrapperHelper.UnwrapObject < AnimationTriggers >( x ) );

            m_Properties["targetGraphic"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_Graphic( m_InternalObject.targetGraphic ),
                x => m_InternalObject.targetGraphic = WrapperHelper.UnwrapObject < Graphic >( x ) );

            m_Properties["interactable"] = new BSReflectionReference(
                () => m_InternalObject.interactable ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.interactable = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["image"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_Image( m_InternalObject.image ),
                x => m_InternalObject.image = WrapperHelper.UnwrapObject < Image >( x ) );

            m_Properties["animator"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Animator( m_InternalObject.animator ),
                null );

            m_Properties["useGUILayout"] = new BSReflectionReference(
                () => m_InternalObject.useGUILayout ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useGUILayout = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["runInEditMode"] = new BSReflectionReference(
                () => m_InternalObject.runInEditMode ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.runInEditMode = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isActiveAndEnabled"] = new BSReflectionReference(
                () => m_InternalObject.isActiveAndEnabled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["IsInteractable"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInteractable()",
                    a => m_InternalObject.IsInteractable() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["FindSelectable"] = new BSFunctionReference(
                new BSFunction(
                    "function FindSelectable(dir)",
                    a => new BSWrapperObject_UnityEngine_UI_Selectable(
                        m_InternalObject.FindSelectable( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["FindSelectableOnLeft"] = new BSFunctionReference(
                new BSFunction(
                    "function FindSelectableOnLeft()",
                    a => new BSWrapperObject_UnityEngine_UI_Selectable( m_InternalObject.FindSelectableOnLeft() ),
                    0 ) );

            m_Properties["FindSelectableOnRight"] = new BSFunctionReference(
                new BSFunction(
                    "function FindSelectableOnRight()",
                    a => new BSWrapperObject_UnityEngine_UI_Selectable( m_InternalObject.FindSelectableOnRight() ),
                    0 ) );

            m_Properties["FindSelectableOnUp"] = new BSFunctionReference(
                new BSFunction(
                    "function FindSelectableOnUp()",
                    a => new BSWrapperObject_UnityEngine_UI_Selectable( m_InternalObject.FindSelectableOnUp() ),
                    0 ) );

            m_Properties["FindSelectableOnDown"] = new BSFunctionReference(
                new BSFunction(
                    "function FindSelectableOnDown()",
                    a => new BSWrapperObject_UnityEngine_UI_Selectable( m_InternalObject.FindSelectableOnDown() ),
                    0 ) );

            m_Properties["OnMove"] = new BSFunctionReference(
                new BSFunction(
                    "function OnMove(eventData)",
                    a =>
                    {
                        m_InternalObject.OnMove( WrapperHelper.UnwrapObject < AxisEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnPointerDown"] = new BSFunctionReference(
                new BSFunction(
                    "function OnPointerDown(eventData)",
                    a =>
                    {
                        m_InternalObject.OnPointerDown( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnPointerUp"] = new BSFunctionReference(
                new BSFunction(
                    "function OnPointerUp(eventData)",
                    a =>
                    {
                        m_InternalObject.OnPointerUp( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnPointerEnter"] = new BSFunctionReference(
                new BSFunction(
                    "function OnPointerEnter(eventData)",
                    a =>
                    {
                        m_InternalObject.OnPointerEnter( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnPointerExit"] = new BSFunctionReference(
                new BSFunction(
                    "function OnPointerExit(eventData)",
                    a =>
                    {
                        m_InternalObject.OnPointerExit( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnSelect"] = new BSFunctionReference(
                new BSFunction(
                    "function OnSelect(eventData)",
                    a =>
                    {
                        m_InternalObject.OnSelect( WrapperHelper.UnwrapObject < BaseEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnDeselect"] = new BSFunctionReference(
                new BSFunction(
                    "function OnDeselect(eventData)",
                    a =>
                    {
                        m_InternalObject.OnDeselect( WrapperHelper.UnwrapObject < BaseEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Select"] = new BSFunctionReference(
                new BSFunction(
                    "function Select()",
                    a =>
                    {
                        m_InternalObject.Select();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["IsActive"] = new BSFunctionReference(
                new BSFunction(
                    "function IsActive()",
                    a => m_InternalObject.IsActive() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsDestroyed"] = new BSFunctionReference(
                new BSFunction(
                    "function IsDestroyed()",
                    a => m_InternalObject.IsDestroyed() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking()",
                    a => m_InternalObject.IsInvoking() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke()",
                    a =>
                    {
                        m_InternalObject.CancelInvoke();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Invoke"] = new BSFunctionReference(
                new BSFunction(
                    "function Invoke(methodName, time)",
                    a =>
                    {
                        m_InternalObject.Invoke(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["InvokeRepeating"] = new BSFunctionReference(
                new BSFunction(
                    "function InvokeRepeating(methodName, time, repeatRate)",
                    a =>
                    {
                        m_InternalObject.InvokeRepeating(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke(methodName)",
                    a =>
                    {
                        m_InternalObject.CancelInvoke( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking(methodName)",
                    a => m_InternalObject.IsInvoking( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName, value)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) ) ),
                    2 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine_Auto"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine_Auto(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine_Auto( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < Coroutine >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(methodName)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopAllCoroutines"] = new BSFunctionReference(
                new BSFunction(
                    "function StopAllCoroutines()",
                    a =>
                    {
                        m_InternalObject.StopAllCoroutines();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_UI_Selectable : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_UI_Selectable() : base( typeof( Selectable ) )
        {
            m_StaticProperties["allSelectableCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Selectable.allSelectableCount ),
                null );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_UI_Selectable()
        {
            WrapperHelper.AddRecastWrapper < Selectable >( o => new BSWrapperObject_UnityEngine_UI_Selectable( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_UI_ColorBlock : BSWrapperObject < ColorBlock >

    {
        #region Public

        public BSWrapperObject_UnityEngine_UI_ColorBlock( ColorBlock obj ) : base( obj )
        {
            m_Properties["normalColor"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( m_InternalObject.normalColor ),
                x => m_InternalObject.normalColor = WrapperHelper.UnwrapObject < Color >( x ) );

            m_Properties["highlightedColor"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( m_InternalObject.highlightedColor ),
                x => m_InternalObject.highlightedColor = WrapperHelper.UnwrapObject < Color >( x ) );

            m_Properties["pressedColor"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( m_InternalObject.pressedColor ),
                x => m_InternalObject.pressedColor = WrapperHelper.UnwrapObject < Color >( x ) );

            m_Properties["selectedColor"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( m_InternalObject.selectedColor ),
                x => m_InternalObject.selectedColor = WrapperHelper.UnwrapObject < Color >( x ) );

            m_Properties["disabledColor"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( m_InternalObject.disabledColor ),
                x => m_InternalObject.disabledColor = WrapperHelper.UnwrapObject < Color >( x ) );

            m_Properties["colorMultiplier"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.colorMultiplier ),
                x => m_InternalObject.colorMultiplier = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["fadeDuration"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.fadeDuration ),
                x => m_InternalObject.fadeDuration = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < ColorBlock >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_UI_ColorBlock : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_UI_ColorBlock() : base( typeof( ColorBlock ) )
        {
            m_StaticProperties["defaultColorBlock"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_ColorBlock( ColorBlock.defaultColorBlock ),
                x => ColorBlock.defaultColorBlock = WrapperHelper.UnwrapObject < ColorBlock >( x ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_UI_ColorBlock()
        {
            WrapperHelper.AddRecastWrapper < ColorBlock >( o => new BSWrapperObject_UnityEngine_UI_ColorBlock( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Color : BSWrapperObject < Color >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Color( Color obj ) : base( obj )
        {
            m_Properties["grayscale"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.grayscale ),
                null );

            m_Properties["linear"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( m_InternalObject.linear ),
                null );

            m_Properties["gamma"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( m_InternalObject.gamma ),
                null );

            m_Properties["maxColorComponent"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.maxColorComponent ),
                null );

            m_Properties["get_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function get_Item(index)",
                    a => new BSObject( ( decimal ) m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] )] ),
                    1 ) );

            m_Properties["set_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function set_Item(index, value)",
                    a =>
                    {
                        m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] )] =
                            WrapperHelper.UnwrapObject < float >( a[1] );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["r"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.r ),
                x => m_InternalObject.r = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["g"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.g ),
                x => m_InternalObject.g = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["b"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.b ),
                x => m_InternalObject.b = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["a"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.a ),
                x => m_InternalObject.a = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format)",
                    a => new BSObject( m_InternalObject.ToString( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format, formatProvider)",
                    a => new BSObject(
                        m_InternalObject.ToString(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < IFormatProvider >( a[1] ) ) ),
                    2 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < Color >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Color : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Color() : base( typeof( Color ) )
        {
            m_StaticProperties["red"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( Color.red ),
                null );

            m_StaticProperties["green"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( Color.green ),
                null );

            m_StaticProperties["blue"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( Color.blue ),
                null );

            m_StaticProperties["white"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( Color.white ),
                null );

            m_StaticProperties["black"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( Color.black ),
                null );

            m_StaticProperties["yellow"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( Color.yellow ),
                null );

            m_StaticProperties["cyan"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( Color.cyan ),
                null );

            m_StaticProperties["magenta"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( Color.magenta ),
                null );

            m_StaticProperties["gray"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( Color.gray ),
                null );

            m_StaticProperties["grey"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( Color.grey ),
                null );

            m_StaticProperties["clear"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( Color.clear ),
                null );

            m_StaticProperties["Lerp"] = new BSFunctionReference(
                new BSFunction(
                    "function Lerp(a, b, t)",
                    a => new BSWrapperObject_UnityEngine_Color(
                        Color.Lerp(
                            WrapperHelper.UnwrapObject < Color >( a[0] ),
                            WrapperHelper.UnwrapObject < Color >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["LerpUnclamped"] = new BSFunctionReference(
                new BSFunction(
                    "function LerpUnclamped(a, b, t)",
                    a => new BSWrapperObject_UnityEngine_Color(
                        Color.LerpUnclamped(
                            WrapperHelper.UnwrapObject < Color >( a[0] ),
                            WrapperHelper.UnwrapObject < Color >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["HSVToRGB"] = new BSFunctionReference(
                new BSFunction(
                    "function HSVToRGB(H, S, V)",
                    a => new BSWrapperObject_UnityEngine_Color(
                        Color.HSVToRGB(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["HSVToRGB"] = new BSFunctionReference(
                new BSFunction(
                    "function HSVToRGB(H, S, V, hdr)",
                    a => new BSWrapperObject_UnityEngine_Color(
                        Color.HSVToRGB(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ),
                            WrapperHelper.UnwrapObject < bool >( a[3] ) ) ),
                    4 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Color()
        {
            WrapperHelper.AddRecastWrapper < Color >( o => new BSWrapperObject_UnityEngine_Color( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_UI_SpriteState : BSWrapperObject < SpriteState >

    {
        #region Public

        public BSWrapperObject_UnityEngine_UI_SpriteState( SpriteState obj ) : base( obj )
        {
            m_Properties["highlightedSprite"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Sprite( m_InternalObject.highlightedSprite ),
                x => m_InternalObject.highlightedSprite = WrapperHelper.UnwrapObject < Sprite >( x ) );

            m_Properties["pressedSprite"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Sprite( m_InternalObject.pressedSprite ),
                x => m_InternalObject.pressedSprite = WrapperHelper.UnwrapObject < Sprite >( x ) );

            m_Properties["selectedSprite"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Sprite( m_InternalObject.selectedSprite ),
                x => m_InternalObject.selectedSprite = WrapperHelper.UnwrapObject < Sprite >( x ) );

            m_Properties["disabledSprite"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Sprite( m_InternalObject.disabledSprite ),
                x => m_InternalObject.disabledSprite = WrapperHelper.UnwrapObject < Sprite >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < SpriteState >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_UI_SpriteState : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_UI_SpriteState() : base( typeof( SpriteState ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_UI_SpriteState()
        {
            WrapperHelper.AddRecastWrapper < SpriteState >( o => new BSWrapperObject_UnityEngine_UI_SpriteState( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Sprite : BSWrapperObject < Sprite >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Sprite( Sprite obj ) : base( obj )
        {
            m_Properties["bounds"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Bounds( m_InternalObject.bounds ),
                null );

            m_Properties["rect"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Rect( m_InternalObject.rect ),
                null );

            m_Properties["border"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector4( m_InternalObject.border ),
                null );

            m_Properties["texture"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Texture2D( m_InternalObject.texture ),
                null );

            m_Properties["pixelsPerUnit"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.pixelsPerUnit ),
                null );

            m_Properties["spriteAtlasTextureScale"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.spriteAtlasTextureScale ),
                null );

            m_Properties["associatedAlphaSplitTexture"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Texture2D( m_InternalObject.associatedAlphaSplitTexture ),
                null );

            m_Properties["pivot"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.pivot ),
                null );

            m_Properties["packed"] = new BSReflectionReference(
                () => m_InternalObject.packed ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["textureRect"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Rect( m_InternalObject.textureRect ),
                null );

            m_Properties["textureRectOffset"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.textureRectOffset ),
                null );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["GetPhysicsShapeCount"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPhysicsShapeCount()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetPhysicsShapeCount() ),
                    0 ) );

            m_Properties["GetPhysicsShapePointCount"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPhysicsShapePointCount(shapeIdx)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetPhysicsShapePointCount(
                            WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Sprite : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Sprite() : base( typeof( Sprite ) )
        {
            m_StaticProperties["Create"] = new BSFunctionReference(
                new BSFunction(
                    "function Create(texture, rect, pivot, pixelsPerUnit, extrude)",
                    a => new BSWrapperObject_UnityEngine_Sprite(
                        Sprite.Create(
                            WrapperHelper.UnwrapObject < Texture2D >( a[0] ),
                            WrapperHelper.UnwrapObject < Rect >( a[1] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ),
                            WrapperHelper.UnwrapObject < uint >( a[4] ) ) ),
                    5 ) );

            m_StaticProperties["Create"] = new BSFunctionReference(
                new BSFunction(
                    "function Create(texture, rect, pivot, pixelsPerUnit)",
                    a => new BSWrapperObject_UnityEngine_Sprite(
                        Sprite.Create(
                            WrapperHelper.UnwrapObject < Texture2D >( a[0] ),
                            WrapperHelper.UnwrapObject < Rect >( a[1] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ) ) ),
                    4 ) );

            m_StaticProperties["Create"] = new BSFunctionReference(
                new BSFunction(
                    "function Create(texture, rect, pivot)",
                    a => new BSWrapperObject_UnityEngine_Sprite(
                        Sprite.Create(
                            WrapperHelper.UnwrapObject < Texture2D >( a[0] ),
                            WrapperHelper.UnwrapObject < Rect >( a[1] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[2] ) ) ),
                    3 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Sprite()
        {
            WrapperHelper.AddRecastWrapper < Sprite >( o => new BSWrapperObject_UnityEngine_Sprite( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Texture2D : BSWrapperObject < Texture2D >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Texture2D( Texture2D obj ) : base( obj )
        {
            m_Properties["isReadable"] = new BSReflectionReference(
                () => m_InternalObject.isReadable ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["vtOnly"] = new BSReflectionReference(
                () => m_InternalObject.vtOnly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["streamingMipmaps"] = new BSReflectionReference(
                () => m_InternalObject.streamingMipmaps ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["streamingMipmapsPriority"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.streamingMipmapsPriority ),
                null );

            m_Properties["requestedMipmapLevel"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.requestedMipmapLevel ),
                x => m_InternalObject.requestedMipmapLevel = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["minimumMipmapLevel"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.minimumMipmapLevel ),
                x => m_InternalObject.minimumMipmapLevel = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["calculatedMipmapLevel"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.calculatedMipmapLevel ),
                null );

            m_Properties["desiredMipmapLevel"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.desiredMipmapLevel ),
                null );

            m_Properties["loadingMipmapLevel"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.loadingMipmapLevel ),
                null );

            m_Properties["loadedMipmapLevel"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.loadedMipmapLevel ),
                null );

            m_Properties["alphaIsTransparency"] = new BSReflectionReference(
                () => m_InternalObject.alphaIsTransparency ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.alphaIsTransparency = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["mipmapCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.mipmapCount ),
                null );

            m_Properties["width"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.width ),
                x => m_InternalObject.width = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["height"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.height ),
                x => m_InternalObject.height = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["anisoLevel"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.anisoLevel ),
                x => m_InternalObject.anisoLevel = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["mipMapBias"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.mipMapBias ),
                x => m_InternalObject.mipMapBias = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["texelSize"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.texelSize ),
                null );

            m_Properties["updateCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.updateCount ),
                null );

            m_Properties["imageContentsHash"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Hash128( m_InternalObject.imageContentsHash ),
                x => m_InternalObject.imageContentsHash = WrapperHelper.UnwrapObject < Hash128 >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["Compress"] = new BSFunctionReference(
                new BSFunction(
                    "function Compress(highQuality)",
                    a =>
                    {
                        m_InternalObject.Compress( WrapperHelper.UnwrapObject < bool >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["ClearRequestedMipmapLevel"] = new BSFunctionReference(
                new BSFunction(
                    "function ClearRequestedMipmapLevel()",
                    a =>
                    {
                        m_InternalObject.ClearRequestedMipmapLevel();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["IsRequestedMipmapLevelLoaded"] = new BSFunctionReference(
                new BSFunction(
                    "function IsRequestedMipmapLevelLoaded()",
                    a => m_InternalObject.IsRequestedMipmapLevelLoaded() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["ClearMinimumMipmapLevel"] = new BSFunctionReference(
                new BSFunction(
                    "function ClearMinimumMipmapLevel()",
                    a =>
                    {
                        m_InternalObject.ClearMinimumMipmapLevel();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["UpdateExternalTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function UpdateExternalTexture(nativeTex)",
                    a =>
                    {
                        m_InternalObject.UpdateExternalTexture( WrapperHelper.UnwrapObject < IntPtr >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetPixel"] = new BSFunctionReference(
                new BSFunction(
                    "function SetPixel(x, y, color)",
                    a =>
                    {
                        m_InternalObject.SetPixel(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < Color >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetPixel"] = new BSFunctionReference(
                new BSFunction(
                    "function SetPixel(x, y, color, mipLevel)",
                    a =>
                    {
                        m_InternalObject.SetPixel(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < Color >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["GetPixel"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPixel(x, y)",
                    a => new BSWrapperObject_UnityEngine_Color(
                        m_InternalObject.GetPixel(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_Properties["GetPixel"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPixel(x, y, mipLevel)",
                    a => new BSWrapperObject_UnityEngine_Color(
                        m_InternalObject.GetPixel(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) ) ),
                    3 ) );

            m_Properties["GetPixelBilinear"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPixelBilinear(u, v)",
                    a => new BSWrapperObject_UnityEngine_Color(
                        m_InternalObject.GetPixelBilinear(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) ) ),
                    2 ) );

            m_Properties["GetPixelBilinear"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPixelBilinear(u, v, mipLevel)",
                    a => new BSWrapperObject_UnityEngine_Color(
                        m_InternalObject.GetPixelBilinear(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) ) ),
                    3 ) );

            m_Properties["LoadRawTextureData"] = new BSFunctionReference(
                new BSFunction(
                    "function LoadRawTextureData(data, size)",
                    a =>
                    {
                        m_InternalObject.LoadRawTextureData(
                            WrapperHelper.UnwrapObject < IntPtr >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Apply"] = new BSFunctionReference(
                new BSFunction(
                    "function Apply(updateMipmaps, makeNoLongerReadable)",
                    a =>
                    {
                        m_InternalObject.Apply(
                            WrapperHelper.UnwrapObject < bool >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Apply"] = new BSFunctionReference(
                new BSFunction(
                    "function Apply(updateMipmaps)",
                    a =>
                    {
                        m_InternalObject.Apply( WrapperHelper.UnwrapObject < bool >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Apply"] = new BSFunctionReference(
                new BSFunction(
                    "function Apply()",
                    a =>
                    {
                        m_InternalObject.Apply();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Resize"] = new BSFunctionReference(
                new BSFunction(
                    "function Resize(width, height)",
                    a => m_InternalObject.Resize(
                        WrapperHelper.UnwrapObject < int >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_Properties["ReadPixels"] = new BSFunctionReference(
                new BSFunction(
                    "function ReadPixels(source, destX, destY, recalculateMipMaps)",
                    a =>
                    {
                        m_InternalObject.ReadPixels(
                            WrapperHelper.UnwrapObject < Rect >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < bool >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["ReadPixels"] = new BSFunctionReference(
                new BSFunction(
                    "function ReadPixels(source, destX, destY)",
                    a =>
                    {
                        m_InternalObject.ReadPixels(
                            WrapperHelper.UnwrapObject < Rect >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["GetNativeTexturePtr"] = new BSFunctionReference(
                new BSFunction(
                    "function GetNativeTexturePtr()",
                    a => new BSWrapperObject_System_IntPtr( m_InternalObject.GetNativeTexturePtr() ),
                    0 ) );

            m_Properties["GetNativeTextureID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetNativeTextureID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetNativeTextureID() ),
                    0 ) );

            m_Properties["IncrementUpdateCount"] = new BSFunctionReference(
                new BSFunction(
                    "function IncrementUpdateCount()",
                    a =>
                    {
                        m_InternalObject.IncrementUpdateCount();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Texture2D : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Texture2D() : base( typeof( Texture2D ) )
        {
            m_StaticProperties["whiteTexture"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Texture2D( Texture2D.whiteTexture ),
                null );

            m_StaticProperties["blackTexture"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Texture2D( Texture2D.blackTexture ),
                null );

            m_StaticProperties["redTexture"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Texture2D( Texture2D.redTexture ),
                null );

            m_StaticProperties["grayTexture"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Texture2D( Texture2D.grayTexture ),
                null );

            m_StaticProperties["linearGrayTexture"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Texture2D( Texture2D.linearGrayTexture ),
                null );

            m_StaticProperties["normalTexture"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Texture2D( Texture2D.normalTexture ),
                null );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Texture2D()
        {
            WrapperHelper.AddRecastWrapper < Texture2D >( o => new BSWrapperObject_UnityEngine_Texture2D( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Hash128 : BSWrapperObject < Hash128 >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Hash128( Hash128 obj ) : base( obj )
        {
            m_Properties["isValid"] = new BSReflectionReference(
                () => m_InternalObject.isValid ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["CompareTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTo(rhs)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.CompareTo( WrapperHelper.UnwrapObject < Hash128 >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["Append"] = new BSFunctionReference(
                new BSFunction(
                    "function Append(data)",
                    a =>
                    {
                        m_InternalObject.Append( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Append"] = new BSFunctionReference(
                new BSFunction(
                    "function Append(val)",
                    a =>
                    {
                        m_InternalObject.Append( WrapperHelper.UnwrapObject < int >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Append"] = new BSFunctionReference(
                new BSFunction(
                    "function Append(val)",
                    a =>
                    {
                        m_InternalObject.Append( WrapperHelper.UnwrapObject < float >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < Hash128 >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["CompareTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTo(obj)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.CompareTo( WrapperHelper.UnwrapObject < object >( a[0] ) ) ),
                    1 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Hash128 : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Hash128() : base( typeof( Hash128 ) )
        {
            m_StaticProperties["Parse"] = new BSFunctionReference(
                new BSFunction(
                    "function Parse(hashString)",
                    a => new BSWrapperObject_UnityEngine_Hash128(
                        Hash128.Parse( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Compute"] = new BSFunctionReference(
                new BSFunction(
                    "function Compute(data)",
                    a => new BSWrapperObject_UnityEngine_Hash128(
                        Hash128.Compute( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Compute"] = new BSFunctionReference(
                new BSFunction(
                    "function Compute(val)",
                    a => new BSWrapperObject_UnityEngine_Hash128(
                        Hash128.Compute( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Compute"] = new BSFunctionReference(
                new BSFunction(
                    "function Compute(val)",
                    a => new BSWrapperObject_UnityEngine_Hash128(
                        Hash128.Compute( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Hash128()
        {
            WrapperHelper.AddRecastWrapper < Hash128 >( o => new BSWrapperObject_UnityEngine_Hash128( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_IntPtr : BSWrapperObject < IntPtr >

    {
        #region Public

        public BSWrapperObject_System_IntPtr( IntPtr obj ) : base( obj )
        {
            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToInt32"] = new BSFunctionReference(
                new BSFunction(
                    "function ToInt32()",
                    a => new BSObject( ( decimal ) m_InternalObject.ToInt32() ),
                    0 ) );

            m_Properties["ToInt64"] = new BSFunctionReference(
                new BSFunction(
                    "function ToInt64()",
                    a => new BSObject( ( decimal ) m_InternalObject.ToInt64() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format)",
                    a => new BSObject( m_InternalObject.ToString( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_IntPtr : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_IntPtr() : base( typeof( IntPtr ) )
        {
            m_StaticProperties["Size"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) IntPtr.Size ),
                null );

            m_StaticProperties["Zero"] = new BSReflectionReference(
                () => new BSWrapperObject_System_IntPtr( IntPtr.Zero ),
                null );

            m_StaticProperties["Add"] = new BSFunctionReference(
                new BSFunction(
                    "function Add(pointer, offset)",
                    a => new BSWrapperObject_System_IntPtr(
                        IntPtr.Add(
                            WrapperHelper.UnwrapObject < IntPtr >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Subtract"] = new BSFunctionReference(
                new BSFunction(
                    "function Subtract(pointer, offset)",
                    a => new BSWrapperObject_System_IntPtr(
                        IntPtr.Subtract(
                            WrapperHelper.UnwrapObject < IntPtr >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_IntPtr()
        {
            WrapperHelper.AddRecastWrapper < IntPtr >( o => new BSWrapperObject_System_IntPtr( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Texture : BSWrapperObject < Texture >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Texture( Texture obj ) : base( obj )
        {
            m_Properties["mipmapCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.mipmapCount ),
                null );

            m_Properties["width"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.width ),
                x => m_InternalObject.width = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["height"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.height ),
                x => m_InternalObject.height = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["isReadable"] = new BSReflectionReference(
                () => m_InternalObject.isReadable ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["anisoLevel"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.anisoLevel ),
                x => m_InternalObject.anisoLevel = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["mipMapBias"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.mipMapBias ),
                x => m_InternalObject.mipMapBias = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["texelSize"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.texelSize ),
                null );

            m_Properties["updateCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.updateCount ),
                null );

            m_Properties["imageContentsHash"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Hash128( m_InternalObject.imageContentsHash ),
                x => m_InternalObject.imageContentsHash = WrapperHelper.UnwrapObject < Hash128 >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["GetNativeTexturePtr"] = new BSFunctionReference(
                new BSFunction(
                    "function GetNativeTexturePtr()",
                    a => new BSWrapperObject_System_IntPtr( m_InternalObject.GetNativeTexturePtr() ),
                    0 ) );

            m_Properties["GetNativeTextureID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetNativeTextureID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetNativeTextureID() ),
                    0 ) );

            m_Properties["IncrementUpdateCount"] = new BSFunctionReference(
                new BSFunction(
                    "function IncrementUpdateCount()",
                    a =>
                    {
                        m_InternalObject.IncrementUpdateCount();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Texture : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Texture() : base( typeof( Texture ) )
        {
            m_StaticProperties["masterTextureLimit"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Texture.masterTextureLimit ),
                x => Texture.masterTextureLimit = WrapperHelper.UnwrapObject < int >( x ) );

            m_StaticProperties["totalTextureMemory"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Texture.totalTextureMemory ),
                null );

            m_StaticProperties["desiredTextureMemory"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Texture.desiredTextureMemory ),
                null );

            m_StaticProperties["targetTextureMemory"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Texture.targetTextureMemory ),
                null );

            m_StaticProperties["currentTextureMemory"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Texture.currentTextureMemory ),
                null );

            m_StaticProperties["nonStreamingTextureMemory"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Texture.nonStreamingTextureMemory ),
                null );

            m_StaticProperties["streamingMipmapUploadCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Texture.streamingMipmapUploadCount ),
                null );

            m_StaticProperties["streamingRendererCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Texture.streamingRendererCount ),
                null );

            m_StaticProperties["streamingTextureCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Texture.streamingTextureCount ),
                null );

            m_StaticProperties["nonStreamingTextureCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Texture.nonStreamingTextureCount ),
                null );

            m_StaticProperties["streamingTexturePendingLoadCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Texture.streamingTexturePendingLoadCount ),
                null );

            m_StaticProperties["streamingTextureLoadingCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Texture.streamingTextureLoadingCount ),
                null );

            m_StaticProperties["streamingTextureForceLoadAll"] = new BSReflectionReference(
                () => Texture.streamingTextureForceLoadAll ? BSObject.One : BSObject.Zero,
                x => Texture.streamingTextureForceLoadAll = WrapperHelper.UnwrapObject < bool >( x ) );

            m_StaticProperties["streamingTextureDiscardUnusedMips"] = new BSReflectionReference(
                () => Texture.streamingTextureDiscardUnusedMips ? BSObject.One : BSObject.Zero,
                x => Texture.streamingTextureDiscardUnusedMips = WrapperHelper.UnwrapObject < bool >( x ) );

            m_StaticProperties["allowThreadedTextureCreation"] = new BSReflectionReference(
                () => Texture.allowThreadedTextureCreation ? BSObject.One : BSObject.Zero,
                x => Texture.allowThreadedTextureCreation = WrapperHelper.UnwrapObject < bool >( x ) );

            m_StaticProperties["GenerateAllMips"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Texture.GenerateAllMips ),
                null );

            m_StaticProperties["SetGlobalAnisotropicFilteringLimits"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalAnisotropicFilteringLimits(forcedMin, globalMax)",
                    a =>
                    {
                        Texture.SetGlobalAnisotropicFilteringLimits(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["SetStreamingTextureMaterialDebugProperties"] = new BSFunctionReference(
                new BSFunction(
                    "function SetStreamingTextureMaterialDebugProperties()",
                    a =>
                    {
                        Texture.SetStreamingTextureMaterialDebugProperties();

                        return new BSObject( null );
                    },
                    0 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Texture()
        {
            WrapperHelper.AddRecastWrapper < Texture >( o => new BSWrapperObject_UnityEngine_Texture( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_UI_AnimationTriggers : BSWrapperObject < AnimationTriggers >

    {
        #region Public

        public BSWrapperObject_UnityEngine_UI_AnimationTriggers( AnimationTriggers obj ) : base( obj )
        {
            m_Properties["normalTrigger"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.normalTrigger ),
                x => m_InternalObject.normalTrigger = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["highlightedTrigger"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.highlightedTrigger ),
                x => m_InternalObject.highlightedTrigger = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["pressedTrigger"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.pressedTrigger ),
                x => m_InternalObject.pressedTrigger = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["selectedTrigger"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.selectedTrigger ),
                x => m_InternalObject.selectedTrigger = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["disabledTrigger"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.disabledTrigger ),
                x => m_InternalObject.disabledTrigger = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_UI_AnimationTriggers : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_UI_AnimationTriggers() : base( typeof( AnimationTriggers ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_UI_AnimationTriggers()
        {
            WrapperHelper.AddRecastWrapper < AnimationTriggers >(
                o => new BSWrapperObject_UnityEngine_UI_AnimationTriggers( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_UI_Graphic : BSWrapperObject < Graphic >

    {
        #region Public

        public BSWrapperObject_UnityEngine_UI_Graphic( Graphic obj ) : base( obj )
        {
            m_Properties["color"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( m_InternalObject.color ),
                x => m_InternalObject.color = WrapperHelper.UnwrapObject < Color >( x ) );

            m_Properties["raycastTarget"] = new BSReflectionReference(
                () => m_InternalObject.raycastTarget ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.raycastTarget = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["raycastPadding"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector4( m_InternalObject.raycastPadding ),
                x => m_InternalObject.raycastPadding = WrapperHelper.UnwrapObject < Vector4 >( x ) );

            m_Properties["depth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.depth ),
                null );

            m_Properties["rectTransform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_RectTransform( m_InternalObject.rectTransform ),
                null );

            m_Properties["canvas"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Canvas( m_InternalObject.canvas ),
                null );

            m_Properties["canvasRenderer"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_CanvasRenderer( m_InternalObject.canvasRenderer ),
                null );

            m_Properties["defaultMaterial"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Material( m_InternalObject.defaultMaterial ),
                null );

            m_Properties["material"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Material( m_InternalObject.material ),
                x => m_InternalObject.material = WrapperHelper.UnwrapObject < Material >( x ) );

            m_Properties["materialForRendering"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Material( m_InternalObject.materialForRendering ),
                null );

            m_Properties["mainTexture"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Texture( m_InternalObject.mainTexture ),
                null );

            m_Properties["useGUILayout"] = new BSReflectionReference(
                () => m_InternalObject.useGUILayout ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useGUILayout = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["runInEditMode"] = new BSReflectionReference(
                () => m_InternalObject.runInEditMode ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.runInEditMode = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isActiveAndEnabled"] = new BSReflectionReference(
                () => m_InternalObject.isActiveAndEnabled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["SetAllDirty"] = new BSFunctionReference(
                new BSFunction(
                    "function SetAllDirty()",
                    a =>
                    {
                        m_InternalObject.SetAllDirty();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetLayoutDirty"] = new BSFunctionReference(
                new BSFunction(
                    "function SetLayoutDirty()",
                    a =>
                    {
                        m_InternalObject.SetLayoutDirty();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetVerticesDirty"] = new BSFunctionReference(
                new BSFunction(
                    "function SetVerticesDirty()",
                    a =>
                    {
                        m_InternalObject.SetVerticesDirty();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetMaterialDirty"] = new BSFunctionReference(
                new BSFunction(
                    "function SetMaterialDirty()",
                    a =>
                    {
                        m_InternalObject.SetMaterialDirty();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["OnCullingChanged"] = new BSFunctionReference(
                new BSFunction(
                    "function OnCullingChanged()",
                    a =>
                    {
                        m_InternalObject.OnCullingChanged();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["LayoutComplete"] = new BSFunctionReference(
                new BSFunction(
                    "function LayoutComplete()",
                    a =>
                    {
                        m_InternalObject.LayoutComplete();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GraphicUpdateComplete"] = new BSFunctionReference(
                new BSFunction(
                    "function GraphicUpdateComplete()",
                    a =>
                    {
                        m_InternalObject.GraphicUpdateComplete();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["OnRebuildRequested"] = new BSFunctionReference(
                new BSFunction(
                    "function OnRebuildRequested()",
                    a =>
                    {
                        m_InternalObject.OnRebuildRequested();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetNativeSize"] = new BSFunctionReference(
                new BSFunction(
                    "function SetNativeSize()",
                    a =>
                    {
                        m_InternalObject.SetNativeSize();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Raycast"] = new BSFunctionReference(
                new BSFunction(
                    "function Raycast(sp, eventCamera)",
                    a => m_InternalObject.Raycast(
                        WrapperHelper.UnwrapObject < Vector2 >( a[0] ),
                        WrapperHelper.UnwrapObject < Camera >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_Properties["PixelAdjustPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function PixelAdjustPoint(point)",
                    a => new BSWrapperObject_UnityEngine_Vector2(
                        m_InternalObject.PixelAdjustPoint( WrapperHelper.UnwrapObject < Vector2 >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetPixelAdjustedRect"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPixelAdjustedRect()",
                    a => new BSWrapperObject_UnityEngine_Rect( m_InternalObject.GetPixelAdjustedRect() ),
                    0 ) );

            m_Properties["CrossFadeColor"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFadeColor(targetColor, duration, ignoreTimeScale, useAlpha)",
                    a =>
                    {
                        m_InternalObject.CrossFadeColor(
                            WrapperHelper.UnwrapObject < Color >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < bool >( a[2] ),
                            WrapperHelper.UnwrapObject < bool >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["CrossFadeColor"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFadeColor(targetColor, duration, ignoreTimeScale, useAlpha, useRGB)",
                    a =>
                    {
                        m_InternalObject.CrossFadeColor(
                            WrapperHelper.UnwrapObject < Color >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < bool >( a[2] ),
                            WrapperHelper.UnwrapObject < bool >( a[3] ),
                            WrapperHelper.UnwrapObject < bool >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["CrossFadeAlpha"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFadeAlpha(alpha, duration, ignoreTimeScale)",
                    a =>
                    {
                        m_InternalObject.CrossFadeAlpha(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < bool >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["RegisterDirtyLayoutCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function RegisterDirtyLayoutCallback(action)",
                    a =>
                    {
                        m_InternalObject.RegisterDirtyLayoutCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["UnregisterDirtyLayoutCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function UnregisterDirtyLayoutCallback(action)",
                    a =>
                    {
                        m_InternalObject.UnregisterDirtyLayoutCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["RegisterDirtyVerticesCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function RegisterDirtyVerticesCallback(action)",
                    a =>
                    {
                        m_InternalObject.RegisterDirtyVerticesCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["UnregisterDirtyVerticesCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function UnregisterDirtyVerticesCallback(action)",
                    a =>
                    {
                        m_InternalObject.UnregisterDirtyVerticesCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["RegisterDirtyMaterialCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function RegisterDirtyMaterialCallback(action)",
                    a =>
                    {
                        m_InternalObject.RegisterDirtyMaterialCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["UnregisterDirtyMaterialCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function UnregisterDirtyMaterialCallback(action)",
                    a =>
                    {
                        m_InternalObject.UnregisterDirtyMaterialCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsActive"] = new BSFunctionReference(
                new BSFunction(
                    "function IsActive()",
                    a => m_InternalObject.IsActive() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsDestroyed"] = new BSFunctionReference(
                new BSFunction(
                    "function IsDestroyed()",
                    a => m_InternalObject.IsDestroyed() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking()",
                    a => m_InternalObject.IsInvoking() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke()",
                    a =>
                    {
                        m_InternalObject.CancelInvoke();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Invoke"] = new BSFunctionReference(
                new BSFunction(
                    "function Invoke(methodName, time)",
                    a =>
                    {
                        m_InternalObject.Invoke(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["InvokeRepeating"] = new BSFunctionReference(
                new BSFunction(
                    "function InvokeRepeating(methodName, time, repeatRate)",
                    a =>
                    {
                        m_InternalObject.InvokeRepeating(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke(methodName)",
                    a =>
                    {
                        m_InternalObject.CancelInvoke( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking(methodName)",
                    a => m_InternalObject.IsInvoking( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName, value)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) ) ),
                    2 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine_Auto"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine_Auto(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine_Auto( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < Coroutine >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(methodName)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopAllCoroutines"] = new BSFunctionReference(
                new BSFunction(
                    "function StopAllCoroutines()",
                    a =>
                    {
                        m_InternalObject.StopAllCoroutines();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_UI_Graphic : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_UI_Graphic() : base( typeof( Graphic ) )
        {
            m_StaticProperties["defaultGraphicMaterial"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Material( Graphic.defaultGraphicMaterial ),
                null );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_UI_Graphic()
        {
            WrapperHelper.AddRecastWrapper < Graphic >( o => new BSWrapperObject_UnityEngine_UI_Graphic( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Material : BSWrapperObject < Material >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Material( Material obj ) : base( obj )
        {
            m_Properties["shader"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Shader( m_InternalObject.shader ),
                x => m_InternalObject.shader = WrapperHelper.UnwrapObject < Shader >( x ) );

            m_Properties["color"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( m_InternalObject.color ),
                x => m_InternalObject.color = WrapperHelper.UnwrapObject < Color >( x ) );

            m_Properties["mainTexture"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Texture( m_InternalObject.mainTexture ),
                x => m_InternalObject.mainTexture = WrapperHelper.UnwrapObject < Texture >( x ) );

            m_Properties["mainTextureOffset"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.mainTextureOffset ),
                x => m_InternalObject.mainTextureOffset = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["mainTextureScale"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.mainTextureScale ),
                x => m_InternalObject.mainTextureScale = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["renderQueue"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.renderQueue ),
                x => m_InternalObject.renderQueue = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["doubleSidedGI"] = new BSReflectionReference(
                () => m_InternalObject.doubleSidedGI ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.doubleSidedGI = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["enableInstancing"] = new BSReflectionReference(
                () => m_InternalObject.enableInstancing ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enableInstancing = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["passCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.passCount ),
                null );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["HasProperty"] = new BSFunctionReference(
                new BSFunction(
                    "function HasProperty(nameID)",
                    a => m_InternalObject.HasProperty( WrapperHelper.UnwrapObject < int >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["HasProperty"] = new BSFunctionReference(
                new BSFunction(
                    "function HasProperty(name)",
                    a => m_InternalObject.HasProperty( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["EnableKeyword"] = new BSFunctionReference(
                new BSFunction(
                    "function EnableKeyword(keyword)",
                    a =>
                    {
                        m_InternalObject.EnableKeyword( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["DisableKeyword"] = new BSFunctionReference(
                new BSFunction(
                    "function DisableKeyword(keyword)",
                    a =>
                    {
                        m_InternalObject.DisableKeyword( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsKeywordEnabled"] = new BSFunctionReference(
                new BSFunction(
                    "function IsKeywordEnabled(keyword)",
                    a => m_InternalObject.IsKeywordEnabled( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SetShaderPassEnabled"] = new BSFunctionReference(
                new BSFunction(
                    "function SetShaderPassEnabled(passName, enabled)",
                    a =>
                    {
                        m_InternalObject.SetShaderPassEnabled(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetShaderPassEnabled"] = new BSFunctionReference(
                new BSFunction(
                    "function GetShaderPassEnabled(passName)",
                    a => m_InternalObject.GetShaderPassEnabled( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetPassName"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPassName(pass)",
                    a => new BSObject( m_InternalObject.GetPassName( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["FindPass"] = new BSFunctionReference(
                new BSFunction(
                    "function FindPass(passName)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.FindPass( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["SetOverrideTag"] = new BSFunctionReference(
                new BSFunction(
                    "function SetOverrideTag(tag, val)",
                    a =>
                    {
                        m_InternalObject.SetOverrideTag(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetTag"] = new BSFunctionReference(
                new BSFunction(
                    "function GetTag(tag, searchFallbacks, defaultValue)",
                    a => new BSObject(
                        m_InternalObject.GetTag(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ),
                            WrapperHelper.UnwrapObject < string >( a[2] ) ) ),
                    3 ) );

            m_Properties["GetTag"] = new BSFunctionReference(
                new BSFunction(
                    "function GetTag(tag, searchFallbacks)",
                    a => new BSObject(
                        m_InternalObject.GetTag(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) ) ),
                    2 ) );

            m_Properties["Lerp"] = new BSFunctionReference(
                new BSFunction(
                    "function Lerp(start, end, t)",
                    a =>
                    {
                        m_InternalObject.Lerp(
                            WrapperHelper.UnwrapObject < Material >( a[0] ),
                            WrapperHelper.UnwrapObject < Material >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetPass"] = new BSFunctionReference(
                new BSFunction(
                    "function SetPass(pass)",
                    a => m_InternalObject.SetPass( WrapperHelper.UnwrapObject < int >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["CopyPropertiesFromMaterial"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyPropertiesFromMaterial(mat)",
                    a =>
                    {
                        m_InternalObject.CopyPropertiesFromMaterial( WrapperHelper.UnwrapObject < Material >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["ComputeCRC"] = new BSFunctionReference(
                new BSFunction(
                    "function ComputeCRC()",
                    a => new BSObject( ( decimal ) m_InternalObject.ComputeCRC() ),
                    0 ) );

            m_Properties["SetFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function SetFloat(name, value)",
                    a =>
                    {
                        m_InternalObject.SetFloat(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function SetFloat(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetFloat(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetInt"] = new BSFunctionReference(
                new BSFunction(
                    "function SetInt(name, value)",
                    a =>
                    {
                        m_InternalObject.SetInt(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetInt"] = new BSFunctionReference(
                new BSFunction(
                    "function SetInt(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetInt(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetColor"] = new BSFunctionReference(
                new BSFunction(
                    "function SetColor(name, value)",
                    a =>
                    {
                        m_InternalObject.SetColor(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Color >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetColor"] = new BSFunctionReference(
                new BSFunction(
                    "function SetColor(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetColor(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Color >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetVector"] = new BSFunctionReference(
                new BSFunction(
                    "function SetVector(name, value)",
                    a =>
                    {
                        m_InternalObject.SetVector(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetVector"] = new BSFunctionReference(
                new BSFunction(
                    "function SetVector(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetVector(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function SetMatrix(name, value)",
                    a =>
                    {
                        m_InternalObject.SetMatrix(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function SetMatrix(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetMatrix(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTexture(name, value)",
                    a =>
                    {
                        m_InternalObject.SetTexture(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Texture >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTexture(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetTexture(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Texture >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBuffer(name, value)",
                    a =>
                    {
                        m_InternalObject.SetBuffer(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBuffer(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBuffer(name, value)",
                    a =>
                    {
                        m_InternalObject.SetBuffer(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBuffer(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetConstantBuffer(name, value, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetConstantBuffer(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetConstantBuffer(nameID, value, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetConstantBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetConstantBuffer(name, value, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetConstantBuffer(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetConstantBuffer(nameID, value, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetConstantBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["GetFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function GetFloat(name)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetFloat( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function GetFloat(nameID)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetFloat( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetInt"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInt(name)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetInt( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetInt"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInt(nameID)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetInt( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetColor"] = new BSFunctionReference(
                new BSFunction(
                    "function GetColor(name)",
                    a => new BSWrapperObject_UnityEngine_Color(
                        m_InternalObject.GetColor( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetColor"] = new BSFunctionReference(
                new BSFunction(
                    "function GetColor(nameID)",
                    a => new BSWrapperObject_UnityEngine_Color(
                        m_InternalObject.GetColor( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetVector"] = new BSFunctionReference(
                new BSFunction(
                    "function GetVector(name)",
                    a => new BSWrapperObject_UnityEngine_Vector4(
                        m_InternalObject.GetVector( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetVector"] = new BSFunctionReference(
                new BSFunction(
                    "function GetVector(nameID)",
                    a => new BSWrapperObject_UnityEngine_Vector4(
                        m_InternalObject.GetVector( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMatrix(name)",
                    a => new BSWrapperObject_UnityEngine_Matrix4x4(
                        m_InternalObject.GetMatrix( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMatrix(nameID)",
                    a => new BSWrapperObject_UnityEngine_Matrix4x4(
                        m_InternalObject.GetMatrix( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function GetTexture(name)",
                    a => new BSWrapperObject_UnityEngine_Texture(
                        m_InternalObject.GetTexture( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function GetTexture(nameID)",
                    a => new BSWrapperObject_UnityEngine_Texture(
                        m_InternalObject.GetTexture( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["SetTextureOffset"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTextureOffset(name, value)",
                    a =>
                    {
                        m_InternalObject.SetTextureOffset(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetTextureOffset"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTextureOffset(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetTextureOffset(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetTextureScale"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTextureScale(name, value)",
                    a =>
                    {
                        m_InternalObject.SetTextureScale(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetTextureScale"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTextureScale(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetTextureScale(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetTextureOffset"] = new BSFunctionReference(
                new BSFunction(
                    "function GetTextureOffset(name)",
                    a => new BSWrapperObject_UnityEngine_Vector2(
                        m_InternalObject.GetTextureOffset( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetTextureOffset"] = new BSFunctionReference(
                new BSFunction(
                    "function GetTextureOffset(nameID)",
                    a => new BSWrapperObject_UnityEngine_Vector2(
                        m_InternalObject.GetTextureOffset( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetTextureScale"] = new BSFunctionReference(
                new BSFunction(
                    "function GetTextureScale(name)",
                    a => new BSWrapperObject_UnityEngine_Vector2(
                        m_InternalObject.GetTextureScale( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetTextureScale"] = new BSFunctionReference(
                new BSFunction(
                    "function GetTextureScale(nameID)",
                    a => new BSWrapperObject_UnityEngine_Vector2(
                        m_InternalObject.GetTextureScale( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Material : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Material() : base( typeof( Material ) )
        {
            m_StaticProperties["Create"] = new BSFunctionReference(
                new BSFunction(
                    "function Create(scriptContents)",
                    a => new BSWrapperObject_UnityEngine_Material(
                        Material.Create( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Material()
        {
            WrapperHelper.AddRecastWrapper < Material >( o => new BSWrapperObject_UnityEngine_Material( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Shader : BSWrapperObject < Shader >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Shader( Shader obj ) : base( obj )
        {
            m_Properties["maximumLOD"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.maximumLOD ),
                x => m_InternalObject.maximumLOD = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["isSupported"] = new BSReflectionReference(
                () => m_InternalObject.isSupported ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["renderQueue"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.renderQueue ),
                null );

            m_Properties["passCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.passCount ),
                null );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["GetDependency"] = new BSFunctionReference(
                new BSFunction(
                    "function GetDependency(name)",
                    a => new BSWrapperObject_UnityEngine_Shader(
                        m_InternalObject.GetDependency( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["FindPassTagValue"] = new BSFunctionReference(
                new BSFunction(
                    "function FindPassTagValue(passIndex, tagName)",
                    a => new BSWrapperObject_UnityEngine_Rendering_ShaderTagId(
                        m_InternalObject.FindPassTagValue(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < ShaderTagId >( a[1] ) ) ),
                    2 ) );

            m_Properties["GetPropertyCount"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPropertyCount()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetPropertyCount() ),
                    0 ) );

            m_Properties["FindPropertyIndex"] = new BSFunctionReference(
                new BSFunction(
                    "function FindPropertyIndex(propertyName)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.FindPropertyIndex(
                            WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetPropertyName"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPropertyName(propertyIndex)",
                    a => new BSObject( m_InternalObject.GetPropertyName( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetPropertyNameId"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPropertyNameId(propertyIndex)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetPropertyNameId( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetPropertyDescription"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPropertyDescription(propertyIndex)",
                    a => new BSObject(
                        m_InternalObject.GetPropertyDescription( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetPropertyDefaultFloatValue"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPropertyDefaultFloatValue(propertyIndex)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetPropertyDefaultFloatValue(
                            WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetPropertyDefaultVectorValue"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPropertyDefaultVectorValue(propertyIndex)",
                    a => new BSWrapperObject_UnityEngine_Vector4(
                        m_InternalObject.GetPropertyDefaultVectorValue( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetPropertyRangeLimits"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPropertyRangeLimits(propertyIndex)",
                    a => new BSWrapperObject_UnityEngine_Vector2(
                        m_InternalObject.GetPropertyRangeLimits( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetPropertyTextureDefaultName"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPropertyTextureDefaultName(propertyIndex)",
                    a => new BSObject(
                        m_InternalObject.GetPropertyTextureDefaultName( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Shader : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Shader() : base( typeof( Shader ) )
        {
            m_StaticProperties["globalMaximumLOD"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Shader.globalMaximumLOD ),
                x => Shader.globalMaximumLOD = WrapperHelper.UnwrapObject < int >( x ) );

            m_StaticProperties["globalRenderPipeline"] = new BSReflectionReference(
                () => new BSObject( Shader.globalRenderPipeline ),
                x => Shader.globalRenderPipeline = WrapperHelper.UnwrapObject < string >( x ) );

            m_StaticProperties["Find"] = new BSFunctionReference(
                new BSFunction(
                    "function Find(name)",
                    a => new BSWrapperObject_UnityEngine_Shader(
                        Shader.Find( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["EnableKeyword"] = new BSFunctionReference(
                new BSFunction(
                    "function EnableKeyword(keyword)",
                    a =>
                    {
                        Shader.EnableKeyword( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_StaticProperties["DisableKeyword"] = new BSFunctionReference(
                new BSFunction(
                    "function DisableKeyword(keyword)",
                    a =>
                    {
                        Shader.DisableKeyword( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_StaticProperties["IsKeywordEnabled"] = new BSFunctionReference(
                new BSFunction(
                    "function IsKeywordEnabled(keyword)",
                    a => Shader.IsKeywordEnabled( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["WarmupAllShaders"] = new BSFunctionReference(
                new BSFunction(
                    "function WarmupAllShaders()",
                    a =>
                    {
                        Shader.WarmupAllShaders();

                        return new BSObject( null );
                    },
                    0 ) );

            m_StaticProperties["PropertyToID"] = new BSFunctionReference(
                new BSFunction(
                    "function PropertyToID(name)",
                    a => new BSObject(
                        ( decimal ) Shader.PropertyToID( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["SetGlobalFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalFloat(name, value)",
                    a =>
                    {
                        Shader.SetGlobalFloat(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["SetGlobalFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalFloat(nameID, value)",
                    a =>
                    {
                        Shader.SetGlobalFloat(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["SetGlobalInt"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalInt(name, value)",
                    a =>
                    {
                        Shader.SetGlobalInt(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["SetGlobalInt"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalInt(nameID, value)",
                    a =>
                    {
                        Shader.SetGlobalInt(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["SetGlobalVector"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalVector(name, value)",
                    a =>
                    {
                        Shader.SetGlobalVector(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["SetGlobalVector"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalVector(nameID, value)",
                    a =>
                    {
                        Shader.SetGlobalVector(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["SetGlobalColor"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalColor(name, value)",
                    a =>
                    {
                        Shader.SetGlobalColor(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Color >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["SetGlobalColor"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalColor(nameID, value)",
                    a =>
                    {
                        Shader.SetGlobalColor(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Color >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["SetGlobalMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalMatrix(name, value)",
                    a =>
                    {
                        Shader.SetGlobalMatrix(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["SetGlobalMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalMatrix(nameID, value)",
                    a =>
                    {
                        Shader.SetGlobalMatrix(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["SetGlobalTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalTexture(name, value)",
                    a =>
                    {
                        Shader.SetGlobalTexture(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Texture >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["SetGlobalTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalTexture(nameID, value)",
                    a =>
                    {
                        Shader.SetGlobalTexture(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Texture >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["SetGlobalBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalBuffer(name, value)",
                    a =>
                    {
                        Shader.SetGlobalBuffer(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["SetGlobalBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalBuffer(nameID, value)",
                    a =>
                    {
                        Shader.SetGlobalBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["SetGlobalBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalBuffer(name, value)",
                    a =>
                    {
                        Shader.SetGlobalBuffer(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["SetGlobalBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalBuffer(nameID, value)",
                    a =>
                    {
                        Shader.SetGlobalBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["SetGlobalConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalConstantBuffer(name, value, offset, size)",
                    a =>
                    {
                        Shader.SetGlobalConstantBuffer(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_StaticProperties["SetGlobalConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalConstantBuffer(nameID, value, offset, size)",
                    a =>
                    {
                        Shader.SetGlobalConstantBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_StaticProperties["SetGlobalConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalConstantBuffer(name, value, offset, size)",
                    a =>
                    {
                        Shader.SetGlobalConstantBuffer(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_StaticProperties["SetGlobalConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalConstantBuffer(nameID, value, offset, size)",
                    a =>
                    {
                        Shader.SetGlobalConstantBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_StaticProperties["GetGlobalFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function GetGlobalFloat(name)",
                    a => new BSObject(
                        ( decimal ) Shader.GetGlobalFloat( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetGlobalFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function GetGlobalFloat(nameID)",
                    a => new BSObject(
                        ( decimal ) Shader.GetGlobalFloat( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetGlobalInt"] = new BSFunctionReference(
                new BSFunction(
                    "function GetGlobalInt(name)",
                    a => new BSObject(
                        ( decimal ) Shader.GetGlobalInt( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetGlobalInt"] = new BSFunctionReference(
                new BSFunction(
                    "function GetGlobalInt(nameID)",
                    a => new BSObject( ( decimal ) Shader.GetGlobalInt( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetGlobalVector"] = new BSFunctionReference(
                new BSFunction(
                    "function GetGlobalVector(name)",
                    a => new BSWrapperObject_UnityEngine_Vector4(
                        Shader.GetGlobalVector( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetGlobalVector"] = new BSFunctionReference(
                new BSFunction(
                    "function GetGlobalVector(nameID)",
                    a => new BSWrapperObject_UnityEngine_Vector4(
                        Shader.GetGlobalVector( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetGlobalColor"] = new BSFunctionReference(
                new BSFunction(
                    "function GetGlobalColor(name)",
                    a => new BSWrapperObject_UnityEngine_Color(
                        Shader.GetGlobalColor( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetGlobalColor"] = new BSFunctionReference(
                new BSFunction(
                    "function GetGlobalColor(nameID)",
                    a => new BSWrapperObject_UnityEngine_Color(
                        Shader.GetGlobalColor( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetGlobalMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function GetGlobalMatrix(name)",
                    a => new BSWrapperObject_UnityEngine_Matrix4x4(
                        Shader.GetGlobalMatrix( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetGlobalMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function GetGlobalMatrix(nameID)",
                    a => new BSWrapperObject_UnityEngine_Matrix4x4(
                        Shader.GetGlobalMatrix( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetGlobalTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function GetGlobalTexture(name)",
                    a => new BSWrapperObject_UnityEngine_Texture(
                        Shader.GetGlobalTexture( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetGlobalTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function GetGlobalTexture(nameID)",
                    a => new BSWrapperObject_UnityEngine_Texture(
                        Shader.GetGlobalTexture( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Shader()
        {
            WrapperHelper.AddRecastWrapper < Shader >( o => new BSWrapperObject_UnityEngine_Shader( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Rendering_ShaderTagId : BSWrapperObject < ShaderTagId >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Rendering_ShaderTagId( ShaderTagId obj ) : base( obj )
        {
            m_Properties["name"] = new BSReflectionReference( () => new BSObject( m_InternalObject.name ), null );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < ShaderTagId >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Rendering_ShaderTagId : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Rendering_ShaderTagId() : base( typeof( ShaderTagId ) )
        {
            m_StaticProperties["none"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Rendering_ShaderTagId( ShaderTagId.none ),
                null );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Rendering_ShaderTagId()
        {
            WrapperHelper.AddRecastWrapper < ShaderTagId >(
                o => new BSWrapperObject_UnityEngine_Rendering_ShaderTagId( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_RenderTexture : BSWrapperObject < RenderTexture >

    {
        #region Public

        public BSWrapperObject_UnityEngine_RenderTexture( RenderTexture obj ) : base( obj )
        {
            m_Properties["width"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.width ),
                x => m_InternalObject.width = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["height"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.height ),
                x => m_InternalObject.height = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["useMipMap"] = new BSReflectionReference(
                () => m_InternalObject.useMipMap ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useMipMap = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["sRGB"] = new BSReflectionReference(
                () => m_InternalObject.sRGB ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["autoGenerateMips"] = new BSReflectionReference(
                () => m_InternalObject.autoGenerateMips ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.autoGenerateMips = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["volumeDepth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.volumeDepth ),
                x => m_InternalObject.volumeDepth = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["antiAliasing"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.antiAliasing ),
                x => m_InternalObject.antiAliasing = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["bindTextureMS"] = new BSReflectionReference(
                () => m_InternalObject.bindTextureMS ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.bindTextureMS = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["enableRandomWrite"] = new BSReflectionReference(
                () => m_InternalObject.enableRandomWrite ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enableRandomWrite = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["useDynamicScale"] = new BSReflectionReference(
                () => m_InternalObject.useDynamicScale ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useDynamicScale = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isPowerOfTwo"] = new BSReflectionReference(
                () => m_InternalObject.isPowerOfTwo ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.isPowerOfTwo = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["colorBuffer"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_RenderBuffer( m_InternalObject.colorBuffer ),
                null );

            m_Properties["depthBuffer"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_RenderBuffer( m_InternalObject.depthBuffer ),
                null );

            m_Properties["depth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.depth ),
                x => m_InternalObject.depth = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["descriptor"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_RenderTextureDescriptor( m_InternalObject.descriptor ),
                x => m_InternalObject.descriptor = WrapperHelper.UnwrapObject < RenderTextureDescriptor >( x ) );

            m_Properties["generateMips"] = new BSReflectionReference(
                () => m_InternalObject.generateMips ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.generateMips = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isCubemap"] = new BSReflectionReference(
                () => m_InternalObject.isCubemap ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.isCubemap = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isVolume"] = new BSReflectionReference(
                () => m_InternalObject.isVolume ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.isVolume = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["mipmapCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.mipmapCount ),
                null );

            m_Properties["isReadable"] = new BSReflectionReference(
                () => m_InternalObject.isReadable ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["anisoLevel"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.anisoLevel ),
                x => m_InternalObject.anisoLevel = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["mipMapBias"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.mipMapBias ),
                x => m_InternalObject.mipMapBias = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["texelSize"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.texelSize ),
                null );

            m_Properties["updateCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.updateCount ),
                null );

            m_Properties["imageContentsHash"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Hash128( m_InternalObject.imageContentsHash ),
                x => m_InternalObject.imageContentsHash = WrapperHelper.UnwrapObject < Hash128 >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["GetNativeDepthBufferPtr"] = new BSFunctionReference(
                new BSFunction(
                    "function GetNativeDepthBufferPtr()",
                    a => new BSWrapperObject_System_IntPtr( m_InternalObject.GetNativeDepthBufferPtr() ),
                    0 ) );

            m_Properties["DiscardContents"] = new BSFunctionReference(
                new BSFunction(
                    "function DiscardContents(discardColor, discardDepth)",
                    a =>
                    {
                        m_InternalObject.DiscardContents(
                            WrapperHelper.UnwrapObject < bool >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["MarkRestoreExpected"] = new BSFunctionReference(
                new BSFunction(
                    "function MarkRestoreExpected()",
                    a =>
                    {
                        m_InternalObject.MarkRestoreExpected();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["DiscardContents"] = new BSFunctionReference(
                new BSFunction(
                    "function DiscardContents()",
                    a =>
                    {
                        m_InternalObject.DiscardContents();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["ResolveAntiAliasedSurface"] = new BSFunctionReference(
                new BSFunction(
                    "function ResolveAntiAliasedSurface()",
                    a =>
                    {
                        m_InternalObject.ResolveAntiAliasedSurface();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["ResolveAntiAliasedSurface"] = new BSFunctionReference(
                new BSFunction(
                    "function ResolveAntiAliasedSurface(target)",
                    a =>
                    {
                        m_InternalObject.ResolveAntiAliasedSurface(
                            WrapperHelper.UnwrapObject < RenderTexture >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetGlobalShaderProperty"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalShaderProperty(propertyName)",
                    a =>
                    {
                        m_InternalObject.SetGlobalShaderProperty( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Create"] = new BSFunctionReference(
                new BSFunction(
                    "function Create()",
                    a => m_InternalObject.Create() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["Release"] = new BSFunctionReference(
                new BSFunction(
                    "function Release()",
                    a =>
                    {
                        m_InternalObject.Release();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["IsCreated"] = new BSFunctionReference(
                new BSFunction(
                    "function IsCreated()",
                    a => m_InternalObject.IsCreated() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["GenerateMips"] = new BSFunctionReference(
                new BSFunction(
                    "function GenerateMips()",
                    a =>
                    {
                        m_InternalObject.GenerateMips();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetTexelOffset"] = new BSFunctionReference(
                new BSFunction(
                    "function GetTexelOffset()",
                    a => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.GetTexelOffset() ),
                    0 ) );

            m_Properties["GetNativeTexturePtr"] = new BSFunctionReference(
                new BSFunction(
                    "function GetNativeTexturePtr()",
                    a => new BSWrapperObject_System_IntPtr( m_InternalObject.GetNativeTexturePtr() ),
                    0 ) );

            m_Properties["GetNativeTextureID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetNativeTextureID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetNativeTextureID() ),
                    0 ) );

            m_Properties["IncrementUpdateCount"] = new BSFunctionReference(
                new BSFunction(
                    "function IncrementUpdateCount()",
                    a =>
                    {
                        m_InternalObject.IncrementUpdateCount();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_RenderTexture : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_RenderTexture() : base( typeof( RenderTexture ) )
        {
            m_StaticProperties["active"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_RenderTexture( RenderTexture.active ),
                x => RenderTexture.active = WrapperHelper.UnwrapObject < RenderTexture >( x ) );

            m_StaticProperties["enabled"] = new BSReflectionReference(
                () => RenderTexture.enabled ? BSObject.One : BSObject.Zero,
                x => RenderTexture.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_StaticProperties["SupportsStencil"] = new BSFunctionReference(
                new BSFunction(
                    "function SupportsStencil(rt)",
                    a => RenderTexture.SupportsStencil( WrapperHelper.UnwrapObject < RenderTexture >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["ReleaseTemporary"] = new BSFunctionReference(
                new BSFunction(
                    "function ReleaseTemporary(temp)",
                    a =>
                    {
                        RenderTexture.ReleaseTemporary( WrapperHelper.UnwrapObject < RenderTexture >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_StaticProperties["GetTemporary"] = new BSFunctionReference(
                new BSFunction(
                    "function GetTemporary(desc)",
                    a => new BSWrapperObject_UnityEngine_RenderTexture(
                        RenderTexture.GetTemporary( WrapperHelper.UnwrapObject < RenderTextureDescriptor >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetTemporary"] = new BSFunctionReference(
                new BSFunction(
                    "function GetTemporary(width, height, depthBuffer)",
                    a => new BSWrapperObject_UnityEngine_RenderTexture(
                        RenderTexture.GetTemporary(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["GetTemporary"] = new BSFunctionReference(
                new BSFunction(
                    "function GetTemporary(width, height)",
                    a => new BSWrapperObject_UnityEngine_RenderTexture(
                        RenderTexture.GetTemporary(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_RenderTexture()
        {
            WrapperHelper.AddRecastWrapper < RenderTexture >( o => new BSWrapperObject_UnityEngine_RenderTexture( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_RenderBuffer : BSWrapperObject < RenderBuffer >

    {
        #region Public

        public BSWrapperObject_UnityEngine_RenderBuffer( RenderBuffer obj ) : base( obj )
        {
            m_Properties["GetNativeRenderBufferPtr"] = new BSFunctionReference(
                new BSFunction(
                    "function GetNativeRenderBufferPtr()",
                    a => new BSWrapperObject_System_IntPtr( m_InternalObject.GetNativeRenderBufferPtr() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_RenderBuffer : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_RenderBuffer() : base( typeof( RenderBuffer ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_RenderBuffer()
        {
            WrapperHelper.AddRecastWrapper < RenderBuffer >( o => new BSWrapperObject_UnityEngine_RenderBuffer( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_RenderTextureDescriptor : BSWrapperObject < RenderTextureDescriptor >

    {
        #region Public

        public BSWrapperObject_UnityEngine_RenderTextureDescriptor( RenderTextureDescriptor obj ) : base( obj )
        {
            m_Properties["width"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.width ),
                x => m_InternalObject.width = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["height"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.height ),
                x => m_InternalObject.height = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["msaaSamples"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.msaaSamples ),
                x => m_InternalObject.msaaSamples = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["volumeDepth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.volumeDepth ),
                x => m_InternalObject.volumeDepth = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["mipCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.mipCount ),
                x => m_InternalObject.mipCount = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["sRGB"] = new BSReflectionReference(
                () => m_InternalObject.sRGB ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.sRGB = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["depthBufferBits"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.depthBufferBits ),
                x => m_InternalObject.depthBufferBits = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["useMipMap"] = new BSReflectionReference(
                () => m_InternalObject.useMipMap ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useMipMap = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["autoGenerateMips"] = new BSReflectionReference(
                () => m_InternalObject.autoGenerateMips ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.autoGenerateMips = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["enableRandomWrite"] = new BSReflectionReference(
                () => m_InternalObject.enableRandomWrite ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enableRandomWrite = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["bindMS"] = new BSReflectionReference(
                () => m_InternalObject.bindMS ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.bindMS = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["useDynamicScale"] = new BSReflectionReference(
                () => m_InternalObject.useDynamicScale ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useDynamicScale = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_RenderTextureDescriptor : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_RenderTextureDescriptor() : base( typeof( RenderTextureDescriptor ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_RenderTextureDescriptor()
        {
            WrapperHelper.AddRecastWrapper < RenderTextureDescriptor >(
                o => new BSWrapperObject_UnityEngine_RenderTextureDescriptor( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_ComputeBuffer : BSWrapperObject < ComputeBuffer >

    {
        #region Public

        public BSWrapperObject_UnityEngine_ComputeBuffer( ComputeBuffer obj ) : base( obj )
        {
            m_Properties["count"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.count ),
                null );

            m_Properties["stride"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.stride ),
                null );

            m_Properties["Dispose"] = new BSFunctionReference(
                new BSFunction(
                    "function Dispose()",
                    a =>
                    {
                        m_InternalObject.Dispose();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Release"] = new BSFunctionReference(
                new BSFunction(
                    "function Release()",
                    a =>
                    {
                        m_InternalObject.Release();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["IsValid"] = new BSFunctionReference(
                new BSFunction(
                    "function IsValid()",
                    a => m_InternalObject.IsValid() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["SetData"] = new BSFunctionReference(
                new BSFunction(
                    "function SetData(data)",
                    a =>
                    {
                        m_InternalObject.SetData( WrapperHelper.UnwrapObject < Array >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetData"] = new BSFunctionReference(
                new BSFunction(
                    "function SetData(data, managedBufferStartIndex, computeBufferStartIndex, count)",
                    a =>
                    {
                        m_InternalObject.SetData(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["GetData"] = new BSFunctionReference(
                new BSFunction(
                    "function GetData(data)",
                    a =>
                    {
                        m_InternalObject.GetData( WrapperHelper.UnwrapObject < Array >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetData"] = new BSFunctionReference(
                new BSFunction(
                    "function GetData(data, managedBufferStartIndex, computeBufferStartIndex, count)",
                    a =>
                    {
                        m_InternalObject.GetData(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetCounterValue"] = new BSFunctionReference(
                new BSFunction(
                    "function SetCounterValue(counterValue)",
                    a =>
                    {
                        m_InternalObject.SetCounterValue( WrapperHelper.UnwrapObject < uint >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetNativeBufferPtr"] = new BSFunctionReference(
                new BSFunction(
                    "function GetNativeBufferPtr()",
                    a => new BSWrapperObject_System_IntPtr( m_InternalObject.GetNativeBufferPtr() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_ComputeBuffer : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_ComputeBuffer() : base( typeof( ComputeBuffer ) )
        {
            m_StaticProperties["CopyCount"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyCount(src, dst, dstOffsetBytes)",
                    a =>
                    {
                        ComputeBuffer.CopyCount(
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_ComputeBuffer()
        {
            WrapperHelper.AddRecastWrapper < ComputeBuffer >( o => new BSWrapperObject_UnityEngine_ComputeBuffer( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Array : BSWrapperObject < Array >

    {
        #region Public

        public BSWrapperObject_System_Array( Array obj ) : base( obj )
        {
            m_Properties["LongLength"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.LongLength ),
                null );

            m_Properties["IsFixedSize"] = new BSReflectionReference(
                () => m_InternalObject.IsFixedSize ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsReadOnly"] = new BSReflectionReference(
                () => m_InternalObject.IsReadOnly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsSynchronized"] = new BSReflectionReference(
                () => m_InternalObject.IsSynchronized ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["SyncRoot"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.SyncRoot ),
                null );

            m_Properties["Length"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Length ),
                null );

            m_Properties["Rank"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Rank ),
                null );

            m_Properties["CopyTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyTo(array, index)",
                    a =>
                    {
                        m_InternalObject.CopyTo(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Clone"] = new BSFunctionReference(
                new BSFunction(
                    "function Clone()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.Clone() ),
                    0 ) );

            m_Properties["CopyTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyTo(array, index)",
                    a =>
                    {
                        m_InternalObject.CopyTo(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < long >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetLongLength"] = new BSFunctionReference(
                new BSFunction(
                    "function GetLongLength(dimension)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetLongLength( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetValue"] = new BSFunctionReference(
                new BSFunction(
                    "function GetValue(index)",
                    a => new BSWrapperObject_System_Object(
                        m_InternalObject.GetValue( WrapperHelper.UnwrapObject < long >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetValue"] = new BSFunctionReference(
                new BSFunction(
                    "function GetValue(index1, index2)",
                    a => new BSWrapperObject_System_Object(
                        m_InternalObject.GetValue(
                            WrapperHelper.UnwrapObject < long >( a[0] ),
                            WrapperHelper.UnwrapObject < long >( a[1] ) ) ),
                    2 ) );

            m_Properties["GetValue"] = new BSFunctionReference(
                new BSFunction(
                    "function GetValue(index1, index2, index3)",
                    a => new BSWrapperObject_System_Object(
                        m_InternalObject.GetValue(
                            WrapperHelper.UnwrapObject < long >( a[0] ),
                            WrapperHelper.UnwrapObject < long >( a[1] ),
                            WrapperHelper.UnwrapObject < long >( a[2] ) ) ),
                    3 ) );

            m_Properties["SetValue"] = new BSFunctionReference(
                new BSFunction(
                    "function SetValue(value, index)",
                    a =>
                    {
                        m_InternalObject.SetValue(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < long >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetValue"] = new BSFunctionReference(
                new BSFunction(
                    "function SetValue(value, index1, index2)",
                    a =>
                    {
                        m_InternalObject.SetValue(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < long >( a[1] ),
                            WrapperHelper.UnwrapObject < long >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetValue"] = new BSFunctionReference(
                new BSFunction(
                    "function SetValue(value, index1, index2, index3)",
                    a =>
                    {
                        m_InternalObject.SetValue(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < long >( a[1] ),
                            WrapperHelper.UnwrapObject < long >( a[2] ),
                            WrapperHelper.UnwrapObject < long >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["GetEnumerator"] = new BSFunctionReference(
                new BSFunction(
                    "function GetEnumerator()",
                    a => new BSWrapperObject_System_Collections_IEnumerator( m_InternalObject.GetEnumerator() ),
                    0 ) );

            m_Properties["GetLength"] = new BSFunctionReference(
                new BSFunction(
                    "function GetLength(dimension)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetLength( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetLowerBound"] = new BSFunctionReference(
                new BSFunction(
                    "function GetLowerBound(dimension)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetLowerBound( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetUpperBound"] = new BSFunctionReference(
                new BSFunction(
                    "function GetUpperBound(dimension)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetUpperBound( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetValue"] = new BSFunctionReference(
                new BSFunction(
                    "function GetValue(index)",
                    a => new BSWrapperObject_System_Object(
                        m_InternalObject.GetValue( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetValue"] = new BSFunctionReference(
                new BSFunction(
                    "function GetValue(index1, index2)",
                    a => new BSWrapperObject_System_Object(
                        m_InternalObject.GetValue(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_Properties["GetValue"] = new BSFunctionReference(
                new BSFunction(
                    "function GetValue(index1, index2, index3)",
                    a => new BSWrapperObject_System_Object(
                        m_InternalObject.GetValue(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) ) ),
                    3 ) );

            m_Properties["SetValue"] = new BSFunctionReference(
                new BSFunction(
                    "function SetValue(value, index)",
                    a =>
                    {
                        m_InternalObject.SetValue(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetValue"] = new BSFunctionReference(
                new BSFunction(
                    "function SetValue(value, index1, index2)",
                    a =>
                    {
                        m_InternalObject.SetValue(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetValue"] = new BSFunctionReference(
                new BSFunction(
                    "function SetValue(value, index1, index2, index3)",
                    a =>
                    {
                        m_InternalObject.SetValue(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["Initialize"] = new BSFunctionReference(
                new BSFunction(
                    "function Initialize()",
                    a =>
                    {
                        m_InternalObject.Initialize();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Array : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Array() : base( typeof( Array ) )
        {
            m_StaticProperties["BinarySearch"] = new BSFunctionReference(
                new BSFunction(
                    "function BinarySearch(array, value)",
                    a => new BSObject(
                        ( decimal ) Array.BinarySearch(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Copy"] = new BSFunctionReference(
                new BSFunction(
                    "function Copy(sourceArray, destinationArray, length)",
                    a =>
                    {
                        Array.Copy(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < Array >( a[1] ),
                            WrapperHelper.UnwrapObject < long >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_StaticProperties["Copy"] = new BSFunctionReference(
                new BSFunction(
                    "function Copy(sourceArray, sourceIndex, destinationArray, destinationIndex, length)",
                    a =>
                    {
                        Array.Copy(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < long >( a[1] ),
                            WrapperHelper.UnwrapObject < Array >( a[2] ),
                            WrapperHelper.UnwrapObject < long >( a[3] ),
                            WrapperHelper.UnwrapObject < long >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_StaticProperties["BinarySearch"] = new BSFunctionReference(
                new BSFunction(
                    "function BinarySearch(array, index, length, value)",
                    a => new BSObject(
                        ( decimal ) Array.BinarySearch(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < object >( a[3] ) ) ),
                    4 ) );

            m_StaticProperties["BinarySearch"] = new BSFunctionReference(
                new BSFunction(
                    "function BinarySearch(array, value, comparer)",
                    a => new BSObject(
                        ( decimal ) Array.BinarySearch(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ),
                            WrapperHelper.UnwrapObject < IComparer >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["BinarySearch"] = new BSFunctionReference(
                new BSFunction(
                    "function BinarySearch(array, index, length, value, comparer)",
                    a => new BSObject(
                        ( decimal ) Array.BinarySearch(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < object >( a[3] ),
                            WrapperHelper.UnwrapObject < IComparer >( a[4] ) ) ),
                    5 ) );

            m_StaticProperties["IndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function IndexOf(array, value)",
                    a => new BSObject(
                        ( decimal ) Array.IndexOf(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["IndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function IndexOf(array, value, startIndex)",
                    a => new BSObject(
                        ( decimal ) Array.IndexOf(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["IndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function IndexOf(array, value, startIndex, count)",
                    a => new BSObject(
                        ( decimal ) Array.IndexOf(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) ) ),
                    4 ) );

            m_StaticProperties["LastIndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function LastIndexOf(array, value)",
                    a => new BSObject(
                        ( decimal ) Array.LastIndexOf(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["LastIndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function LastIndexOf(array, value, startIndex)",
                    a => new BSObject(
                        ( decimal ) Array.LastIndexOf(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["LastIndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function LastIndexOf(array, value, startIndex, count)",
                    a => new BSObject(
                        ( decimal ) Array.LastIndexOf(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) ) ),
                    4 ) );

            m_StaticProperties["Reverse"] = new BSFunctionReference(
                new BSFunction(
                    "function Reverse(array)",
                    a =>
                    {
                        Array.Reverse( WrapperHelper.UnwrapObject < Array >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_StaticProperties["Reverse"] = new BSFunctionReference(
                new BSFunction(
                    "function Reverse(array, index, length)",
                    a =>
                    {
                        Array.Reverse(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_StaticProperties["Sort"] = new BSFunctionReference(
                new BSFunction(
                    "function Sort(array)",
                    a =>
                    {
                        Array.Sort( WrapperHelper.UnwrapObject < Array >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_StaticProperties["Sort"] = new BSFunctionReference(
                new BSFunction(
                    "function Sort(array, index, length)",
                    a =>
                    {
                        Array.Sort(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_StaticProperties["Sort"] = new BSFunctionReference(
                new BSFunction(
                    "function Sort(array, comparer)",
                    a =>
                    {
                        Array.Sort(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < IComparer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["Sort"] = new BSFunctionReference(
                new BSFunction(
                    "function Sort(array, index, length, comparer)",
                    a =>
                    {
                        Array.Sort(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < IComparer >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_StaticProperties["Sort"] = new BSFunctionReference(
                new BSFunction(
                    "function Sort(keys, items)",
                    a =>
                    {
                        Array.Sort(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < Array >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["Sort"] = new BSFunctionReference(
                new BSFunction(
                    "function Sort(keys, items, comparer)",
                    a =>
                    {
                        Array.Sort(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < Array >( a[1] ),
                            WrapperHelper.UnwrapObject < IComparer >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_StaticProperties["Sort"] = new BSFunctionReference(
                new BSFunction(
                    "function Sort(keys, items, index, length)",
                    a =>
                    {
                        Array.Sort(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < Array >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_StaticProperties["Sort"] = new BSFunctionReference(
                new BSFunction(
                    "function Sort(keys, items, index, length, comparer)",
                    a =>
                    {
                        Array.Sort(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < Array >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < IComparer >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_StaticProperties["Clear"] = new BSFunctionReference(
                new BSFunction(
                    "function Clear(array, index, length)",
                    a =>
                    {
                        Array.Clear(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_StaticProperties["Copy"] = new BSFunctionReference(
                new BSFunction(
                    "function Copy(sourceArray, destinationArray, length)",
                    a =>
                    {
                        Array.Copy(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < Array >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_StaticProperties["Copy"] = new BSFunctionReference(
                new BSFunction(
                    "function Copy(sourceArray, sourceIndex, destinationArray, destinationIndex, length)",
                    a =>
                    {
                        Array.Copy(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < Array >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_StaticProperties["ConstrainedCopy"] = new BSFunctionReference(
                new BSFunction(
                    "function ConstrainedCopy(sourceArray, sourceIndex, destinationArray, destinationIndex, length)",
                    a =>
                    {
                        Array.ConstrainedCopy(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < Array >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Array()
        {
            WrapperHelper.AddRecastWrapper < Array >( o => new BSWrapperObject_System_Array( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Collections_IComparer : BSWrapperObject < IComparer >

    {
        #region Public

        public BSWrapperObject_System_Collections_IComparer( IComparer obj ) : base( obj )
        {
            m_Properties["Compare"] = new BSFunctionReference(
                new BSFunction(
                    "function Compare(x, y)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.Compare(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) ) ),
                    2 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Collections_IComparer : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Collections_IComparer() : base( typeof( IComparer ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Collections_IComparer()
        {
            WrapperHelper.AddRecastWrapper < IComparer >( o => new BSWrapperObject_System_Collections_IComparer( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_GraphicsBuffer : BSWrapperObject < GraphicsBuffer >

    {
        #region Public

        public BSWrapperObject_UnityEngine_GraphicsBuffer( GraphicsBuffer obj ) : base( obj )
        {
            m_Properties["count"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.count ),
                null );

            m_Properties["stride"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.stride ),
                null );

            m_Properties["Dispose"] = new BSFunctionReference(
                new BSFunction(
                    "function Dispose()",
                    a =>
                    {
                        m_InternalObject.Dispose();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Release"] = new BSFunctionReference(
                new BSFunction(
                    "function Release()",
                    a =>
                    {
                        m_InternalObject.Release();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["IsValid"] = new BSFunctionReference(
                new BSFunction(
                    "function IsValid()",
                    a => m_InternalObject.IsValid() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["SetData"] = new BSFunctionReference(
                new BSFunction(
                    "function SetData(data)",
                    a =>
                    {
                        m_InternalObject.SetData( WrapperHelper.UnwrapObject < Array >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetData"] = new BSFunctionReference(
                new BSFunction(
                    "function SetData(data, managedBufferStartIndex, graphicsBufferStartIndex, count)",
                    a =>
                    {
                        m_InternalObject.SetData(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["GetData"] = new BSFunctionReference(
                new BSFunction(
                    "function GetData(data)",
                    a =>
                    {
                        m_InternalObject.GetData( WrapperHelper.UnwrapObject < Array >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetData"] = new BSFunctionReference(
                new BSFunction(
                    "function GetData(data, managedBufferStartIndex, computeBufferStartIndex, count)",
                    a =>
                    {
                        m_InternalObject.GetData(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["GetNativeBufferPtr"] = new BSFunctionReference(
                new BSFunction(
                    "function GetNativeBufferPtr()",
                    a => new BSWrapperObject_System_IntPtr( m_InternalObject.GetNativeBufferPtr() ),
                    0 ) );

            m_Properties["SetCounterValue"] = new BSFunctionReference(
                new BSFunction(
                    "function SetCounterValue(counterValue)",
                    a =>
                    {
                        m_InternalObject.SetCounterValue( WrapperHelper.UnwrapObject < uint >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_GraphicsBuffer : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_GraphicsBuffer() : base( typeof( GraphicsBuffer ) )
        {
            m_StaticProperties["CopyCount"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyCount(src, dst, dstOffsetBytes)",
                    a =>
                    {
                        GraphicsBuffer.CopyCount(
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_StaticProperties["CopyCount"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyCount(src, dst, dstOffsetBytes)",
                    a =>
                    {
                        GraphicsBuffer.CopyCount(
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_StaticProperties["CopyCount"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyCount(src, dst, dstOffsetBytes)",
                    a =>
                    {
                        GraphicsBuffer.CopyCount(
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_StaticProperties["CopyCount"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyCount(src, dst, dstOffsetBytes)",
                    a =>
                    {
                        GraphicsBuffer.CopyCount(
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_GraphicsBuffer()
        {
            WrapperHelper.AddRecastWrapper < GraphicsBuffer >(
                o => new BSWrapperObject_UnityEngine_GraphicsBuffer( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Canvas : BSWrapperObject < Canvas >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Canvas( Canvas obj ) : base( obj )
        {
            m_Properties["isRootCanvas"] = new BSReflectionReference(
                () => m_InternalObject.isRootCanvas ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["pixelRect"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Rect( m_InternalObject.pixelRect ),
                null );

            m_Properties["scaleFactor"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.scaleFactor ),
                x => m_InternalObject.scaleFactor = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["referencePixelsPerUnit"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.referencePixelsPerUnit ),
                x => m_InternalObject.referencePixelsPerUnit = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["overridePixelPerfect"] = new BSReflectionReference(
                () => m_InternalObject.overridePixelPerfect ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.overridePixelPerfect = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["pixelPerfect"] = new BSReflectionReference(
                () => m_InternalObject.pixelPerfect ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.pixelPerfect = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["planeDistance"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.planeDistance ),
                x => m_InternalObject.planeDistance = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["renderOrder"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.renderOrder ),
                null );

            m_Properties["overrideSorting"] = new BSReflectionReference(
                () => m_InternalObject.overrideSorting ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.overrideSorting = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["sortingOrder"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.sortingOrder ),
                x => m_InternalObject.sortingOrder = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["targetDisplay"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.targetDisplay ),
                x => m_InternalObject.targetDisplay = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["sortingLayerID"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.sortingLayerID ),
                x => m_InternalObject.sortingLayerID = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["cachedSortingLayerValue"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.cachedSortingLayerValue ),
                null );

            m_Properties["sortingLayerName"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.sortingLayerName ),
                x => m_InternalObject.sortingLayerName = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["rootCanvas"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Canvas( m_InternalObject.rootCanvas ),
                null );

            m_Properties["renderingDisplaySize"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.renderingDisplaySize ),
                null );

            m_Properties["worldCamera"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Camera( m_InternalObject.worldCamera ),
                x => m_InternalObject.worldCamera = WrapperHelper.UnwrapObject < Camera >( x ) );

            m_Properties["normalizedSortingGridSize"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.normalizedSortingGridSize ),
                x => m_InternalObject.normalizedSortingGridSize = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["sortingGridNormalizedSize"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.sortingGridNormalizedSize ),
                x => m_InternalObject.sortingGridNormalizedSize = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isActiveAndEnabled"] = new BSReflectionReference(
                () => m_InternalObject.isActiveAndEnabled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Canvas : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Canvas() : base( typeof( Canvas ) )
        {
            m_StaticProperties["GetDefaultCanvasTextMaterial"] = new BSFunctionReference(
                new BSFunction(
                    "function GetDefaultCanvasTextMaterial()",
                    a => new BSWrapperObject_UnityEngine_Material( Canvas.GetDefaultCanvasTextMaterial() ),
                    0 ) );

            m_StaticProperties["GetDefaultCanvasMaterial"] = new BSFunctionReference(
                new BSFunction(
                    "function GetDefaultCanvasMaterial()",
                    a => new BSWrapperObject_UnityEngine_Material( Canvas.GetDefaultCanvasMaterial() ),
                    0 ) );

            m_StaticProperties["GetETC1SupportedCanvasMaterial"] = new BSFunctionReference(
                new BSFunction(
                    "function GetETC1SupportedCanvasMaterial()",
                    a => new BSWrapperObject_UnityEngine_Material( Canvas.GetETC1SupportedCanvasMaterial() ),
                    0 ) );

            m_StaticProperties["ForceUpdateCanvases"] = new BSFunctionReference(
                new BSFunction(
                    "function ForceUpdateCanvases()",
                    a =>
                    {
                        Canvas.ForceUpdateCanvases();

                        return new BSObject( null );
                    },
                    0 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Canvas()
        {
            WrapperHelper.AddRecastWrapper < Canvas >( o => new BSWrapperObject_UnityEngine_Canvas( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Camera : BSWrapperObject < Camera >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Camera( Camera obj ) : base( obj )
        {
            m_Properties["nearClipPlane"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.nearClipPlane ),
                x => m_InternalObject.nearClipPlane = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["farClipPlane"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.farClipPlane ),
                x => m_InternalObject.farClipPlane = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["fieldOfView"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.fieldOfView ),
                x => m_InternalObject.fieldOfView = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["allowHDR"] = new BSReflectionReference(
                () => m_InternalObject.allowHDR ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.allowHDR = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["allowMSAA"] = new BSReflectionReference(
                () => m_InternalObject.allowMSAA ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.allowMSAA = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["allowDynamicResolution"] = new BSReflectionReference(
                () => m_InternalObject.allowDynamicResolution ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.allowDynamicResolution = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["forceIntoRenderTexture"] = new BSReflectionReference(
                () => m_InternalObject.forceIntoRenderTexture ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.forceIntoRenderTexture = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["orthographicSize"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.orthographicSize ),
                x => m_InternalObject.orthographicSize = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["orthographic"] = new BSReflectionReference(
                () => m_InternalObject.orthographic ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.orthographic = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["transparencySortAxis"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.transparencySortAxis ),
                x => m_InternalObject.transparencySortAxis = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["depth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.depth ),
                x => m_InternalObject.depth = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["aspect"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.aspect ),
                x => m_InternalObject.aspect = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["velocity"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.velocity ),
                null );

            m_Properties["cullingMask"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.cullingMask ),
                x => m_InternalObject.cullingMask = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["eventMask"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.eventMask ),
                x => m_InternalObject.eventMask = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["layerCullSpherical"] = new BSReflectionReference(
                () => m_InternalObject.layerCullSpherical ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.layerCullSpherical = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["overrideSceneCullingMask"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.overrideSceneCullingMask ),
                x => m_InternalObject.overrideSceneCullingMask = WrapperHelper.UnwrapObject < ulong >( x ) );

            m_Properties["useOcclusionCulling"] = new BSReflectionReference(
                () => m_InternalObject.useOcclusionCulling ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useOcclusionCulling = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["cullingMatrix"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Matrix4x4( m_InternalObject.cullingMatrix ),
                x => m_InternalObject.cullingMatrix = WrapperHelper.UnwrapObject < Matrix4x4 >( x ) );

            m_Properties["backgroundColor"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( m_InternalObject.backgroundColor ),
                x => m_InternalObject.backgroundColor = WrapperHelper.UnwrapObject < Color >( x ) );

            m_Properties["clearStencilAfterLightingPass"] = new BSReflectionReference(
                () => m_InternalObject.clearStencilAfterLightingPass ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.clearStencilAfterLightingPass = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["usePhysicalProperties"] = new BSReflectionReference(
                () => m_InternalObject.usePhysicalProperties ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.usePhysicalProperties = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["sensorSize"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.sensorSize ),
                x => m_InternalObject.sensorSize = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["lensShift"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.lensShift ),
                x => m_InternalObject.lensShift = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["focalLength"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.focalLength ),
                x => m_InternalObject.focalLength = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["rect"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Rect( m_InternalObject.rect ),
                x => m_InternalObject.rect = WrapperHelper.UnwrapObject < Rect >( x ) );

            m_Properties["pixelRect"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Rect( m_InternalObject.pixelRect ),
                x => m_InternalObject.pixelRect = WrapperHelper.UnwrapObject < Rect >( x ) );

            m_Properties["pixelWidth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.pixelWidth ),
                null );

            m_Properties["pixelHeight"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.pixelHeight ),
                null );

            m_Properties["scaledPixelWidth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.scaledPixelWidth ),
                null );

            m_Properties["scaledPixelHeight"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.scaledPixelHeight ),
                null );

            m_Properties["targetTexture"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_RenderTexture( m_InternalObject.targetTexture ),
                x => m_InternalObject.targetTexture = WrapperHelper.UnwrapObject < RenderTexture >( x ) );

            m_Properties["activeTexture"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_RenderTexture( m_InternalObject.activeTexture ),
                null );

            m_Properties["targetDisplay"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.targetDisplay ),
                x => m_InternalObject.targetDisplay = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["cameraToWorldMatrix"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Matrix4x4( m_InternalObject.cameraToWorldMatrix ),
                null );

            m_Properties["worldToCameraMatrix"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Matrix4x4( m_InternalObject.worldToCameraMatrix ),
                x => m_InternalObject.worldToCameraMatrix = WrapperHelper.UnwrapObject < Matrix4x4 >( x ) );

            m_Properties["projectionMatrix"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Matrix4x4( m_InternalObject.projectionMatrix ),
                x => m_InternalObject.projectionMatrix = WrapperHelper.UnwrapObject < Matrix4x4 >( x ) );

            m_Properties["nonJitteredProjectionMatrix"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Matrix4x4( m_InternalObject.nonJitteredProjectionMatrix ),
                x => m_InternalObject.nonJitteredProjectionMatrix = WrapperHelper.UnwrapObject < Matrix4x4 >( x ) );

            m_Properties["useJitteredProjectionMatrixForTransparentRendering"] = new BSReflectionReference(
                () => m_InternalObject.useJitteredProjectionMatrixForTransparentRendering
                    ? BSObject.One
                    : BSObject.Zero,
                x => m_InternalObject.useJitteredProjectionMatrixForTransparentRendering =
                    WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["previousViewProjectionMatrix"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Matrix4x4( m_InternalObject.previousViewProjectionMatrix ),
                null );

            m_Properties["scene"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_SceneManagement_Scene( m_InternalObject.scene ),
                x => m_InternalObject.scene = WrapperHelper.UnwrapObject < Scene >( x ) );

            m_Properties["stereoEnabled"] = new BSReflectionReference(
                () => m_InternalObject.stereoEnabled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["stereoSeparation"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.stereoSeparation ),
                x => m_InternalObject.stereoSeparation = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["stereoConvergence"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.stereoConvergence ),
                x => m_InternalObject.stereoConvergence = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["areVRStereoViewMatricesWithinSingleCullTolerance"] = new BSReflectionReference(
                () => m_InternalObject.areVRStereoViewMatricesWithinSingleCullTolerance ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["commandBufferCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.commandBufferCount ),
                null );

            m_Properties["near"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.near ),
                x => m_InternalObject.near = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["far"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.far ),
                x => m_InternalObject.far = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["fov"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.fov ),
                x => m_InternalObject.fov = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["hdr"] = new BSReflectionReference(
                () => m_InternalObject.hdr ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.hdr = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isActiveAndEnabled"] = new BSReflectionReference(
                () => m_InternalObject.isActiveAndEnabled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["Reset"] = new BSFunctionReference(
                new BSFunction(
                    "function Reset()",
                    a =>
                    {
                        m_InternalObject.Reset();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["ResetTransparencySortSettings"] = new BSFunctionReference(
                new BSFunction(
                    "function ResetTransparencySortSettings()",
                    a =>
                    {
                        m_InternalObject.ResetTransparencySortSettings();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["ResetAspect"] = new BSFunctionReference(
                new BSFunction(
                    "function ResetAspect()",
                    a =>
                    {
                        m_InternalObject.ResetAspect();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["ResetCullingMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function ResetCullingMatrix()",
                    a =>
                    {
                        m_InternalObject.ResetCullingMatrix();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetReplacementShader"] = new BSFunctionReference(
                new BSFunction(
                    "function SetReplacementShader(shader, replacementTag)",
                    a =>
                    {
                        m_InternalObject.SetReplacementShader(
                            WrapperHelper.UnwrapObject < Shader >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["ResetReplacementShader"] = new BSFunctionReference(
                new BSFunction(
                    "function ResetReplacementShader()",
                    a =>
                    {
                        m_InternalObject.ResetReplacementShader();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetGateFittedFieldOfView"] = new BSFunctionReference(
                new BSFunction(
                    "function GetGateFittedFieldOfView()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetGateFittedFieldOfView() ),
                    0 ) );

            m_Properties["GetGateFittedLensShift"] = new BSFunctionReference(
                new BSFunction(
                    "function GetGateFittedLensShift()",
                    a => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.GetGateFittedLensShift() ),
                    0 ) );

            m_Properties["SetTargetBuffers"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTargetBuffers(colorBuffer, depthBuffer)",
                    a =>
                    {
                        m_InternalObject.SetTargetBuffers(
                            WrapperHelper.UnwrapObject < RenderBuffer >( a[0] ),
                            WrapperHelper.UnwrapObject < RenderBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["ResetWorldToCameraMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function ResetWorldToCameraMatrix()",
                    a =>
                    {
                        m_InternalObject.ResetWorldToCameraMatrix();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["ResetProjectionMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function ResetProjectionMatrix()",
                    a =>
                    {
                        m_InternalObject.ResetProjectionMatrix();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["CalculateObliqueMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function CalculateObliqueMatrix(clipPlane)",
                    a => new BSWrapperObject_UnityEngine_Matrix4x4(
                        m_InternalObject.CalculateObliqueMatrix( WrapperHelper.UnwrapObject < Vector4 >( a[0] ) ) ),
                    1 ) );

            m_Properties["WorldToScreenPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function WorldToScreenPoint(position)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.WorldToScreenPoint( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["WorldToViewportPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function WorldToViewportPoint(position)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.WorldToViewportPoint( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["ViewportToWorldPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function ViewportToWorldPoint(position)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.ViewportToWorldPoint( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["ScreenToWorldPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function ScreenToWorldPoint(position)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.ScreenToWorldPoint( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["ScreenToViewportPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function ScreenToViewportPoint(position)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.ScreenToViewportPoint( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["ViewportToScreenPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function ViewportToScreenPoint(position)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.ViewportToScreenPoint( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["ViewportPointToRay"] = new BSFunctionReference(
                new BSFunction(
                    "function ViewportPointToRay(pos)",
                    a => new BSWrapperObject_UnityEngine_Ray(
                        m_InternalObject.ViewportPointToRay( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["ScreenPointToRay"] = new BSFunctionReference(
                new BSFunction(
                    "function ScreenPointToRay(pos)",
                    a => new BSWrapperObject_UnityEngine_Ray(
                        m_InternalObject.ScreenPointToRay( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["ResetStereoProjectionMatrices"] = new BSFunctionReference(
                new BSFunction(
                    "function ResetStereoProjectionMatrices()",
                    a =>
                    {
                        m_InternalObject.ResetStereoProjectionMatrices();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["ResetStereoViewMatrices"] = new BSFunctionReference(
                new BSFunction(
                    "function ResetStereoViewMatrices()",
                    a =>
                    {
                        m_InternalObject.ResetStereoViewMatrices();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["RenderToCubemap"] = new BSFunctionReference(
                new BSFunction(
                    "function RenderToCubemap(cubemap, faceMask)",
                    a => m_InternalObject.RenderToCubemap(
                        WrapperHelper.UnwrapObject < Cubemap >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_Properties["RenderToCubemap"] = new BSFunctionReference(
                new BSFunction(
                    "function RenderToCubemap(cubemap)",
                    a => m_InternalObject.RenderToCubemap( WrapperHelper.UnwrapObject < Cubemap >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["RenderToCubemap"] = new BSFunctionReference(
                new BSFunction(
                    "function RenderToCubemap(cubemap, faceMask)",
                    a => m_InternalObject.RenderToCubemap(
                        WrapperHelper.UnwrapObject < RenderTexture >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_Properties["RenderToCubemap"] = new BSFunctionReference(
                new BSFunction(
                    "function RenderToCubemap(cubemap)",
                    a => m_InternalObject.RenderToCubemap( WrapperHelper.UnwrapObject < RenderTexture >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Render"] = new BSFunctionReference(
                new BSFunction(
                    "function Render()",
                    a =>
                    {
                        m_InternalObject.Render();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["RenderWithShader"] = new BSFunctionReference(
                new BSFunction(
                    "function RenderWithShader(shader, replacementTag)",
                    a =>
                    {
                        m_InternalObject.RenderWithShader(
                            WrapperHelper.UnwrapObject < Shader >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["RenderDontRestore"] = new BSFunctionReference(
                new BSFunction(
                    "function RenderDontRestore()",
                    a =>
                    {
                        m_InternalObject.RenderDontRestore();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["CopyFrom"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyFrom(other)",
                    a =>
                    {
                        m_InternalObject.CopyFrom( WrapperHelper.UnwrapObject < Camera >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["RemoveAllCommandBuffers"] = new BSFunctionReference(
                new BSFunction(
                    "function RemoveAllCommandBuffers()",
                    a =>
                    {
                        m_InternalObject.RemoveAllCommandBuffers();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["ResetFieldOfView"] = new BSFunctionReference(
                new BSFunction(
                    "function ResetFieldOfView()",
                    a =>
                    {
                        m_InternalObject.ResetFieldOfView();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetStereoViewMatrices"] = new BSFunctionReference(
                new BSFunction(
                    "function SetStereoViewMatrices(leftMatrix, rightMatrix)",
                    a =>
                    {
                        m_InternalObject.SetStereoViewMatrices(
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[0] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetStereoProjectionMatrices"] = new BSFunctionReference(
                new BSFunction(
                    "function SetStereoProjectionMatrices(leftMatrix, rightMatrix)",
                    a =>
                    {
                        m_InternalObject.SetStereoProjectionMatrices(
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[0] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Camera : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Camera() : base( typeof( Camera ) )
        {
            m_StaticProperties["main"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Camera( Camera.main ),
                null );

            m_StaticProperties["current"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Camera( Camera.current ),
                null );

            m_StaticProperties["allCamerasCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Camera.allCamerasCount ),
                null );

            m_StaticProperties["FocalLengthToFieldOfView"] = new BSFunctionReference(
                new BSFunction(
                    "function FocalLengthToFieldOfView(focalLength, sensorSize)",
                    a => new BSObject(
                        ( decimal ) Camera.FocalLengthToFieldOfView(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["FieldOfViewToFocalLength"] = new BSFunctionReference(
                new BSFunction(
                    "function FieldOfViewToFocalLength(fieldOfView, sensorSize)",
                    a => new BSObject(
                        ( decimal ) Camera.FieldOfViewToFocalLength(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["HorizontalToVerticalFieldOfView"] = new BSFunctionReference(
                new BSFunction(
                    "function HorizontalToVerticalFieldOfView(horizontalFieldOfView, aspectRatio)",
                    a => new BSObject(
                        ( decimal ) Camera.HorizontalToVerticalFieldOfView(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["VerticalToHorizontalFieldOfView"] = new BSFunctionReference(
                new BSFunction(
                    "function VerticalToHorizontalFieldOfView(verticalFieldOfView, aspectRatio)",
                    a => new BSObject(
                        ( decimal ) Camera.VerticalToHorizontalFieldOfView(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["SetupCurrent"] = new BSFunctionReference(
                new BSFunction(
                    "function SetupCurrent(cur)",
                    a =>
                    {
                        Camera.SetupCurrent( WrapperHelper.UnwrapObject < Camera >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Camera()
        {
            WrapperHelper.AddRecastWrapper < Camera >( o => new BSWrapperObject_UnityEngine_Camera( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Cubemap : BSWrapperObject < Cubemap >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Cubemap( Cubemap obj ) : base( obj )
        {
            m_Properties["isReadable"] = new BSReflectionReference(
                () => m_InternalObject.isReadable ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["streamingMipmaps"] = new BSReflectionReference(
                () => m_InternalObject.streamingMipmaps ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["streamingMipmapsPriority"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.streamingMipmapsPriority ),
                null );

            m_Properties["requestedMipmapLevel"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.requestedMipmapLevel ),
                x => m_InternalObject.requestedMipmapLevel = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["desiredMipmapLevel"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.desiredMipmapLevel ),
                null );

            m_Properties["loadingMipmapLevel"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.loadingMipmapLevel ),
                null );

            m_Properties["loadedMipmapLevel"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.loadedMipmapLevel ),
                null );

            m_Properties["mipmapCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.mipmapCount ),
                null );

            m_Properties["width"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.width ),
                x => m_InternalObject.width = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["height"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.height ),
                x => m_InternalObject.height = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["anisoLevel"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.anisoLevel ),
                x => m_InternalObject.anisoLevel = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["mipMapBias"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.mipMapBias ),
                x => m_InternalObject.mipMapBias = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["texelSize"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.texelSize ),
                null );

            m_Properties["updateCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.updateCount ),
                null );

            m_Properties["imageContentsHash"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Hash128( m_InternalObject.imageContentsHash ),
                x => m_InternalObject.imageContentsHash = WrapperHelper.UnwrapObject < Hash128 >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["UpdateExternalTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function UpdateExternalTexture(nativeTexture)",
                    a =>
                    {
                        m_InternalObject.UpdateExternalTexture( WrapperHelper.UnwrapObject < IntPtr >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SmoothEdges"] = new BSFunctionReference(
                new BSFunction(
                    "function SmoothEdges(smoothRegionWidthInPixels)",
                    a =>
                    {
                        m_InternalObject.SmoothEdges( WrapperHelper.UnwrapObject < int >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SmoothEdges"] = new BSFunctionReference(
                new BSFunction(
                    "function SmoothEdges()",
                    a =>
                    {
                        m_InternalObject.SmoothEdges();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["ClearRequestedMipmapLevel"] = new BSFunctionReference(
                new BSFunction(
                    "function ClearRequestedMipmapLevel()",
                    a =>
                    {
                        m_InternalObject.ClearRequestedMipmapLevel();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["IsRequestedMipmapLevelLoaded"] = new BSFunctionReference(
                new BSFunction(
                    "function IsRequestedMipmapLevelLoaded()",
                    a => m_InternalObject.IsRequestedMipmapLevelLoaded() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["Apply"] = new BSFunctionReference(
                new BSFunction(
                    "function Apply(updateMipmaps, makeNoLongerReadable)",
                    a =>
                    {
                        m_InternalObject.Apply(
                            WrapperHelper.UnwrapObject < bool >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Apply"] = new BSFunctionReference(
                new BSFunction(
                    "function Apply(updateMipmaps)",
                    a =>
                    {
                        m_InternalObject.Apply( WrapperHelper.UnwrapObject < bool >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Apply"] = new BSFunctionReference(
                new BSFunction(
                    "function Apply()",
                    a =>
                    {
                        m_InternalObject.Apply();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetNativeTexturePtr"] = new BSFunctionReference(
                new BSFunction(
                    "function GetNativeTexturePtr()",
                    a => new BSWrapperObject_System_IntPtr( m_InternalObject.GetNativeTexturePtr() ),
                    0 ) );

            m_Properties["GetNativeTextureID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetNativeTextureID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetNativeTextureID() ),
                    0 ) );

            m_Properties["IncrementUpdateCount"] = new BSFunctionReference(
                new BSFunction(
                    "function IncrementUpdateCount()",
                    a =>
                    {
                        m_InternalObject.IncrementUpdateCount();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Cubemap : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Cubemap() : base( typeof( Cubemap ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Cubemap()
        {
            WrapperHelper.AddRecastWrapper < Cubemap >( o => new BSWrapperObject_UnityEngine_Cubemap( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Rendering_CommandBuffer : BSWrapperObject < CommandBuffer >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Rendering_CommandBuffer( CommandBuffer obj ) : base( obj )
        {
            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["sizeInBytes"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.sizeInBytes ),
                null );

            m_Properties["ConvertTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function ConvertTexture(src, dst)",
                    a =>
                    {
                        m_InternalObject.ConvertTexture(
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[0] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["ConvertTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function ConvertTexture(src, srcElement, dst, dstElement)",
                    a =>
                    {
                        m_InternalObject.ConvertTexture(
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["WaitAllAsyncReadbackRequests"] = new BSFunctionReference(
                new BSFunction(
                    "function WaitAllAsyncReadbackRequests()",
                    a =>
                    {
                        m_InternalObject.WaitAllAsyncReadbackRequests();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetInvertCulling"] = new BSFunctionReference(
                new BSFunction(
                    "function SetInvertCulling(invertCulling)",
                    a =>
                    {
                        m_InternalObject.SetInvertCulling( WrapperHelper.UnwrapObject < bool >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetComputeFloatParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeFloatParam(computeShader, nameID, val)",
                    a =>
                    {
                        m_InternalObject.SetComputeFloatParam(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetComputeIntParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeIntParam(computeShader, nameID, val)",
                    a =>
                    {
                        m_InternalObject.SetComputeIntParam(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetComputeVectorParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeVectorParam(computeShader, nameID, val)",
                    a =>
                    {
                        m_InternalObject.SetComputeVectorParam(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetComputeMatrixParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeMatrixParam(computeShader, nameID, val)",
                    a =>
                    {
                        m_InternalObject.SetComputeMatrixParam(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetRayTracingShaderPass"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRayTracingShaderPass(rayTracingShader, passName)",
                    a =>
                    {
                        m_InternalObject.SetRayTracingShaderPass(
                            WrapperHelper.UnwrapObject < RayTracingShader >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Clear"] = new BSFunctionReference(
                new BSFunction(
                    "function Clear()",
                    a =>
                    {
                        m_InternalObject.Clear();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["ClearRandomWriteTargets"] = new BSFunctionReference(
                new BSFunction(
                    "function ClearRandomWriteTargets()",
                    a =>
                    {
                        m_InternalObject.ClearRandomWriteTargets();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetViewport"] = new BSFunctionReference(
                new BSFunction(
                    "function SetViewport(pixelRect)",
                    a =>
                    {
                        m_InternalObject.SetViewport( WrapperHelper.UnwrapObject < Rect >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["EnableScissorRect"] = new BSFunctionReference(
                new BSFunction(
                    "function EnableScissorRect(scissor)",
                    a =>
                    {
                        m_InternalObject.EnableScissorRect( WrapperHelper.UnwrapObject < Rect >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["DisableScissorRect"] = new BSFunctionReference(
                new BSFunction(
                    "function DisableScissorRect()",
                    a =>
                    {
                        m_InternalObject.DisableScissorRect();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetTemporaryRT"] = new BSFunctionReference(
                new BSFunction(
                    "function GetTemporaryRT(nameID, width, height, depthBuffer)",
                    a =>
                    {
                        m_InternalObject.GetTemporaryRT(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["GetTemporaryRT"] = new BSFunctionReference(
                new BSFunction(
                    "function GetTemporaryRT(nameID, width, height)",
                    a =>
                    {
                        m_InternalObject.GetTemporaryRT(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["GetTemporaryRT"] = new BSFunctionReference(
                new BSFunction(
                    "function GetTemporaryRT(nameID, desc)",
                    a =>
                    {
                        m_InternalObject.GetTemporaryRT(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < RenderTextureDescriptor >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetTemporaryRTArray"] = new BSFunctionReference(
                new BSFunction(
                    "function GetTemporaryRTArray(nameID, width, height, slices, depthBuffer)",
                    a =>
                    {
                        m_InternalObject.GetTemporaryRTArray(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["GetTemporaryRTArray"] = new BSFunctionReference(
                new BSFunction(
                    "function GetTemporaryRTArray(nameID, width, height, slices)",
                    a =>
                    {
                        m_InternalObject.GetTemporaryRTArray(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["ReleaseTemporaryRT"] = new BSFunctionReference(
                new BSFunction(
                    "function ReleaseTemporaryRT(nameID)",
                    a =>
                    {
                        m_InternalObject.ReleaseTemporaryRT( WrapperHelper.UnwrapObject < int >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["ClearRenderTarget"] = new BSFunctionReference(
                new BSFunction(
                    "function ClearRenderTarget(clearDepth, clearColor, backgroundColor, depth)",
                    a =>
                    {
                        m_InternalObject.ClearRenderTarget(
                            WrapperHelper.UnwrapObject < bool >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ),
                            WrapperHelper.UnwrapObject < Color >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["ClearRenderTarget"] = new BSFunctionReference(
                new BSFunction(
                    "function ClearRenderTarget(clearDepth, clearColor, backgroundColor)",
                    a =>
                    {
                        m_InternalObject.ClearRenderTarget(
                            WrapperHelper.UnwrapObject < bool >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ),
                            WrapperHelper.UnwrapObject < Color >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetGlobalFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalFloat(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetGlobalFloat(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetGlobalInt"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalInt(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetGlobalInt(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetGlobalVector"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalVector(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetGlobalVector(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetGlobalColor"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalColor(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetGlobalColor(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Color >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetGlobalMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalMatrix(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetGlobalMatrix(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["EnableShaderKeyword"] = new BSFunctionReference(
                new BSFunction(
                    "function EnableShaderKeyword(keyword)",
                    a =>
                    {
                        m_InternalObject.EnableShaderKeyword( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["DisableShaderKeyword"] = new BSFunctionReference(
                new BSFunction(
                    "function DisableShaderKeyword(keyword)",
                    a =>
                    {
                        m_InternalObject.DisableShaderKeyword( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetViewMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function SetViewMatrix(view)",
                    a =>
                    {
                        m_InternalObject.SetViewMatrix( WrapperHelper.UnwrapObject < Matrix4x4 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetProjectionMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function SetProjectionMatrix(proj)",
                    a =>
                    {
                        m_InternalObject.SetProjectionMatrix( WrapperHelper.UnwrapObject < Matrix4x4 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetViewProjectionMatrices"] = new BSFunctionReference(
                new BSFunction(
                    "function SetViewProjectionMatrices(view, proj)",
                    a =>
                    {
                        m_InternalObject.SetViewProjectionMatrices(
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[0] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetGlobalDepthBias"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalDepthBias(bias, slopeBias)",
                    a =>
                    {
                        m_InternalObject.SetGlobalDepthBias(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BeginSample"] = new BSFunctionReference(
                new BSFunction(
                    "function BeginSample(name)",
                    a =>
                    {
                        m_InternalObject.BeginSample( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["EndSample"] = new BSFunctionReference(
                new BSFunction(
                    "function EndSample(name)",
                    a =>
                    {
                        m_InternalObject.EndSample( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BeginSample"] = new BSFunctionReference(
                new BSFunction(
                    "function BeginSample(sampler)",
                    a =>
                    {
                        m_InternalObject.BeginSample( WrapperHelper.UnwrapObject < CustomSampler >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["EndSample"] = new BSFunctionReference(
                new BSFunction(
                    "function EndSample(sampler)",
                    a =>
                    {
                        m_InternalObject.EndSample( WrapperHelper.UnwrapObject < CustomSampler >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IncrementUpdateCount"] = new BSFunctionReference(
                new BSFunction(
                    "function IncrementUpdateCount(dest)",
                    a =>
                    {
                        m_InternalObject.IncrementUpdateCount(
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetInstanceMultiplier"] = new BSFunctionReference(
                new BSFunction(
                    "function SetInstanceMultiplier(multiplier)",
                    a =>
                    {
                        m_InternalObject.SetInstanceMultiplier( WrapperHelper.UnwrapObject < uint >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetRenderTarget"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRenderTarget(rt)",
                    a =>
                    {
                        m_InternalObject.SetRenderTarget(
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetRenderTarget"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRenderTarget(rt, mipLevel)",
                    a =>
                    {
                        m_InternalObject.SetRenderTarget(
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetRenderTarget"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRenderTarget(color, depth)",
                    a =>
                    {
                        m_InternalObject.SetRenderTarget(
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[0] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetRenderTarget"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRenderTarget(color, depth, mipLevel)",
                    a =>
                    {
                        m_InternalObject.SetRenderTarget(
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[0] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetRenderTarget"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRenderTarget(binding)",
                    a =>
                    {
                        m_InternalObject.SetRenderTarget( WrapperHelper.UnwrapObject < RenderTargetBinding >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetComputeBufferData"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeBufferData(buffer, data)",
                    a =>
                    {
                        m_InternalObject.SetComputeBufferData(
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[0] ),
                            WrapperHelper.UnwrapObject < Array >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetComputeBufferData"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeBufferData(buffer, data, managedBufferStartIndex, graphicsBufferStartIndex, count)",
                    a =>
                    {
                        m_InternalObject.SetComputeBufferData(
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[0] ),
                            WrapperHelper.UnwrapObject < Array >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["SetComputeBufferCounterValue"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeBufferCounterValue(buffer, counterValue)",
                    a =>
                    {
                        m_InternalObject.SetComputeBufferCounterValue(
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[0] ),
                            WrapperHelper.UnwrapObject < uint >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Dispose"] = new BSFunctionReference(
                new BSFunction(
                    "function Dispose()",
                    a =>
                    {
                        m_InternalObject.Dispose();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Release"] = new BSFunctionReference(
                new BSFunction(
                    "function Release()",
                    a =>
                    {
                        m_InternalObject.Release();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["CreateAsyncGraphicsFence"] = new BSFunctionReference(
                new BSFunction(
                    "function CreateAsyncGraphicsFence()",
                    a => new BSWrapperObject_UnityEngine_Rendering_GraphicsFence(
                        m_InternalObject.CreateAsyncGraphicsFence() ),
                    0 ) );

            m_Properties["WaitOnAsyncGraphicsFence"] = new BSFunctionReference(
                new BSFunction(
                    "function WaitOnAsyncGraphicsFence(fence)",
                    a =>
                    {
                        m_InternalObject.WaitOnAsyncGraphicsFence(
                            WrapperHelper.UnwrapObject < GraphicsFence >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetComputeFloatParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeFloatParam(computeShader, name, val)",
                    a =>
                    {
                        m_InternalObject.SetComputeFloatParam(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetComputeIntParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeIntParam(computeShader, name, val)",
                    a =>
                    {
                        m_InternalObject.SetComputeIntParam(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetComputeVectorParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeVectorParam(computeShader, name, val)",
                    a =>
                    {
                        m_InternalObject.SetComputeVectorParam(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetComputeMatrixParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeMatrixParam(computeShader, name, val)",
                    a =>
                    {
                        m_InternalObject.SetComputeMatrixParam(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetComputeTextureParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeTextureParam(computeShader, kernelIndex, name, rt)",
                    a =>
                    {
                        m_InternalObject.SetComputeTextureParam(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < string >( a[2] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetComputeTextureParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeTextureParam(computeShader, kernelIndex, nameID, rt)",
                    a =>
                    {
                        m_InternalObject.SetComputeTextureParam(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetComputeTextureParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeTextureParam(computeShader, kernelIndex, name, rt, mipLevel)",
                    a =>
                    {
                        m_InternalObject.SetComputeTextureParam(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < string >( a[2] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["SetComputeTextureParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeTextureParam(computeShader, kernelIndex, nameID, rt, mipLevel)",
                    a =>
                    {
                        m_InternalObject.SetComputeTextureParam(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["SetComputeBufferParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeBufferParam(computeShader, kernelIndex, nameID, buffer)",
                    a =>
                    {
                        m_InternalObject.SetComputeBufferParam(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetComputeBufferParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeBufferParam(computeShader, kernelIndex, name, buffer)",
                    a =>
                    {
                        m_InternalObject.SetComputeBufferParam(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < string >( a[2] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetComputeBufferParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeBufferParam(computeShader, kernelIndex, nameID, buffer)",
                    a =>
                    {
                        m_InternalObject.SetComputeBufferParam(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetComputeBufferParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeBufferParam(computeShader, kernelIndex, name, buffer)",
                    a =>
                    {
                        m_InternalObject.SetComputeBufferParam(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < string >( a[2] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetComputeConstantBufferParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeConstantBufferParam(computeShader, nameID, buffer, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetComputeConstantBufferParam(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["SetComputeConstantBufferParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeConstantBufferParam(computeShader, name, buffer, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetComputeConstantBufferParam(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["SetComputeConstantBufferParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeConstantBufferParam(computeShader, nameID, buffer, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetComputeConstantBufferParam(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["SetComputeConstantBufferParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetComputeConstantBufferParam(computeShader, name, buffer, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetComputeConstantBufferParam(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["DispatchCompute"] = new BSFunctionReference(
                new BSFunction(
                    "function DispatchCompute(computeShader, kernelIndex, threadGroupsX, threadGroupsY, threadGroupsZ)",
                    a =>
                    {
                        m_InternalObject.DispatchCompute(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["DispatchCompute"] = new BSFunctionReference(
                new BSFunction(
                    "function DispatchCompute(computeShader, kernelIndex, indirectBuffer, argsOffset)",
                    a =>
                    {
                        m_InternalObject.DispatchCompute(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[2] ),
                            WrapperHelper.UnwrapObject < uint >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["DispatchCompute"] = new BSFunctionReference(
                new BSFunction(
                    "function DispatchCompute(computeShader, kernelIndex, indirectBuffer, argsOffset)",
                    a =>
                    {
                        m_InternalObject.DispatchCompute(
                            WrapperHelper.UnwrapObject < ComputeShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[2] ),
                            WrapperHelper.UnwrapObject < uint >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["BuildRayTracingAccelerationStructure"] = new BSFunctionReference(
                new BSFunction(
                    "function BuildRayTracingAccelerationStructure(accelerationStructure)",
                    a =>
                    {
                        m_InternalObject.BuildRayTracingAccelerationStructure(
                            WrapperHelper.UnwrapObject < RayTracingAccelerationStructure >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BuildRayTracingAccelerationStructure"] = new BSFunctionReference(
                new BSFunction(
                    "function BuildRayTracingAccelerationStructure(accelerationStructure, relativeOrigin)",
                    a =>
                    {
                        m_InternalObject.BuildRayTracingAccelerationStructure(
                            WrapperHelper.UnwrapObject < RayTracingAccelerationStructure >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetRayTracingAccelerationStructure"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRayTracingAccelerationStructure(rayTracingShader, name, rayTracingAccelerationStructure)",
                    a =>
                    {
                        m_InternalObject.SetRayTracingAccelerationStructure(
                            WrapperHelper.UnwrapObject < RayTracingShader >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < RayTracingAccelerationStructure >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetRayTracingAccelerationStructure"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRayTracingAccelerationStructure(rayTracingShader, nameID, rayTracingAccelerationStructure)",
                    a =>
                    {
                        m_InternalObject.SetRayTracingAccelerationStructure(
                            WrapperHelper.UnwrapObject < RayTracingShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < RayTracingAccelerationStructure >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetRayTracingBufferParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRayTracingBufferParam(rayTracingShader, name, buffer)",
                    a =>
                    {
                        m_InternalObject.SetRayTracingBufferParam(
                            WrapperHelper.UnwrapObject < RayTracingShader >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetRayTracingBufferParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRayTracingBufferParam(rayTracingShader, nameID, buffer)",
                    a =>
                    {
                        m_InternalObject.SetRayTracingBufferParam(
                            WrapperHelper.UnwrapObject < RayTracingShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetRayTracingConstantBufferParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRayTracingConstantBufferParam(rayTracingShader, nameID, buffer, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetRayTracingConstantBufferParam(
                            WrapperHelper.UnwrapObject < RayTracingShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["SetRayTracingConstantBufferParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRayTracingConstantBufferParam(rayTracingShader, name, buffer, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetRayTracingConstantBufferParam(
                            WrapperHelper.UnwrapObject < RayTracingShader >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["SetRayTracingConstantBufferParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRayTracingConstantBufferParam(rayTracingShader, nameID, buffer, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetRayTracingConstantBufferParam(
                            WrapperHelper.UnwrapObject < RayTracingShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["SetRayTracingConstantBufferParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRayTracingConstantBufferParam(rayTracingShader, name, buffer, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetRayTracingConstantBufferParam(
                            WrapperHelper.UnwrapObject < RayTracingShader >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["SetRayTracingTextureParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRayTracingTextureParam(rayTracingShader, name, rt)",
                    a =>
                    {
                        m_InternalObject.SetRayTracingTextureParam(
                            WrapperHelper.UnwrapObject < RayTracingShader >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetRayTracingTextureParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRayTracingTextureParam(rayTracingShader, nameID, rt)",
                    a =>
                    {
                        m_InternalObject.SetRayTracingTextureParam(
                            WrapperHelper.UnwrapObject < RayTracingShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetRayTracingFloatParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRayTracingFloatParam(rayTracingShader, name, val)",
                    a =>
                    {
                        m_InternalObject.SetRayTracingFloatParam(
                            WrapperHelper.UnwrapObject < RayTracingShader >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetRayTracingFloatParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRayTracingFloatParam(rayTracingShader, nameID, val)",
                    a =>
                    {
                        m_InternalObject.SetRayTracingFloatParam(
                            WrapperHelper.UnwrapObject < RayTracingShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetRayTracingIntParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRayTracingIntParam(rayTracingShader, name, val)",
                    a =>
                    {
                        m_InternalObject.SetRayTracingIntParam(
                            WrapperHelper.UnwrapObject < RayTracingShader >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetRayTracingIntParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRayTracingIntParam(rayTracingShader, nameID, val)",
                    a =>
                    {
                        m_InternalObject.SetRayTracingIntParam(
                            WrapperHelper.UnwrapObject < RayTracingShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetRayTracingVectorParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRayTracingVectorParam(rayTracingShader, name, val)",
                    a =>
                    {
                        m_InternalObject.SetRayTracingVectorParam(
                            WrapperHelper.UnwrapObject < RayTracingShader >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetRayTracingVectorParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRayTracingVectorParam(rayTracingShader, nameID, val)",
                    a =>
                    {
                        m_InternalObject.SetRayTracingVectorParam(
                            WrapperHelper.UnwrapObject < RayTracingShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetRayTracingMatrixParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRayTracingMatrixParam(rayTracingShader, name, val)",
                    a =>
                    {
                        m_InternalObject.SetRayTracingMatrixParam(
                            WrapperHelper.UnwrapObject < RayTracingShader >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetRayTracingMatrixParam"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRayTracingMatrixParam(rayTracingShader, nameID, val)",
                    a =>
                    {
                        m_InternalObject.SetRayTracingMatrixParam(
                            WrapperHelper.UnwrapObject < RayTracingShader >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["DispatchRays"] = new BSFunctionReference(
                new BSFunction(
                    "function DispatchRays(rayTracingShader, rayGenName, width, height, depth, camera)",
                    a =>
                    {
                        m_InternalObject.DispatchRays(
                            WrapperHelper.UnwrapObject < RayTracingShader >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < uint >( a[2] ),
                            WrapperHelper.UnwrapObject < uint >( a[3] ),
                            WrapperHelper.UnwrapObject < uint >( a[4] ),
                            WrapperHelper.UnwrapObject < Camera >( a[5] ) );

                        return new BSObject( null );
                    },
                    6 ) );

            m_Properties["GenerateMips"] = new BSFunctionReference(
                new BSFunction(
                    "function GenerateMips(rt)",
                    a =>
                    {
                        m_InternalObject.GenerateMips( WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GenerateMips"] = new BSFunctionReference(
                new BSFunction(
                    "function GenerateMips(rt)",
                    a =>
                    {
                        m_InternalObject.GenerateMips( WrapperHelper.UnwrapObject < RenderTexture >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["ResolveAntiAliasedSurface"] = new BSFunctionReference(
                new BSFunction(
                    "function ResolveAntiAliasedSurface(rt, target)",
                    a =>
                    {
                        m_InternalObject.ResolveAntiAliasedSurface(
                            WrapperHelper.UnwrapObject < RenderTexture >( a[0] ),
                            WrapperHelper.UnwrapObject < RenderTexture >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["DrawMesh"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawMesh(mesh, matrix, material, submeshIndex, shaderPass, properties)",
                    a =>
                    {
                        m_InternalObject.DrawMesh(
                            WrapperHelper.UnwrapObject < Mesh >( a[0] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[1] ),
                            WrapperHelper.UnwrapObject < Material >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ),
                            WrapperHelper.UnwrapObject < MaterialPropertyBlock >( a[5] ) );

                        return new BSObject( null );
                    },
                    6 ) );

            m_Properties["DrawMesh"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawMesh(mesh, matrix, material, submeshIndex, shaderPass)",
                    a =>
                    {
                        m_InternalObject.DrawMesh(
                            WrapperHelper.UnwrapObject < Mesh >( a[0] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[1] ),
                            WrapperHelper.UnwrapObject < Material >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["DrawMesh"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawMesh(mesh, matrix, material, submeshIndex)",
                    a =>
                    {
                        m_InternalObject.DrawMesh(
                            WrapperHelper.UnwrapObject < Mesh >( a[0] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[1] ),
                            WrapperHelper.UnwrapObject < Material >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["DrawMesh"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawMesh(mesh, matrix, material)",
                    a =>
                    {
                        m_InternalObject.DrawMesh(
                            WrapperHelper.UnwrapObject < Mesh >( a[0] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[1] ),
                            WrapperHelper.UnwrapObject < Material >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["DrawRenderer"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawRenderer(renderer, material, submeshIndex, shaderPass)",
                    a =>
                    {
                        m_InternalObject.DrawRenderer(
                            WrapperHelper.UnwrapObject < Renderer >( a[0] ),
                            WrapperHelper.UnwrapObject < Material >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["DrawRenderer"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawRenderer(renderer, material, submeshIndex)",
                    a =>
                    {
                        m_InternalObject.DrawRenderer(
                            WrapperHelper.UnwrapObject < Renderer >( a[0] ),
                            WrapperHelper.UnwrapObject < Material >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["DrawRenderer"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawRenderer(renderer, material)",
                    a =>
                    {
                        m_InternalObject.DrawRenderer(
                            WrapperHelper.UnwrapObject < Renderer >( a[0] ),
                            WrapperHelper.UnwrapObject < Material >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["DrawMeshInstancedProcedural"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawMeshInstancedProcedural(mesh, submeshIndex, material, shaderPass, count, properties)",
                    a =>
                    {
                        m_InternalObject.DrawMeshInstancedProcedural(
                            WrapperHelper.UnwrapObject < Mesh >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < Material >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ),
                            WrapperHelper.UnwrapObject < MaterialPropertyBlock >( a[5] ) );

                        return new BSObject( null );
                    },
                    6 ) );

            m_Properties["DrawMeshInstancedIndirect"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawMeshInstancedIndirect(mesh, submeshIndex, material, shaderPass, bufferWithArgs, argsOffset, properties)",
                    a =>
                    {
                        m_InternalObject.DrawMeshInstancedIndirect(
                            WrapperHelper.UnwrapObject < Mesh >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < Material >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[4] ),
                            WrapperHelper.UnwrapObject < int >( a[5] ),
                            WrapperHelper.UnwrapObject < MaterialPropertyBlock >( a[6] ) );

                        return new BSObject( null );
                    },
                    7 ) );

            m_Properties["DrawMeshInstancedIndirect"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawMeshInstancedIndirect(mesh, submeshIndex, material, shaderPass, bufferWithArgs, argsOffset)",
                    a =>
                    {
                        m_InternalObject.DrawMeshInstancedIndirect(
                            WrapperHelper.UnwrapObject < Mesh >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < Material >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[4] ),
                            WrapperHelper.UnwrapObject < int >( a[5] ) );

                        return new BSObject( null );
                    },
                    6 ) );

            m_Properties["DrawMeshInstancedIndirect"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawMeshInstancedIndirect(mesh, submeshIndex, material, shaderPass, bufferWithArgs)",
                    a =>
                    {
                        m_InternalObject.DrawMeshInstancedIndirect(
                            WrapperHelper.UnwrapObject < Mesh >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < Material >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["DrawMeshInstancedIndirect"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawMeshInstancedIndirect(mesh, submeshIndex, material, shaderPass, bufferWithArgs, argsOffset, properties)",
                    a =>
                    {
                        m_InternalObject.DrawMeshInstancedIndirect(
                            WrapperHelper.UnwrapObject < Mesh >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < Material >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[4] ),
                            WrapperHelper.UnwrapObject < int >( a[5] ),
                            WrapperHelper.UnwrapObject < MaterialPropertyBlock >( a[6] ) );

                        return new BSObject( null );
                    },
                    7 ) );

            m_Properties["DrawMeshInstancedIndirect"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawMeshInstancedIndirect(mesh, submeshIndex, material, shaderPass, bufferWithArgs, argsOffset)",
                    a =>
                    {
                        m_InternalObject.DrawMeshInstancedIndirect(
                            WrapperHelper.UnwrapObject < Mesh >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < Material >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[4] ),
                            WrapperHelper.UnwrapObject < int >( a[5] ) );

                        return new BSObject( null );
                    },
                    6 ) );

            m_Properties["DrawMeshInstancedIndirect"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawMeshInstancedIndirect(mesh, submeshIndex, material, shaderPass, bufferWithArgs)",
                    a =>
                    {
                        m_InternalObject.DrawMeshInstancedIndirect(
                            WrapperHelper.UnwrapObject < Mesh >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < Material >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["DrawOcclusionMesh"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawOcclusionMesh(normalizedCamViewport)",
                    a =>
                    {
                        m_InternalObject.DrawOcclusionMesh( WrapperHelper.UnwrapObject < RectInt >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetRandomWriteTarget"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRandomWriteTarget(index, rt)",
                    a =>
                    {
                        m_InternalObject.SetRandomWriteTarget(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetRandomWriteTarget"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRandomWriteTarget(index, buffer, preserveCounterValue)",
                    a =>
                    {
                        m_InternalObject.SetRandomWriteTarget(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < bool >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetRandomWriteTarget"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRandomWriteTarget(index, buffer)",
                    a =>
                    {
                        m_InternalObject.SetRandomWriteTarget(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetRandomWriteTarget"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRandomWriteTarget(index, buffer, preserveCounterValue)",
                    a =>
                    {
                        m_InternalObject.SetRandomWriteTarget(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < bool >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetRandomWriteTarget"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRandomWriteTarget(index, buffer)",
                    a =>
                    {
                        m_InternalObject.SetRandomWriteTarget(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["CopyCounterValue"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyCounterValue(src, dst, dstOffsetBytes)",
                    a =>
                    {
                        m_InternalObject.CopyCounterValue(
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < uint >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["CopyCounterValue"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyCounterValue(src, dst, dstOffsetBytes)",
                    a =>
                    {
                        m_InternalObject.CopyCounterValue(
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < uint >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["CopyCounterValue"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyCounterValue(src, dst, dstOffsetBytes)",
                    a =>
                    {
                        m_InternalObject.CopyCounterValue(
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < uint >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["CopyCounterValue"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyCounterValue(src, dst, dstOffsetBytes)",
                    a =>
                    {
                        m_InternalObject.CopyCounterValue(
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < uint >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["CopyTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyTexture(src, dst)",
                    a =>
                    {
                        m_InternalObject.CopyTexture(
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[0] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["CopyTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyTexture(src, srcElement, dst, dstElement)",
                    a =>
                    {
                        m_InternalObject.CopyTexture(
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["CopyTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyTexture(src, srcElement, srcMip, dst, dstElement, dstMip)",
                    a =>
                    {
                        m_InternalObject.CopyTexture(
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ),
                            WrapperHelper.UnwrapObject < int >( a[5] ) );

                        return new BSObject( null );
                    },
                    6 ) );

            m_Properties["CopyTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyTexture(src, srcElement, srcMip, srcX, srcY, srcWidth, srcHeight, dst, dstElement, dstMip, dstX, dstY)",
                    a =>
                    {
                        m_InternalObject.CopyTexture(
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ),
                            WrapperHelper.UnwrapObject < int >( a[5] ),
                            WrapperHelper.UnwrapObject < int >( a[6] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[7] ),
                            WrapperHelper.UnwrapObject < int >( a[8] ),
                            WrapperHelper.UnwrapObject < int >( a[9] ),
                            WrapperHelper.UnwrapObject < int >( a[10] ),
                            WrapperHelper.UnwrapObject < int >( a[11] ) );

                        return new BSObject( null );
                    },
                    12 ) );

            m_Properties["Blit"] = new BSFunctionReference(
                new BSFunction(
                    "function Blit(source, dest)",
                    a =>
                    {
                        m_InternalObject.Blit(
                            WrapperHelper.UnwrapObject < Texture >( a[0] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Blit"] = new BSFunctionReference(
                new BSFunction(
                    "function Blit(source, dest, scale, offset)",
                    a =>
                    {
                        m_InternalObject.Blit(
                            WrapperHelper.UnwrapObject < Texture >( a[0] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[1] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[2] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["Blit"] = new BSFunctionReference(
                new BSFunction(
                    "function Blit(source, dest, mat)",
                    a =>
                    {
                        m_InternalObject.Blit(
                            WrapperHelper.UnwrapObject < Texture >( a[0] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[1] ),
                            WrapperHelper.UnwrapObject < Material >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["Blit"] = new BSFunctionReference(
                new BSFunction(
                    "function Blit(source, dest, mat, pass)",
                    a =>
                    {
                        m_InternalObject.Blit(
                            WrapperHelper.UnwrapObject < Texture >( a[0] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[1] ),
                            WrapperHelper.UnwrapObject < Material >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["Blit"] = new BSFunctionReference(
                new BSFunction(
                    "function Blit(source, dest)",
                    a =>
                    {
                        m_InternalObject.Blit(
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[0] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Blit"] = new BSFunctionReference(
                new BSFunction(
                    "function Blit(source, dest, scale, offset)",
                    a =>
                    {
                        m_InternalObject.Blit(
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[0] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[1] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[2] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["Blit"] = new BSFunctionReference(
                new BSFunction(
                    "function Blit(source, dest, mat)",
                    a =>
                    {
                        m_InternalObject.Blit(
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[0] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[1] ),
                            WrapperHelper.UnwrapObject < Material >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["Blit"] = new BSFunctionReference(
                new BSFunction(
                    "function Blit(source, dest, mat, pass)",
                    a =>
                    {
                        m_InternalObject.Blit(
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[0] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[1] ),
                            WrapperHelper.UnwrapObject < Material >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["Blit"] = new BSFunctionReference(
                new BSFunction(
                    "function Blit(source, dest, sourceDepthSlice, destDepthSlice)",
                    a =>
                    {
                        m_InternalObject.Blit(
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[0] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["Blit"] = new BSFunctionReference(
                new BSFunction(
                    "function Blit(source, dest, scale, offset, sourceDepthSlice, destDepthSlice)",
                    a =>
                    {
                        m_InternalObject.Blit(
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[0] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[1] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[2] ),
                            WrapperHelper.UnwrapObject < Vector2 >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ),
                            WrapperHelper.UnwrapObject < int >( a[5] ) );

                        return new BSObject( null );
                    },
                    6 ) );

            m_Properties["Blit"] = new BSFunctionReference(
                new BSFunction(
                    "function Blit(source, dest, mat, pass, destDepthSlice)",
                    a =>
                    {
                        m_InternalObject.Blit(
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[0] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[1] ),
                            WrapperHelper.UnwrapObject < Material >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["SetGlobalFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalFloat(name, value)",
                    a =>
                    {
                        m_InternalObject.SetGlobalFloat(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetGlobalInt"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalInt(name, value)",
                    a =>
                    {
                        m_InternalObject.SetGlobalInt(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetGlobalVector"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalVector(name, value)",
                    a =>
                    {
                        m_InternalObject.SetGlobalVector(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetGlobalColor"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalColor(name, value)",
                    a =>
                    {
                        m_InternalObject.SetGlobalColor(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Color >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetGlobalMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalMatrix(name, value)",
                    a =>
                    {
                        m_InternalObject.SetGlobalMatrix(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetGlobalTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalTexture(name, value)",
                    a =>
                    {
                        m_InternalObject.SetGlobalTexture(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetGlobalTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalTexture(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetGlobalTexture(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetGlobalBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalBuffer(name, value)",
                    a =>
                    {
                        m_InternalObject.SetGlobalBuffer(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetGlobalBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalBuffer(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetGlobalBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetGlobalBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalBuffer(name, value)",
                    a =>
                    {
                        m_InternalObject.SetGlobalBuffer(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetGlobalBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalBuffer(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetGlobalBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetGlobalConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalConstantBuffer(buffer, nameID, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetGlobalConstantBuffer(
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetGlobalConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalConstantBuffer(buffer, name, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetGlobalConstantBuffer(
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetGlobalConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalConstantBuffer(buffer, nameID, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetGlobalConstantBuffer(
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetGlobalConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetGlobalConstantBuffer(buffer, name, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetGlobalConstantBuffer(
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["IssuePluginEvent"] = new BSFunctionReference(
                new BSFunction(
                    "function IssuePluginEvent(callback, eventID)",
                    a =>
                    {
                        m_InternalObject.IssuePluginEvent(
                            WrapperHelper.UnwrapObject < IntPtr >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["IssuePluginEventAndData"] = new BSFunctionReference(
                new BSFunction(
                    "function IssuePluginEventAndData(callback, eventID, data)",
                    a =>
                    {
                        m_InternalObject.IssuePluginEventAndData(
                            WrapperHelper.UnwrapObject < IntPtr >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < IntPtr >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["IssuePluginCustomBlit"] = new BSFunctionReference(
                new BSFunction(
                    "function IssuePluginCustomBlit(callback, command, source, dest, commandParam, commandFlags)",
                    a =>
                    {
                        m_InternalObject.IssuePluginCustomBlit(
                            WrapperHelper.UnwrapObject < IntPtr >( a[0] ),
                            WrapperHelper.UnwrapObject < uint >( a[1] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[2] ),
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[3] ),
                            WrapperHelper.UnwrapObject < uint >( a[4] ),
                            WrapperHelper.UnwrapObject < uint >( a[5] ) );

                        return new BSObject( null );
                    },
                    6 ) );

            m_Properties["IssuePluginCustomTextureUpdate"] = new BSFunctionReference(
                new BSFunction(
                    "function IssuePluginCustomTextureUpdate(callback, targetTexture, userData)",
                    a =>
                    {
                        m_InternalObject.IssuePluginCustomTextureUpdate(
                            WrapperHelper.UnwrapObject < IntPtr >( a[0] ),
                            WrapperHelper.UnwrapObject < Texture >( a[1] ),
                            WrapperHelper.UnwrapObject < uint >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["IssuePluginCustomTextureUpdateV1"] = new BSFunctionReference(
                new BSFunction(
                    "function IssuePluginCustomTextureUpdateV1(callback, targetTexture, userData)",
                    a =>
                    {
                        m_InternalObject.IssuePluginCustomTextureUpdateV1(
                            WrapperHelper.UnwrapObject < IntPtr >( a[0] ),
                            WrapperHelper.UnwrapObject < Texture >( a[1] ),
                            WrapperHelper.UnwrapObject < uint >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["IssuePluginCustomTextureUpdateV2"] = new BSFunctionReference(
                new BSFunction(
                    "function IssuePluginCustomTextureUpdateV2(callback, targetTexture, userData)",
                    a =>
                    {
                        m_InternalObject.IssuePluginCustomTextureUpdateV2(
                            WrapperHelper.UnwrapObject < IntPtr >( a[0] ),
                            WrapperHelper.UnwrapObject < Texture >( a[1] ),
                            WrapperHelper.UnwrapObject < uint >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["ProcessVTFeedback"] = new BSFunctionReference(
                new BSFunction(
                    "function ProcessVTFeedback(rt, resolver, slice, x, width, y, height, mip)",
                    a =>
                    {
                        m_InternalObject.ProcessVTFeedback(
                            WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[0] ),
                            WrapperHelper.UnwrapObject < IntPtr >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ),
                            WrapperHelper.UnwrapObject < int >( a[5] ),
                            WrapperHelper.UnwrapObject < int >( a[6] ),
                            WrapperHelper.UnwrapObject < int >( a[7] ) );

                        return new BSObject( null );
                    },
                    8 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Rendering_CommandBuffer : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Rendering_CommandBuffer() : base( typeof( CommandBuffer ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Rendering_CommandBuffer()
        {
            WrapperHelper.AddRecastWrapper < CommandBuffer >(
                o => new BSWrapperObject_UnityEngine_Rendering_CommandBuffer( o ) );
        }

        #endregion
    }

    public class
        BSWrapperObject_UnityEngine_Rendering_RenderTargetIdentifier : BSWrapperObject < RenderTargetIdentifier >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Rendering_RenderTargetIdentifier( RenderTargetIdentifier obj ) : base( obj )
        {
            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(rhs)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < RenderTargetIdentifier >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Rendering_RenderTargetIdentifier : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Rendering_RenderTargetIdentifier() : base(
            typeof( RenderTargetIdentifier ) )
        {
            m_StaticProperties["AllDepthSlices"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) RenderTargetIdentifier.AllDepthSlices ),
                null );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Rendering_RenderTargetIdentifier()
        {
            WrapperHelper.AddRecastWrapper < RenderTargetIdentifier >(
                o => new BSWrapperObject_UnityEngine_Rendering_RenderTargetIdentifier( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_ComputeShader : BSWrapperObject < ComputeShader >

    {
        #region Public

        public BSWrapperObject_UnityEngine_ComputeShader( ComputeShader obj ) : base( obj )
        {
            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["FindKernel"] = new BSFunctionReference(
                new BSFunction(
                    "function FindKernel(name)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.FindKernel( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["HasKernel"] = new BSFunctionReference(
                new BSFunction(
                    "function HasKernel(name)",
                    a => m_InternalObject.HasKernel( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SetFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function SetFloat(nameID, val)",
                    a =>
                    {
                        m_InternalObject.SetFloat(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetInt"] = new BSFunctionReference(
                new BSFunction(
                    "function SetInt(nameID, val)",
                    a =>
                    {
                        m_InternalObject.SetInt(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetVector"] = new BSFunctionReference(
                new BSFunction(
                    "function SetVector(nameID, val)",
                    a =>
                    {
                        m_InternalObject.SetVector(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function SetMatrix(nameID, val)",
                    a =>
                    {
                        m_InternalObject.SetMatrix(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTexture(kernelIndex, nameID, texture, mipLevel)",
                    a =>
                    {
                        m_InternalObject.SetTexture(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < Texture >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetTextureFromGlobal"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTextureFromGlobal(kernelIndex, nameID, globalTextureNameID)",
                    a =>
                    {
                        m_InternalObject.SetTextureFromGlobal(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBuffer(kernelIndex, nameID, buffer)",
                    a =>
                    {
                        m_InternalObject.SetBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBuffer(kernelIndex, nameID, buffer)",
                    a =>
                    {
                        m_InternalObject.SetBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["Dispatch"] = new BSFunctionReference(
                new BSFunction(
                    "function Dispatch(kernelIndex, threadGroupsX, threadGroupsY, threadGroupsZ)",
                    a =>
                    {
                        m_InternalObject.Dispatch(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["EnableKeyword"] = new BSFunctionReference(
                new BSFunction(
                    "function EnableKeyword(keyword)",
                    a =>
                    {
                        m_InternalObject.EnableKeyword( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["DisableKeyword"] = new BSFunctionReference(
                new BSFunction(
                    "function DisableKeyword(keyword)",
                    a =>
                    {
                        m_InternalObject.DisableKeyword( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsKeywordEnabled"] = new BSFunctionReference(
                new BSFunction(
                    "function IsKeywordEnabled(keyword)",
                    a => m_InternalObject.IsKeywordEnabled( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SetFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function SetFloat(name, val)",
                    a =>
                    {
                        m_InternalObject.SetFloat(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetInt"] = new BSFunctionReference(
                new BSFunction(
                    "function SetInt(name, val)",
                    a =>
                    {
                        m_InternalObject.SetInt(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetVector"] = new BSFunctionReference(
                new BSFunction(
                    "function SetVector(name, val)",
                    a =>
                    {
                        m_InternalObject.SetVector(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function SetMatrix(name, val)",
                    a =>
                    {
                        m_InternalObject.SetMatrix(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetBool"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBool(name, val)",
                    a =>
                    {
                        m_InternalObject.SetBool(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetBool"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBool(nameID, val)",
                    a =>
                    {
                        m_InternalObject.SetBool(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTexture(kernelIndex, nameID, texture)",
                    a =>
                    {
                        m_InternalObject.SetTexture(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < Texture >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTexture(kernelIndex, name, texture)",
                    a =>
                    {
                        m_InternalObject.SetTexture(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < Texture >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTexture(kernelIndex, name, texture, mipLevel)",
                    a =>
                    {
                        m_InternalObject.SetTexture(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < Texture >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetTextureFromGlobal"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTextureFromGlobal(kernelIndex, name, globalTextureName)",
                    a =>
                    {
                        m_InternalObject.SetTextureFromGlobal(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < string >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBuffer(kernelIndex, name, buffer)",
                    a =>
                    {
                        m_InternalObject.SetBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBuffer(kernelIndex, name, buffer)",
                    a =>
                    {
                        m_InternalObject.SetBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetConstantBuffer(nameID, buffer, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetConstantBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetConstantBuffer(name, buffer, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetConstantBuffer(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetConstantBuffer(nameID, buffer, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetConstantBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetConstantBuffer(name, buffer, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetConstantBuffer(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["DispatchIndirect"] = new BSFunctionReference(
                new BSFunction(
                    "function DispatchIndirect(kernelIndex, argsBuffer, argsOffset)",
                    a =>
                    {
                        m_InternalObject.DispatchIndirect(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < uint >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["DispatchIndirect"] = new BSFunctionReference(
                new BSFunction(
                    "function DispatchIndirect(kernelIndex, argsBuffer)",
                    a =>
                    {
                        m_InternalObject.DispatchIndirect(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["DispatchIndirect"] = new BSFunctionReference(
                new BSFunction(
                    "function DispatchIndirect(kernelIndex, argsBuffer, argsOffset)",
                    a =>
                    {
                        m_InternalObject.DispatchIndirect(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < uint >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["DispatchIndirect"] = new BSFunctionReference(
                new BSFunction(
                    "function DispatchIndirect(kernelIndex, argsBuffer)",
                    a =>
                    {
                        m_InternalObject.DispatchIndirect(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_ComputeShader : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_ComputeShader() : base( typeof( ComputeShader ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_ComputeShader()
        {
            WrapperHelper.AddRecastWrapper < ComputeShader >( o => new BSWrapperObject_UnityEngine_ComputeShader( o ) );
        }

        #endregion
    }

    public class
        BSWrapperObject_UnityEngine_Experimental_Rendering_RayTracingShader : BSWrapperObject < RayTracingShader >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Experimental_Rendering_RayTracingShader( RayTracingShader obj ) : base( obj )
        {
            m_Properties["maxRecursionDepth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.maxRecursionDepth ),
                null );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["SetFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function SetFloat(nameID, val)",
                    a =>
                    {
                        m_InternalObject.SetFloat(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetInt"] = new BSFunctionReference(
                new BSFunction(
                    "function SetInt(nameID, val)",
                    a =>
                    {
                        m_InternalObject.SetInt(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetVector"] = new BSFunctionReference(
                new BSFunction(
                    "function SetVector(nameID, val)",
                    a =>
                    {
                        m_InternalObject.SetVector(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function SetMatrix(nameID, val)",
                    a =>
                    {
                        m_InternalObject.SetMatrix(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTexture(nameID, texture)",
                    a =>
                    {
                        m_InternalObject.SetTexture(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Texture >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBuffer(nameID, buffer)",
                    a =>
                    {
                        m_InternalObject.SetBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetAccelerationStructure"] = new BSFunctionReference(
                new BSFunction(
                    "function SetAccelerationStructure(nameID, accelerationStructure)",
                    a =>
                    {
                        m_InternalObject.SetAccelerationStructure(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < RayTracingAccelerationStructure >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetShaderPass"] = new BSFunctionReference(
                new BSFunction(
                    "function SetShaderPass(passName)",
                    a =>
                    {
                        m_InternalObject.SetShaderPass( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetTextureFromGlobal"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTextureFromGlobal(nameID, globalTextureNameID)",
                    a =>
                    {
                        m_InternalObject.SetTextureFromGlobal(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Dispatch"] = new BSFunctionReference(
                new BSFunction(
                    "function Dispatch(rayGenFunctionName, width, height, depth, camera)",
                    a =>
                    {
                        m_InternalObject.Dispatch(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < Camera >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["SetBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBuffer(nameID, buffer)",
                    a =>
                    {
                        m_InternalObject.SetBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function SetFloat(name, val)",
                    a =>
                    {
                        m_InternalObject.SetFloat(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetInt"] = new BSFunctionReference(
                new BSFunction(
                    "function SetInt(name, val)",
                    a =>
                    {
                        m_InternalObject.SetInt(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetVector"] = new BSFunctionReference(
                new BSFunction(
                    "function SetVector(name, val)",
                    a =>
                    {
                        m_InternalObject.SetVector(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function SetMatrix(name, val)",
                    a =>
                    {
                        m_InternalObject.SetMatrix(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetBool"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBool(name, val)",
                    a =>
                    {
                        m_InternalObject.SetBool(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetBool"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBool(nameID, val)",
                    a =>
                    {
                        m_InternalObject.SetBool(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTexture(name, texture)",
                    a =>
                    {
                        m_InternalObject.SetTexture(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Texture >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBuffer(name, buffer)",
                    a =>
                    {
                        m_InternalObject.SetBuffer(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBuffer(name, buffer)",
                    a =>
                    {
                        m_InternalObject.SetBuffer(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetConstantBuffer(nameID, buffer, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetConstantBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetConstantBuffer(name, buffer, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetConstantBuffer(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetConstantBuffer(nameID, buffer, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetConstantBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetConstantBuffer(name, buffer, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetConstantBuffer(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetAccelerationStructure"] = new BSFunctionReference(
                new BSFunction(
                    "function SetAccelerationStructure(name, accelerationStructure)",
                    a =>
                    {
                        m_InternalObject.SetAccelerationStructure(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < RayTracingAccelerationStructure >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetTextureFromGlobal"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTextureFromGlobal(name, globalTextureName)",
                    a =>
                    {
                        m_InternalObject.SetTextureFromGlobal(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Experimental_Rendering_RayTracingShader : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Experimental_Rendering_RayTracingShader() : base(
            typeof( RayTracingShader ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Experimental_Rendering_RayTracingShader()
        {
            WrapperHelper.AddRecastWrapper < RayTracingShader >(
                o => new BSWrapperObject_UnityEngine_Experimental_Rendering_RayTracingShader( o ) );
        }

        #endregion
    }

    public class
        BSWrapperObject_UnityEngine_Experimental_Rendering_RayTracingAccelerationStructure : BSWrapperObject <
            RayTracingAccelerationStructure >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Experimental_Rendering_RayTracingAccelerationStructure(
            RayTracingAccelerationStructure obj ) : base( obj )
        {
            m_Properties["Dispose"] = new BSFunctionReference(
                new BSFunction(
                    "function Dispose()",
                    a =>
                    {
                        m_InternalObject.Dispose();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Release"] = new BSFunctionReference(
                new BSFunction(
                    "function Release()",
                    a =>
                    {
                        m_InternalObject.Release();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Build"] = new BSFunctionReference(
                new BSFunction(
                    "function Build()",
                    a =>
                    {
                        m_InternalObject.Build();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Build"] = new BSFunctionReference(
                new BSFunction(
                    "function Build(relativeOrigin)",
                    a =>
                    {
                        m_InternalObject.Build( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["AddInstance"] = new BSFunctionReference(
                new BSFunction(
                    "function AddInstance(aabbBuffer, numElements, material, isCutOff, enableTriangleCulling, frontTriangleCounterClockwise, mask, reuseBounds)",
                    a =>
                    {
                        m_InternalObject.AddInstance(
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[0] ),
                            WrapperHelper.UnwrapObject < uint >( a[1] ),
                            WrapperHelper.UnwrapObject < Material >( a[2] ),
                            WrapperHelper.UnwrapObject < bool >( a[3] ),
                            WrapperHelper.UnwrapObject < bool >( a[4] ),
                            WrapperHelper.UnwrapObject < bool >( a[5] ),
                            WrapperHelper.UnwrapObject < uint >( a[6] ),
                            WrapperHelper.UnwrapObject < bool >( a[7] ) );

                        return new BSObject( null );
                    },
                    8 ) );

            m_Properties["AddInstance"] = new BSFunctionReference(
                new BSFunction(
                    "function AddInstance(aabbBuffer, numElements, material, instanceTransform, isCutOff, enableTriangleCulling, frontTriangleCounterClockwise, mask, reuseBounds)",
                    a =>
                    {
                        m_InternalObject.AddInstance(
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[0] ),
                            WrapperHelper.UnwrapObject < uint >( a[1] ),
                            WrapperHelper.UnwrapObject < Material >( a[2] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[3] ),
                            WrapperHelper.UnwrapObject < bool >( a[4] ),
                            WrapperHelper.UnwrapObject < bool >( a[5] ),
                            WrapperHelper.UnwrapObject < bool >( a[6] ),
                            WrapperHelper.UnwrapObject < uint >( a[7] ),
                            WrapperHelper.UnwrapObject < bool >( a[8] ) );

                        return new BSObject( null );
                    },
                    9 ) );

            m_Properties["UpdateInstanceTransform"] = new BSFunctionReference(
                new BSFunction(
                    "function UpdateInstanceTransform(renderer)",
                    a =>
                    {
                        m_InternalObject.UpdateInstanceTransform( WrapperHelper.UnwrapObject < Renderer >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetSize"] = new BSFunctionReference(
                new BSFunction(
                    "function GetSize()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetSize() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class
        BSStaticWrapperObject_UnityEngine_Experimental_Rendering_RayTracingAccelerationStructure : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Experimental_Rendering_RayTracingAccelerationStructure() : base(
            typeof( RayTracingAccelerationStructure ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Experimental_Rendering_RayTracingAccelerationStructure()
        {
            WrapperHelper.AddRecastWrapper < RayTracingAccelerationStructure >(
                o => new BSWrapperObject_UnityEngine_Experimental_Rendering_RayTracingAccelerationStructure( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Renderer : BSWrapperObject < Renderer >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Renderer( Renderer obj ) : base( obj )
        {
            m_Properties["castShadows"] = new BSReflectionReference(
                () => m_InternalObject.castShadows ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.castShadows = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["motionVectors"] = new BSReflectionReference(
                () => m_InternalObject.motionVectors ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.motionVectors = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["useLightProbes"] = new BSReflectionReference(
                () => m_InternalObject.useLightProbes ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useLightProbes = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["bounds"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Bounds( m_InternalObject.bounds ),
                null );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isVisible"] = new BSReflectionReference(
                () => m_InternalObject.isVisible ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["receiveShadows"] = new BSReflectionReference(
                () => m_InternalObject.receiveShadows ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.receiveShadows = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["forceRenderingOff"] = new BSReflectionReference(
                () => m_InternalObject.forceRenderingOff ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.forceRenderingOff = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["renderingLayerMask"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.renderingLayerMask ),
                x => m_InternalObject.renderingLayerMask = WrapperHelper.UnwrapObject < uint >( x ) );

            m_Properties["rendererPriority"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.rendererPriority ),
                x => m_InternalObject.rendererPriority = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["sortingLayerName"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.sortingLayerName ),
                x => m_InternalObject.sortingLayerName = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["sortingLayerID"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.sortingLayerID ),
                x => m_InternalObject.sortingLayerID = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["sortingOrder"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.sortingOrder ),
                x => m_InternalObject.sortingOrder = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["allowOcclusionWhenDynamic"] = new BSReflectionReference(
                () => m_InternalObject.allowOcclusionWhenDynamic ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.allowOcclusionWhenDynamic = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isPartOfStaticBatch"] = new BSReflectionReference(
                () => m_InternalObject.isPartOfStaticBatch ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["worldToLocalMatrix"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Matrix4x4( m_InternalObject.worldToLocalMatrix ),
                null );

            m_Properties["localToWorldMatrix"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Matrix4x4( m_InternalObject.localToWorldMatrix ),
                null );

            m_Properties["lightProbeProxyVolumeOverride"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.lightProbeProxyVolumeOverride ),
                x => m_InternalObject.lightProbeProxyVolumeOverride = WrapperHelper.UnwrapObject < GameObject >( x ) );

            m_Properties["probeAnchor"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.probeAnchor ),
                x => m_InternalObject.probeAnchor = WrapperHelper.UnwrapObject < Transform >( x ) );

            m_Properties["lightmapIndex"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.lightmapIndex ),
                x => m_InternalObject.lightmapIndex = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["realtimeLightmapIndex"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.realtimeLightmapIndex ),
                x => m_InternalObject.realtimeLightmapIndex = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["lightmapScaleOffset"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector4( m_InternalObject.lightmapScaleOffset ),
                x => m_InternalObject.lightmapScaleOffset = WrapperHelper.UnwrapObject < Vector4 >( x ) );

            m_Properties["realtimeLightmapScaleOffset"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector4( m_InternalObject.realtimeLightmapScaleOffset ),
                x => m_InternalObject.realtimeLightmapScaleOffset = WrapperHelper.UnwrapObject < Vector4 >( x ) );

            m_Properties["material"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Material( m_InternalObject.material ),
                x => m_InternalObject.material = WrapperHelper.UnwrapObject < Material >( x ) );

            m_Properties["sharedMaterial"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Material( m_InternalObject.sharedMaterial ),
                x => m_InternalObject.sharedMaterial = WrapperHelper.UnwrapObject < Material >( x ) );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["HasPropertyBlock"] = new BSFunctionReference(
                new BSFunction(
                    "function HasPropertyBlock()",
                    a => m_InternalObject.HasPropertyBlock() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["SetPropertyBlock"] = new BSFunctionReference(
                new BSFunction(
                    "function SetPropertyBlock(properties)",
                    a =>
                    {
                        m_InternalObject.SetPropertyBlock(
                            WrapperHelper.UnwrapObject < MaterialPropertyBlock >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetPropertyBlock"] = new BSFunctionReference(
                new BSFunction(
                    "function SetPropertyBlock(properties, materialIndex)",
                    a =>
                    {
                        m_InternalObject.SetPropertyBlock(
                            WrapperHelper.UnwrapObject < MaterialPropertyBlock >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetPropertyBlock"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPropertyBlock(properties)",
                    a =>
                    {
                        m_InternalObject.GetPropertyBlock(
                            WrapperHelper.UnwrapObject < MaterialPropertyBlock >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetPropertyBlock"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPropertyBlock(properties, materialIndex)",
                    a =>
                    {
                        m_InternalObject.GetPropertyBlock(
                            WrapperHelper.UnwrapObject < MaterialPropertyBlock >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Renderer : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Renderer() : base( typeof( Renderer ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Renderer()
        {
            WrapperHelper.AddRecastWrapper < Renderer >( o => new BSWrapperObject_UnityEngine_Renderer( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_MaterialPropertyBlock : BSWrapperObject < MaterialPropertyBlock >

    {
        #region Public

        public BSWrapperObject_UnityEngine_MaterialPropertyBlock( MaterialPropertyBlock obj ) : base( obj )
        {
            m_Properties["isEmpty"] = new BSReflectionReference(
                () => m_InternalObject.isEmpty ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["AddFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function AddFloat(name, value)",
                    a =>
                    {
                        m_InternalObject.AddFloat(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function AddFloat(nameID, value)",
                    a =>
                    {
                        m_InternalObject.AddFloat(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddVector"] = new BSFunctionReference(
                new BSFunction(
                    "function AddVector(name, value)",
                    a =>
                    {
                        m_InternalObject.AddVector(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddVector"] = new BSFunctionReference(
                new BSFunction(
                    "function AddVector(nameID, value)",
                    a =>
                    {
                        m_InternalObject.AddVector(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddColor"] = new BSFunctionReference(
                new BSFunction(
                    "function AddColor(name, value)",
                    a =>
                    {
                        m_InternalObject.AddColor(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Color >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddColor"] = new BSFunctionReference(
                new BSFunction(
                    "function AddColor(nameID, value)",
                    a =>
                    {
                        m_InternalObject.AddColor(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Color >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function AddMatrix(name, value)",
                    a =>
                    {
                        m_InternalObject.AddMatrix(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function AddMatrix(nameID, value)",
                    a =>
                    {
                        m_InternalObject.AddMatrix(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function AddTexture(name, value)",
                    a =>
                    {
                        m_InternalObject.AddTexture(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Texture >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function AddTexture(nameID, value)",
                    a =>
                    {
                        m_InternalObject.AddTexture(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Texture >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Clear"] = new BSFunctionReference(
                new BSFunction(
                    "function Clear()",
                    a =>
                    {
                        m_InternalObject.Clear();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function SetFloat(name, value)",
                    a =>
                    {
                        m_InternalObject.SetFloat(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function SetFloat(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetFloat(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetInt"] = new BSFunctionReference(
                new BSFunction(
                    "function SetInt(name, value)",
                    a =>
                    {
                        m_InternalObject.SetInt(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetInt"] = new BSFunctionReference(
                new BSFunction(
                    "function SetInt(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetInt(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetVector"] = new BSFunctionReference(
                new BSFunction(
                    "function SetVector(name, value)",
                    a =>
                    {
                        m_InternalObject.SetVector(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetVector"] = new BSFunctionReference(
                new BSFunction(
                    "function SetVector(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetVector(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetColor"] = new BSFunctionReference(
                new BSFunction(
                    "function SetColor(name, value)",
                    a =>
                    {
                        m_InternalObject.SetColor(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Color >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetColor"] = new BSFunctionReference(
                new BSFunction(
                    "function SetColor(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetColor(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Color >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function SetMatrix(name, value)",
                    a =>
                    {
                        m_InternalObject.SetMatrix(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function SetMatrix(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetMatrix(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Matrix4x4 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBuffer(name, value)",
                    a =>
                    {
                        m_InternalObject.SetBuffer(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBuffer(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBuffer(name, value)",
                    a =>
                    {
                        m_InternalObject.SetBuffer(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBuffer(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTexture(name, value)",
                    a =>
                    {
                        m_InternalObject.SetTexture(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Texture >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTexture(nameID, value)",
                    a =>
                    {
                        m_InternalObject.SetTexture(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Texture >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetConstantBuffer(name, value, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetConstantBuffer(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetConstantBuffer(nameID, value, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetConstantBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < ComputeBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetConstantBuffer(name, value, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetConstantBuffer(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetConstantBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function SetConstantBuffer(nameID, value, offset, size)",
                    a =>
                    {
                        m_InternalObject.SetConstantBuffer(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < GraphicsBuffer >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["GetFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function GetFloat(name)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetFloat( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function GetFloat(nameID)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetFloat( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetInt"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInt(name)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetInt( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetInt"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInt(nameID)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetInt( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetVector"] = new BSFunctionReference(
                new BSFunction(
                    "function GetVector(name)",
                    a => new BSWrapperObject_UnityEngine_Vector4(
                        m_InternalObject.GetVector( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetVector"] = new BSFunctionReference(
                new BSFunction(
                    "function GetVector(nameID)",
                    a => new BSWrapperObject_UnityEngine_Vector4(
                        m_InternalObject.GetVector( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetColor"] = new BSFunctionReference(
                new BSFunction(
                    "function GetColor(name)",
                    a => new BSWrapperObject_UnityEngine_Color(
                        m_InternalObject.GetColor( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetColor"] = new BSFunctionReference(
                new BSFunction(
                    "function GetColor(nameID)",
                    a => new BSWrapperObject_UnityEngine_Color(
                        m_InternalObject.GetColor( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMatrix(name)",
                    a => new BSWrapperObject_UnityEngine_Matrix4x4(
                        m_InternalObject.GetMatrix( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetMatrix"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMatrix(nameID)",
                    a => new BSWrapperObject_UnityEngine_Matrix4x4(
                        m_InternalObject.GetMatrix( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function GetTexture(name)",
                    a => new BSWrapperObject_UnityEngine_Texture(
                        m_InternalObject.GetTexture( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function GetTexture(nameID)",
                    a => new BSWrapperObject_UnityEngine_Texture(
                        m_InternalObject.GetTexture( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_MaterialPropertyBlock : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_MaterialPropertyBlock() : base( typeof( MaterialPropertyBlock ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_MaterialPropertyBlock()
        {
            WrapperHelper.AddRecastWrapper < MaterialPropertyBlock >(
                o => new BSWrapperObject_UnityEngine_MaterialPropertyBlock( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Profiling_CustomSampler : BSWrapperObject < CustomSampler >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Profiling_CustomSampler( CustomSampler obj ) : base( obj )
        {
            m_Properties["isValid"] = new BSReflectionReference(
                () => m_InternalObject.isValid ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["name"] = new BSReflectionReference( () => new BSObject( m_InternalObject.name ), null );

            m_Properties["Begin"] = new BSFunctionReference(
                new BSFunction(
                    "function Begin()",
                    a =>
                    {
                        m_InternalObject.Begin();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Begin"] = new BSFunctionReference(
                new BSFunction(
                    "function Begin(targetObject)",
                    a =>
                    {
                        m_InternalObject.Begin( WrapperHelper.UnwrapObject < Object >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["End"] = new BSFunctionReference(
                new BSFunction(
                    "function End()",
                    a =>
                    {
                        m_InternalObject.End();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetRecorder"] = new BSFunctionReference(
                new BSFunction(
                    "function GetRecorder()",
                    a => new BSWrapperObject_UnityEngine_Profiling_Recorder( m_InternalObject.GetRecorder() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Profiling_CustomSampler : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Profiling_CustomSampler() : base( typeof( CustomSampler ) )
        {
            m_StaticProperties["Create"] = new BSFunctionReference(
                new BSFunction(
                    "function Create(name, collectGpuData)",
                    a => new BSWrapperObject_UnityEngine_Profiling_CustomSampler(
                        CustomSampler.Create(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) ) ),
                    2 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Profiling_CustomSampler()
        {
            WrapperHelper.AddRecastWrapper < CustomSampler >(
                o => new BSWrapperObject_UnityEngine_Profiling_CustomSampler( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Profiling_Recorder : BSWrapperObject < Recorder >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Profiling_Recorder( Recorder obj ) : base( obj )
        {
            m_Properties["isValid"] = new BSReflectionReference(
                () => m_InternalObject.isValid ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["elapsedNanoseconds"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.elapsedNanoseconds ),
                null );

            m_Properties["gpuElapsedNanoseconds"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.gpuElapsedNanoseconds ),
                null );

            m_Properties["sampleBlockCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.sampleBlockCount ),
                null );

            m_Properties["gpuSampleBlockCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.gpuSampleBlockCount ),
                null );

            m_Properties["FilterToCurrentThread"] = new BSFunctionReference(
                new BSFunction(
                    "function FilterToCurrentThread()",
                    a =>
                    {
                        m_InternalObject.FilterToCurrentThread();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["CollectFromAllThreads"] = new BSFunctionReference(
                new BSFunction(
                    "function CollectFromAllThreads()",
                    a =>
                    {
                        m_InternalObject.CollectFromAllThreads();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Profiling_Recorder : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Profiling_Recorder() : base( typeof( Recorder ) )
        {
            m_StaticProperties["Get"] = new BSFunctionReference(
                new BSFunction(
                    "function Get(samplerName)",
                    a => new BSWrapperObject_UnityEngine_Profiling_Recorder(
                        Recorder.Get( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Profiling_Recorder()
        {
            WrapperHelper.AddRecastWrapper < Recorder >( o => new BSWrapperObject_UnityEngine_Profiling_Recorder( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Profiling_Sampler : BSWrapperObject < Sampler >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Profiling_Sampler( Sampler obj ) : base( obj )
        {
            m_Properties["isValid"] = new BSReflectionReference(
                () => m_InternalObject.isValid ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["name"] = new BSReflectionReference( () => new BSObject( m_InternalObject.name ), null );

            m_Properties["GetRecorder"] = new BSFunctionReference(
                new BSFunction(
                    "function GetRecorder()",
                    a => new BSWrapperObject_UnityEngine_Profiling_Recorder( m_InternalObject.GetRecorder() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Profiling_Sampler : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Profiling_Sampler() : base( typeof( Sampler ) )
        {
            m_StaticProperties["Get"] = new BSFunctionReference(
                new BSFunction(
                    "function Get(name)",
                    a => new BSWrapperObject_UnityEngine_Profiling_Sampler(
                        Sampler.Get( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Profiling_Sampler()
        {
            WrapperHelper.AddRecastWrapper < Sampler >( o => new BSWrapperObject_UnityEngine_Profiling_Sampler( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Rendering_RenderTargetBinding : BSWrapperObject < RenderTargetBinding >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Rendering_RenderTargetBinding( RenderTargetBinding obj ) : base( obj )
        {
            m_Properties["depthRenderTarget"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Rendering_RenderTargetIdentifier(
                    m_InternalObject.depthRenderTarget ),
                x => m_InternalObject.depthRenderTarget = WrapperHelper.UnwrapObject < RenderTargetIdentifier >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Rendering_RenderTargetBinding : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Rendering_RenderTargetBinding() : base( typeof( RenderTargetBinding ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Rendering_RenderTargetBinding()
        {
            WrapperHelper.AddRecastWrapper < RenderTargetBinding >(
                o => new BSWrapperObject_UnityEngine_Rendering_RenderTargetBinding( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Rendering_GraphicsFence : BSWrapperObject < GraphicsFence >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Rendering_GraphicsFence( GraphicsFence obj ) : base( obj )
        {
            m_Properties["passed"] = new BSReflectionReference(
                () => m_InternalObject.passed ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Rendering_GraphicsFence : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Rendering_GraphicsFence() : base( typeof( GraphicsFence ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Rendering_GraphicsFence()
        {
            WrapperHelper.AddRecastWrapper < GraphicsFence >(
                o => new BSWrapperObject_UnityEngine_Rendering_GraphicsFence( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Mesh : BSWrapperObject < Mesh >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Mesh( Mesh obj ) : base( obj )
        {
            m_Properties["vertexBufferCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.vertexBufferCount ),
                null );

            m_Properties["blendShapeCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.blendShapeCount ),
                null );

            m_Properties["isReadable"] = new BSReflectionReference(
                () => m_InternalObject.isReadable ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["vertexCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.vertexCount ),
                null );

            m_Properties["subMeshCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.subMeshCount ),
                x => m_InternalObject.subMeshCount = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["bounds"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Bounds( m_InternalObject.bounds ),
                x => m_InternalObject.bounds = WrapperHelper.UnwrapObject < Bounds >( x ) );

            m_Properties["vertexAttributeCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.vertexAttributeCount ),
                null );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["GetVertexAttribute"] = new BSFunctionReference(
                new BSFunction(
                    "function GetVertexAttribute(index)",
                    a => new BSWrapperObject_UnityEngine_Rendering_VertexAttributeDescriptor(
                        m_InternalObject.GetVertexAttribute( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetNativeVertexBufferPtr"] = new BSFunctionReference(
                new BSFunction(
                    "function GetNativeVertexBufferPtr(index)",
                    a => new BSWrapperObject_System_IntPtr(
                        m_InternalObject.GetNativeVertexBufferPtr( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetNativeIndexBufferPtr"] = new BSFunctionReference(
                new BSFunction(
                    "function GetNativeIndexBufferPtr()",
                    a => new BSWrapperObject_System_IntPtr( m_InternalObject.GetNativeIndexBufferPtr() ),
                    0 ) );

            m_Properties["ClearBlendShapes"] = new BSFunctionReference(
                new BSFunction(
                    "function ClearBlendShapes()",
                    a =>
                    {
                        m_InternalObject.ClearBlendShapes();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetBlendShapeName"] = new BSFunctionReference(
                new BSFunction(
                    "function GetBlendShapeName(shapeIndex)",
                    a => new BSObject(
                        m_InternalObject.GetBlendShapeName( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetBlendShapeIndex"] = new BSFunctionReference(
                new BSFunction(
                    "function GetBlendShapeIndex(blendShapeName)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetBlendShapeIndex(
                            WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetBlendShapeFrameCount"] = new BSFunctionReference(
                new BSFunction(
                    "function GetBlendShapeFrameCount(shapeIndex)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetBlendShapeFrameCount(
                            WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetBlendShapeFrameWeight"] = new BSFunctionReference(
                new BSFunction(
                    "function GetBlendShapeFrameWeight(shapeIndex, frameIndex)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetBlendShapeFrameWeight(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_Properties["GetSubMesh"] = new BSFunctionReference(
                new BSFunction(
                    "function GetSubMesh(index)",
                    a => new BSWrapperObject_UnityEngine_Rendering_SubMeshDescriptor(
                        m_InternalObject.GetSubMesh( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["MarkModified"] = new BSFunctionReference(
                new BSFunction(
                    "function MarkModified()",
                    a =>
                    {
                        m_InternalObject.MarkModified();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetUVDistributionMetric"] = new BSFunctionReference(
                new BSFunction(
                    "function GetUVDistributionMetric(uvSetIndex)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetUVDistributionMetric(
                            WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetIndexStart"] = new BSFunctionReference(
                new BSFunction(
                    "function GetIndexStart(submesh)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetIndexStart( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetIndexCount"] = new BSFunctionReference(
                new BSFunction(
                    "function GetIndexCount(submesh)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetIndexCount( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetBaseVertex"] = new BSFunctionReference(
                new BSFunction(
                    "function GetBaseVertex(submesh)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetBaseVertex( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["Clear"] = new BSFunctionReference(
                new BSFunction(
                    "function Clear(keepVertexLayout)",
                    a =>
                    {
                        m_InternalObject.Clear( WrapperHelper.UnwrapObject < bool >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Clear"] = new BSFunctionReference(
                new BSFunction(
                    "function Clear()",
                    a =>
                    {
                        m_InternalObject.Clear();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["RecalculateBounds"] = new BSFunctionReference(
                new BSFunction(
                    "function RecalculateBounds()",
                    a =>
                    {
                        m_InternalObject.RecalculateBounds();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["RecalculateNormals"] = new BSFunctionReference(
                new BSFunction(
                    "function RecalculateNormals()",
                    a =>
                    {
                        m_InternalObject.RecalculateNormals();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["RecalculateTangents"] = new BSFunctionReference(
                new BSFunction(
                    "function RecalculateTangents()",
                    a =>
                    {
                        m_InternalObject.RecalculateTangents();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["RecalculateUVDistributionMetric"] = new BSFunctionReference(
                new BSFunction(
                    "function RecalculateUVDistributionMetric(uvSetIndex, uvAreaThreshold)",
                    a =>
                    {
                        m_InternalObject.RecalculateUVDistributionMetric(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["RecalculateUVDistributionMetrics"] = new BSFunctionReference(
                new BSFunction(
                    "function RecalculateUVDistributionMetrics(uvAreaThreshold)",
                    a =>
                    {
                        m_InternalObject.RecalculateUVDistributionMetrics(
                            WrapperHelper.UnwrapObject < float >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["MarkDynamic"] = new BSFunctionReference(
                new BSFunction(
                    "function MarkDynamic()",
                    a =>
                    {
                        m_InternalObject.MarkDynamic();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["UploadMeshData"] = new BSFunctionReference(
                new BSFunction(
                    "function UploadMeshData(markNoLongerReadable)",
                    a =>
                    {
                        m_InternalObject.UploadMeshData( WrapperHelper.UnwrapObject < bool >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Optimize"] = new BSFunctionReference(
                new BSFunction(
                    "function Optimize()",
                    a =>
                    {
                        m_InternalObject.Optimize();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["OptimizeIndexBuffers"] = new BSFunctionReference(
                new BSFunction(
                    "function OptimizeIndexBuffers()",
                    a =>
                    {
                        m_InternalObject.OptimizeIndexBuffers();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["OptimizeReorderVertexBuffer"] = new BSFunctionReference(
                new BSFunction(
                    "function OptimizeReorderVertexBuffer()",
                    a =>
                    {
                        m_InternalObject.OptimizeReorderVertexBuffer();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Mesh : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Mesh() : base( typeof( Mesh ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Mesh()
        {
            WrapperHelper.AddRecastWrapper < Mesh >( o => new BSWrapperObject_UnityEngine_Mesh( o ) );
        }

        #endregion
    }

    public class
        BSWrapperObject_UnityEngine_Rendering_VertexAttributeDescriptor : BSWrapperObject < VertexAttributeDescriptor >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Rendering_VertexAttributeDescriptor( VertexAttributeDescriptor obj ) : base(
            obj )
        {
            m_Properties["dimension"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.dimension ),
                x => m_InternalObject.dimension = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["stream"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.stream ),
                x => m_InternalObject.stream = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < VertexAttributeDescriptor >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Rendering_VertexAttributeDescriptor : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Rendering_VertexAttributeDescriptor() : base(
            typeof( VertexAttributeDescriptor ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Rendering_VertexAttributeDescriptor()
        {
            WrapperHelper.AddRecastWrapper < VertexAttributeDescriptor >(
                o => new BSWrapperObject_UnityEngine_Rendering_VertexAttributeDescriptor( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Rendering_SubMeshDescriptor : BSWrapperObject < SubMeshDescriptor >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Rendering_SubMeshDescriptor( SubMeshDescriptor obj ) : base( obj )
        {
            m_Properties["bounds"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Bounds( m_InternalObject.bounds ),
                x => m_InternalObject.bounds = WrapperHelper.UnwrapObject < Bounds >( x ) );

            m_Properties["indexStart"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.indexStart ),
                x => m_InternalObject.indexStart = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["indexCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.indexCount ),
                x => m_InternalObject.indexCount = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["baseVertex"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.baseVertex ),
                x => m_InternalObject.baseVertex = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["firstVertex"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.firstVertex ),
                x => m_InternalObject.firstVertex = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["vertexCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.vertexCount ),
                x => m_InternalObject.vertexCount = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Rendering_SubMeshDescriptor : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Rendering_SubMeshDescriptor() : base( typeof( SubMeshDescriptor ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Rendering_SubMeshDescriptor()
        {
            WrapperHelper.AddRecastWrapper < SubMeshDescriptor >(
                o => new BSWrapperObject_UnityEngine_Rendering_SubMeshDescriptor( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_RectInt : BSWrapperObject < RectInt >

    {
        #region Public

        public BSWrapperObject_UnityEngine_RectInt( RectInt obj ) : base( obj )
        {
            m_Properties["x"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.x ),
                x => m_InternalObject.x = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["y"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.y ),
                x => m_InternalObject.y = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["center"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.center ),
                null );

            m_Properties["min"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2Int( m_InternalObject.min ),
                x => m_InternalObject.min = WrapperHelper.UnwrapObject < Vector2Int >( x ) );

            m_Properties["max"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2Int( m_InternalObject.max ),
                x => m_InternalObject.max = WrapperHelper.UnwrapObject < Vector2Int >( x ) );

            m_Properties["width"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.width ),
                x => m_InternalObject.width = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["height"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.height ),
                x => m_InternalObject.height = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["xMin"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.xMin ),
                x => m_InternalObject.xMin = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["yMin"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.yMin ),
                x => m_InternalObject.yMin = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["xMax"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.xMax ),
                x => m_InternalObject.xMax = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["yMax"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.yMax ),
                x => m_InternalObject.yMax = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["position"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2Int( m_InternalObject.position ),
                x => m_InternalObject.position = WrapperHelper.UnwrapObject < Vector2Int >( x ) );

            m_Properties["size"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2Int( m_InternalObject.size ),
                x => m_InternalObject.size = WrapperHelper.UnwrapObject < Vector2Int >( x ) );

            m_Properties["SetMinMax"] = new BSFunctionReference(
                new BSFunction(
                    "function SetMinMax(minPosition, maxPosition)",
                    a =>
                    {
                        m_InternalObject.SetMinMax(
                            WrapperHelper.UnwrapObject < Vector2Int >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2Int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["ClampToBounds"] = new BSFunctionReference(
                new BSFunction(
                    "function ClampToBounds(bounds)",
                    a =>
                    {
                        m_InternalObject.ClampToBounds( WrapperHelper.UnwrapObject < RectInt >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Contains"] = new BSFunctionReference(
                new BSFunction(
                    "function Contains(position)",
                    a => m_InternalObject.Contains( WrapperHelper.UnwrapObject < Vector2Int >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Overlaps"] = new BSFunctionReference(
                new BSFunction(
                    "function Overlaps(other)",
                    a => m_InternalObject.Overlaps( WrapperHelper.UnwrapObject < RectInt >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format)",
                    a => new BSObject( m_InternalObject.ToString( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format, formatProvider)",
                    a => new BSObject(
                        m_InternalObject.ToString(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < IFormatProvider >( a[1] ) ) ),
                    2 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < RectInt >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_RectInt : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_RectInt() : base( typeof( RectInt ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_RectInt()
        {
            WrapperHelper.AddRecastWrapper < RectInt >( o => new BSWrapperObject_UnityEngine_RectInt( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Vector2Int : BSWrapperObject < Vector2Int >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Vector2Int( Vector2Int obj ) : base( obj )
        {
            m_Properties["x"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.x ),
                x => m_InternalObject.x = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["y"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.y ),
                x => m_InternalObject.y = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["get_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function get_Item(index)",
                    a => new BSObject( ( decimal ) m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] )] ),
                    1 ) );

            m_Properties["set_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function set_Item(index, value)",
                    a =>
                    {
                        m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] )] =
                            WrapperHelper.UnwrapObject < int >( a[1] );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["magnitude"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.magnitude ),
                null );

            m_Properties["sqrMagnitude"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.sqrMagnitude ),
                null );

            m_Properties["Set"] = new BSFunctionReference(
                new BSFunction(
                    "function Set(x, y)",
                    a =>
                    {
                        m_InternalObject.Set(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Scale"] = new BSFunctionReference(
                new BSFunction(
                    "function Scale(scale)",
                    a =>
                    {
                        m_InternalObject.Scale( WrapperHelper.UnwrapObject < Vector2Int >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Clamp"] = new BSFunctionReference(
                new BSFunction(
                    "function Clamp(min, max)",
                    a =>
                    {
                        m_InternalObject.Clamp(
                            WrapperHelper.UnwrapObject < Vector2Int >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2Int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < Vector2Int >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format)",
                    a => new BSObject( m_InternalObject.ToString( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format, formatProvider)",
                    a => new BSObject(
                        m_InternalObject.ToString(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < IFormatProvider >( a[1] ) ) ),
                    2 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Vector2Int : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Vector2Int() : base( typeof( Vector2Int ) )
        {
            m_StaticProperties["zero"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2Int( Vector2Int.zero ),
                null );

            m_StaticProperties["one"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2Int( Vector2Int.one ),
                null );

            m_StaticProperties["up"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2Int( Vector2Int.up ),
                null );

            m_StaticProperties["down"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2Int( Vector2Int.down ),
                null );

            m_StaticProperties["left"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2Int( Vector2Int.left ),
                null );

            m_StaticProperties["right"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2Int( Vector2Int.right ),
                null );

            m_StaticProperties["Distance"] = new BSFunctionReference(
                new BSFunction(
                    "function Distance(a, b)",
                    a => new BSObject(
                        ( decimal ) Vector2Int.Distance(
                            WrapperHelper.UnwrapObject < Vector2Int >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2Int >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Min"] = new BSFunctionReference(
                new BSFunction(
                    "function Min(lhs, rhs)",
                    a => new BSWrapperObject_UnityEngine_Vector2Int(
                        Vector2Int.Min(
                            WrapperHelper.UnwrapObject < Vector2Int >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2Int >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Max"] = new BSFunctionReference(
                new BSFunction(
                    "function Max(lhs, rhs)",
                    a => new BSWrapperObject_UnityEngine_Vector2Int(
                        Vector2Int.Max(
                            WrapperHelper.UnwrapObject < Vector2Int >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2Int >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Scale"] = new BSFunctionReference(
                new BSFunction(
                    "function Scale(a, b)",
                    a => new BSWrapperObject_UnityEngine_Vector2Int(
                        Vector2Int.Scale(
                            WrapperHelper.UnwrapObject < Vector2Int >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector2Int >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["FloorToInt"] = new BSFunctionReference(
                new BSFunction(
                    "function FloorToInt(v)",
                    a => new BSWrapperObject_UnityEngine_Vector2Int(
                        Vector2Int.FloorToInt( WrapperHelper.UnwrapObject < Vector2 >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["CeilToInt"] = new BSFunctionReference(
                new BSFunction(
                    "function CeilToInt(v)",
                    a => new BSWrapperObject_UnityEngine_Vector2Int(
                        Vector2Int.CeilToInt( WrapperHelper.UnwrapObject < Vector2 >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["RoundToInt"] = new BSFunctionReference(
                new BSFunction(
                    "function RoundToInt(v)",
                    a => new BSWrapperObject_UnityEngine_Vector2Int(
                        Vector2Int.RoundToInt( WrapperHelper.UnwrapObject < Vector2 >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Vector2Int()
        {
            WrapperHelper.AddRecastWrapper < Vector2Int >( o => new BSWrapperObject_UnityEngine_Vector2Int( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Rendering_GPUFence : BSWrapperObject < GraphicsFence >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Rendering_GPUFence( GraphicsFence obj ) : base( obj )
        {
            m_Properties["passed"] = new BSReflectionReference(
                () => m_InternalObject.passed ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Rendering_GPUFence : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Rendering_GPUFence() : base( typeof( GraphicsFence ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Rendering_GPUFence()
        {
            WrapperHelper.AddRecastWrapper < GraphicsFence >(
                o => new BSWrapperObject_UnityEngine_Rendering_GPUFence( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_CanvasRenderer : BSWrapperObject < CanvasRenderer >

    {
        #region Public

        public BSWrapperObject_UnityEngine_CanvasRenderer( CanvasRenderer obj ) : base( obj )
        {
            m_Properties["hasPopInstruction"] = new BSReflectionReference(
                () => m_InternalObject.hasPopInstruction ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.hasPopInstruction = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["materialCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.materialCount ),
                x => m_InternalObject.materialCount = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["popMaterialCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.popMaterialCount ),
                x => m_InternalObject.popMaterialCount = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["absoluteDepth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.absoluteDepth ),
                null );

            m_Properties["hasMoved"] = new BSReflectionReference(
                () => m_InternalObject.hasMoved ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["cullTransparentMesh"] = new BSReflectionReference(
                () => m_InternalObject.cullTransparentMesh ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.cullTransparentMesh = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["hasRectClipping"] = new BSReflectionReference(
                () => m_InternalObject.hasRectClipping ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["relativeDepth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.relativeDepth ),
                null );

            m_Properties["cull"] = new BSReflectionReference(
                () => m_InternalObject.cull ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.cull = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isMask"] = new BSReflectionReference(
                () => m_InternalObject.isMask ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.isMask = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["clippingSoftness"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.clippingSoftness ),
                x => m_InternalObject.clippingSoftness = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["SetColor"] = new BSFunctionReference(
                new BSFunction(
                    "function SetColor(color)",
                    a =>
                    {
                        m_InternalObject.SetColor( WrapperHelper.UnwrapObject < Color >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetColor"] = new BSFunctionReference(
                new BSFunction(
                    "function GetColor()",
                    a => new BSWrapperObject_UnityEngine_Color( m_InternalObject.GetColor() ),
                    0 ) );

            m_Properties["EnableRectClipping"] = new BSFunctionReference(
                new BSFunction(
                    "function EnableRectClipping(rect)",
                    a =>
                    {
                        m_InternalObject.EnableRectClipping( WrapperHelper.UnwrapObject < Rect >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["DisableRectClipping"] = new BSFunctionReference(
                new BSFunction(
                    "function DisableRectClipping()",
                    a =>
                    {
                        m_InternalObject.DisableRectClipping();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetMaterial"] = new BSFunctionReference(
                new BSFunction(
                    "function SetMaterial(material, index)",
                    a =>
                    {
                        m_InternalObject.SetMaterial(
                            WrapperHelper.UnwrapObject < Material >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetMaterial"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMaterial(index)",
                    a => new BSWrapperObject_UnityEngine_Material(
                        m_InternalObject.GetMaterial( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["SetPopMaterial"] = new BSFunctionReference(
                new BSFunction(
                    "function SetPopMaterial(material, index)",
                    a =>
                    {
                        m_InternalObject.SetPopMaterial(
                            WrapperHelper.UnwrapObject < Material >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetPopMaterial"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPopMaterial(index)",
                    a => new BSWrapperObject_UnityEngine_Material(
                        m_InternalObject.GetPopMaterial( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["SetTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTexture(texture)",
                    a =>
                    {
                        m_InternalObject.SetTexture( WrapperHelper.UnwrapObject < Texture >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetAlphaTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function SetAlphaTexture(texture)",
                    a =>
                    {
                        m_InternalObject.SetAlphaTexture( WrapperHelper.UnwrapObject < Texture >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetMesh"] = new BSFunctionReference(
                new BSFunction(
                    "function SetMesh(mesh)",
                    a =>
                    {
                        m_InternalObject.SetMesh( WrapperHelper.UnwrapObject < Mesh >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Clear"] = new BSFunctionReference(
                new BSFunction(
                    "function Clear()",
                    a =>
                    {
                        m_InternalObject.Clear();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetAlpha"] = new BSFunctionReference(
                new BSFunction(
                    "function GetAlpha()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetAlpha() ),
                    0 ) );

            m_Properties["SetAlpha"] = new BSFunctionReference(
                new BSFunction(
                    "function SetAlpha(alpha)",
                    a =>
                    {
                        m_InternalObject.SetAlpha( WrapperHelper.UnwrapObject < float >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInheritedAlpha"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInheritedAlpha()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInheritedAlpha() ),
                    0 ) );

            m_Properties["SetMaterial"] = new BSFunctionReference(
                new BSFunction(
                    "function SetMaterial(material, texture)",
                    a =>
                    {
                        m_InternalObject.SetMaterial(
                            WrapperHelper.UnwrapObject < Material >( a[0] ),
                            WrapperHelper.UnwrapObject < Texture >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetMaterial"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMaterial()",
                    a => new BSWrapperObject_UnityEngine_Material( m_InternalObject.GetMaterial() ),
                    0 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_CanvasRenderer : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_CanvasRenderer() : base( typeof( CanvasRenderer ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_CanvasRenderer()
        {
            WrapperHelper.AddRecastWrapper < CanvasRenderer >(
                o => new BSWrapperObject_UnityEngine_CanvasRenderer( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Events_UnityAction : BSWrapperObject < UnityAction >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Events_UnityAction( UnityAction obj ) : base( obj )
        {
            m_Properties["Method"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_MethodInfo( m_InternalObject.Method ),
                null );

            m_Properties["Target"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.Target ),
                null );

            m_Properties["Invoke"] = new BSFunctionReference(
                new BSFunction(
                    "function Invoke()",
                    a =>
                    {
                        m_InternalObject.Invoke();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["BeginInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function BeginInvoke(callback, object)",
                    a => new BSWrapperObject_System_IAsyncResult(
                        m_InternalObject.BeginInvoke(
                            WrapperHelper.UnwrapObject < AsyncCallback >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) ) ),
                    2 ) );

            m_Properties["EndInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function EndInvoke(result)",
                    a =>
                    {
                        m_InternalObject.EndInvoke( WrapperHelper.UnwrapObject < IAsyncResult >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetObjectData"] = new BSFunctionReference(
                new BSFunction(
                    "function GetObjectData(info, context)",
                    a =>
                    {
                        m_InternalObject.GetObjectData(
                            WrapperHelper.UnwrapObject < SerializationInfo >( a[0] ),
                            WrapperHelper.UnwrapObject < StreamingContext >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Clone"] = new BSFunctionReference(
                new BSFunction(
                    "function Clone()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.Clone() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Events_UnityAction : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Events_UnityAction() : base( typeof( UnityAction ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Events_UnityAction()
        {
            WrapperHelper.AddRecastWrapper < UnityAction >(
                o => new BSWrapperObject_UnityEngine_Events_UnityAction( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Reflection_MethodInfo : BSWrapperObject < MethodInfo >

    {
        #region Public

        public BSWrapperObject_System_Reflection_MethodInfo( MethodInfo obj ) : base( obj )
        {
            m_Properties["ReturnParameter"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_ParameterInfo( m_InternalObject.ReturnParameter ),
                null );

            m_Properties["ReturnTypeCustomAttributes"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_ICustomAttributeProvider(
                    m_InternalObject.ReturnTypeCustomAttributes ),
                null );

            m_Properties["MethodHandle"] = new BSReflectionReference(
                () => new BSWrapperObject_System_RuntimeMethodHandle( m_InternalObject.MethodHandle ),
                null );

            m_Properties["IsGenericMethodDefinition"] = new BSReflectionReference(
                () => m_InternalObject.IsGenericMethodDefinition ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["ContainsGenericParameters"] = new BSReflectionReference(
                () => m_InternalObject.ContainsGenericParameters ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsGenericMethod"] = new BSReflectionReference(
                () => m_InternalObject.IsGenericMethod ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsSecurityCritical"] = new BSReflectionReference(
                () => m_InternalObject.IsSecurityCritical ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsSecuritySafeCritical"] = new BSReflectionReference(
                () => m_InternalObject.IsSecuritySafeCritical ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsSecurityTransparent"] = new BSReflectionReference(
                () => m_InternalObject.IsSecurityTransparent ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsPublic"] = new BSReflectionReference(
                () => m_InternalObject.IsPublic ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsPrivate"] = new BSReflectionReference(
                () => m_InternalObject.IsPrivate ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsFamily"] = new BSReflectionReference(
                () => m_InternalObject.IsFamily ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsAssembly"] = new BSReflectionReference(
                () => m_InternalObject.IsAssembly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsFamilyAndAssembly"] = new BSReflectionReference(
                () => m_InternalObject.IsFamilyAndAssembly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsFamilyOrAssembly"] = new BSReflectionReference(
                () => m_InternalObject.IsFamilyOrAssembly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsStatic"] = new BSReflectionReference(
                () => m_InternalObject.IsStatic ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsFinal"] = new BSReflectionReference(
                () => m_InternalObject.IsFinal ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsVirtual"] = new BSReflectionReference(
                () => m_InternalObject.IsVirtual ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsHideBySig"] = new BSReflectionReference(
                () => m_InternalObject.IsHideBySig ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsAbstract"] = new BSReflectionReference(
                () => m_InternalObject.IsAbstract ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsSpecialName"] = new BSReflectionReference(
                () => m_InternalObject.IsSpecialName ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsConstructor"] = new BSReflectionReference(
                () => m_InternalObject.IsConstructor ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["Name"] = new BSReflectionReference( () => new BSObject( m_InternalObject.Name ), null );

            m_Properties["MetadataToken"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.MetadataToken ),
                null );

            m_Properties["Module"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_Module( m_InternalObject.Module ),
                null );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["GetBaseDefinition"] = new BSFunctionReference(
                new BSFunction(
                    "function GetBaseDefinition()",
                    a => new BSWrapperObject_System_Reflection_MethodInfo( m_InternalObject.GetBaseDefinition() ),
                    0 ) );

            m_Properties["GetGenericMethodDefinition"] = new BSFunctionReference(
                new BSFunction(
                    "function GetGenericMethodDefinition()",
                    a => new BSWrapperObject_System_Reflection_MethodInfo(
                        m_InternalObject.GetGenericMethodDefinition() ),
                    0 ) );

            m_Properties["GetMethodBody"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMethodBody()",
                    a => new BSWrapperObject_System_Reflection_MethodBody( m_InternalObject.GetMethodBody() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Reflection_MethodInfo : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Reflection_MethodInfo() : base( typeof( MethodInfo ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Reflection_MethodInfo()
        {
            WrapperHelper.AddRecastWrapper < MethodInfo >( o => new BSWrapperObject_System_Reflection_MethodInfo( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Reflection_ParameterInfo : BSWrapperObject < ParameterInfo >

    {
        #region Public

        public BSWrapperObject_System_Reflection_ParameterInfo( ParameterInfo obj ) : base( obj )
        {
            m_Properties["IsIn"] = new BSReflectionReference(
                () => m_InternalObject.IsIn ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsLcid"] = new BSReflectionReference(
                () => m_InternalObject.IsLcid ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsOptional"] = new BSReflectionReference(
                () => m_InternalObject.IsOptional ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsOut"] = new BSReflectionReference(
                () => m_InternalObject.IsOut ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsRetval"] = new BSReflectionReference(
                () => m_InternalObject.IsRetval ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["Member"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_MemberInfo( m_InternalObject.Member ),
                null );

            m_Properties["Name"] = new BSReflectionReference( () => new BSObject( m_InternalObject.Name ), null );

            m_Properties["Position"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Position ),
                null );

            m_Properties["HasDefaultValue"] = new BSReflectionReference(
                () => m_InternalObject.HasDefaultValue ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["DefaultValue"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.DefaultValue ),
                null );

            m_Properties["RawDefaultValue"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.RawDefaultValue ),
                null );

            m_Properties["MetadataToken"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.MetadataToken ),
                null );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["GetRealObject"] = new BSFunctionReference(
                new BSFunction(
                    "function GetRealObject(context)",
                    a => new BSWrapperObject_System_Object(
                        m_InternalObject.GetRealObject( WrapperHelper.UnwrapObject < StreamingContext >( a[0] ) ) ),
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Reflection_ParameterInfo : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Reflection_ParameterInfo() : base( typeof( ParameterInfo ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Reflection_ParameterInfo()
        {
            WrapperHelper.AddRecastWrapper < ParameterInfo >(
                o => new BSWrapperObject_System_Reflection_ParameterInfo( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Reflection_MemberInfo : BSWrapperObject < MemberInfo >

    {
        #region Public

        public BSWrapperObject_System_Reflection_MemberInfo( MemberInfo obj ) : base( obj )
        {
            m_Properties["Name"] = new BSReflectionReference( () => new BSObject( m_InternalObject.Name ), null );

            m_Properties["MetadataToken"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.MetadataToken ),
                null );

            m_Properties["Module"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_Module( m_InternalObject.Module ),
                null );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Reflection_MemberInfo : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Reflection_MemberInfo() : base( typeof( MemberInfo ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Reflection_MemberInfo()
        {
            WrapperHelper.AddRecastWrapper < MemberInfo >( o => new BSWrapperObject_System_Reflection_MemberInfo( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Reflection_Module : BSWrapperObject < Module >

    {
        #region Public

        public BSWrapperObject_System_Reflection_Module( Module obj ) : base( obj )
        {
            m_Properties["ModuleHandle"] = new BSReflectionReference(
                () => new BSWrapperObject_System_ModuleHandle( m_InternalObject.ModuleHandle ),
                null );

            m_Properties["Assembly"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_Assembly( m_InternalObject.Assembly ),
                null );

            m_Properties["Name"] = new BSReflectionReference( () => new BSObject( m_InternalObject.Name ), null );

            m_Properties["ScopeName"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.ScopeName ),
                null );

            m_Properties["MDStreamVersion"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.MDStreamVersion ),
                null );

            m_Properties["ModuleVersionId"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Guid( m_InternalObject.ModuleVersionId ),
                null );

            m_Properties["FullyQualifiedName"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.FullyQualifiedName ),
                null );

            m_Properties["MetadataToken"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.MetadataToken ),
                null );

            m_Properties["GetField"] = new BSFunctionReference(
                new BSFunction(
                    "function GetField(name)",
                    a => new BSWrapperObject_System_Reflection_FieldInfo(
                        m_InternalObject.GetField( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetMethod"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMethod(name)",
                    a => new BSWrapperObject_System_Reflection_MethodInfo(
                        m_InternalObject.GetMethod( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetObjectData"] = new BSFunctionReference(
                new BSFunction(
                    "function GetObjectData(info, context)",
                    a =>
                    {
                        m_InternalObject.GetObjectData(
                            WrapperHelper.UnwrapObject < SerializationInfo >( a[0] ),
                            WrapperHelper.UnwrapObject < StreamingContext >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["ResolveField"] = new BSFunctionReference(
                new BSFunction(
                    "function ResolveField(metadataToken)",
                    a => new BSWrapperObject_System_Reflection_FieldInfo(
                        m_InternalObject.ResolveField( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["ResolveMember"] = new BSFunctionReference(
                new BSFunction(
                    "function ResolveMember(metadataToken)",
                    a => new BSWrapperObject_System_Reflection_MemberInfo(
                        m_InternalObject.ResolveMember( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["ResolveMethod"] = new BSFunctionReference(
                new BSFunction(
                    "function ResolveMethod(metadataToken)",
                    a => new BSWrapperObject_System_Reflection_MethodBase(
                        m_InternalObject.ResolveMethod( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(o)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["IsResource"] = new BSFunctionReference(
                new BSFunction(
                    "function IsResource()",
                    a => m_InternalObject.IsResource() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["ResolveString"] = new BSFunctionReference(
                new BSFunction(
                    "function ResolveString(metadataToken)",
                    a => new BSObject( m_InternalObject.ResolveString( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Reflection_Module : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Reflection_Module() : base( typeof( Module ) )
        {
            m_StaticProperties["FilterTypeName"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_TypeFilter( Module.FilterTypeName ),
                null );

            m_StaticProperties["FilterTypeNameIgnoreCase"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_TypeFilter( Module.FilterTypeNameIgnoreCase ),
                null );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Reflection_Module()
        {
            WrapperHelper.AddRecastWrapper < Module >( o => new BSWrapperObject_System_Reflection_Module( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_ModuleHandle : BSWrapperObject < ModuleHandle >

    {
        #region Public

        public BSWrapperObject_System_ModuleHandle( ModuleHandle obj ) : base( obj )
        {
            m_Properties["MDStreamVersion"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.MDStreamVersion ),
                null );

            m_Properties["ResolveFieldHandle"] = new BSFunctionReference(
                new BSFunction(
                    "function ResolveFieldHandle(fieldToken)",
                    a => new BSWrapperObject_System_RuntimeFieldHandle(
                        m_InternalObject.ResolveFieldHandle( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["ResolveMethodHandle"] = new BSFunctionReference(
                new BSFunction(
                    "function ResolveMethodHandle(methodToken)",
                    a => new BSWrapperObject_System_RuntimeMethodHandle(
                        m_InternalObject.ResolveMethodHandle( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["ResolveTypeHandle"] = new BSFunctionReference(
                new BSFunction(
                    "function ResolveTypeHandle(typeToken)",
                    a => new BSWrapperObject_System_RuntimeTypeHandle(
                        m_InternalObject.ResolveTypeHandle( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetRuntimeFieldHandleFromMetadataToken"] = new BSFunctionReference(
                new BSFunction(
                    "function GetRuntimeFieldHandleFromMetadataToken(fieldToken)",
                    a => new BSWrapperObject_System_RuntimeFieldHandle(
                        m_InternalObject.GetRuntimeFieldHandleFromMetadataToken(
                            WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetRuntimeMethodHandleFromMetadataToken"] = new BSFunctionReference(
                new BSFunction(
                    "function GetRuntimeMethodHandleFromMetadataToken(methodToken)",
                    a => new BSWrapperObject_System_RuntimeMethodHandle(
                        m_InternalObject.GetRuntimeMethodHandleFromMetadataToken(
                            WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetRuntimeTypeHandleFromMetadataToken"] = new BSFunctionReference(
                new BSFunction(
                    "function GetRuntimeTypeHandleFromMetadataToken(typeToken)",
                    a => new BSWrapperObject_System_RuntimeTypeHandle(
                        m_InternalObject.GetRuntimeTypeHandleFromMetadataToken(
                            WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(handle)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < ModuleHandle >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_ModuleHandle : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_ModuleHandle() : base( typeof( ModuleHandle ) )
        {
            m_StaticProperties["EmptyHandle"] = new BSReflectionReference(
                () => new BSWrapperObject_System_ModuleHandle( ModuleHandle.EmptyHandle ),
                null );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_ModuleHandle()
        {
            WrapperHelper.AddRecastWrapper < ModuleHandle >( o => new BSWrapperObject_System_ModuleHandle( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_RuntimeFieldHandle : BSWrapperObject < RuntimeFieldHandle >

    {
        #region Public

        public BSWrapperObject_System_RuntimeFieldHandle( RuntimeFieldHandle obj ) : base( obj )
        {
            m_Properties["Value"] = new BSReflectionReference(
                () => new BSWrapperObject_System_IntPtr( m_InternalObject.Value ),
                null );

            m_Properties["GetObjectData"] = new BSFunctionReference(
                new BSFunction(
                    "function GetObjectData(info, context)",
                    a =>
                    {
                        m_InternalObject.GetObjectData(
                            WrapperHelper.UnwrapObject < SerializationInfo >( a[0] ),
                            WrapperHelper.UnwrapObject < StreamingContext >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(handle)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < RuntimeFieldHandle >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_RuntimeFieldHandle : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_RuntimeFieldHandle() : base( typeof( RuntimeFieldHandle ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_RuntimeFieldHandle()
        {
            WrapperHelper.AddRecastWrapper < RuntimeFieldHandle >(
                o => new BSWrapperObject_System_RuntimeFieldHandle( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Runtime_Serialization_SerializationInfo : BSWrapperObject < SerializationInfo >

    {
        #region Public

        public BSWrapperObject_System_Runtime_Serialization_SerializationInfo( SerializationInfo obj ) : base( obj )
        {
            m_Properties["FullTypeName"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.FullTypeName ),
                x => m_InternalObject.FullTypeName = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["AssemblyName"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.AssemblyName ),
                x => m_InternalObject.AssemblyName = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["MemberCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.MemberCount ),
                null );

            m_Properties["IsFullTypeNameSetExplicit"] = new BSReflectionReference(
                () => m_InternalObject.IsFullTypeNameSetExplicit ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsAssemblyNameSetExplicit"] = new BSReflectionReference(
                () => m_InternalObject.IsAssemblyNameSetExplicit ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["GetEnumerator"] = new BSFunctionReference(
                new BSFunction(
                    "function GetEnumerator()",
                    a => new BSWrapperObject_System_Runtime_Serialization_SerializationInfoEnumerator(
                        m_InternalObject.GetEnumerator() ),
                    0 ) );

            m_Properties["AddValue"] = new BSFunctionReference(
                new BSFunction(
                    "function AddValue(name, value)",
                    a =>
                    {
                        m_InternalObject.AddValue(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddValue"] = new BSFunctionReference(
                new BSFunction(
                    "function AddValue(name, value)",
                    a =>
                    {
                        m_InternalObject.AddValue(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddValue"] = new BSFunctionReference(
                new BSFunction(
                    "function AddValue(name, value)",
                    a =>
                    {
                        m_InternalObject.AddValue(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < char >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddValue"] = new BSFunctionReference(
                new BSFunction(
                    "function AddValue(name, value)",
                    a =>
                    {
                        m_InternalObject.AddValue(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < sbyte >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddValue"] = new BSFunctionReference(
                new BSFunction(
                    "function AddValue(name, value)",
                    a =>
                    {
                        m_InternalObject.AddValue(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < byte >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddValue"] = new BSFunctionReference(
                new BSFunction(
                    "function AddValue(name, value)",
                    a =>
                    {
                        m_InternalObject.AddValue(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < short >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddValue"] = new BSFunctionReference(
                new BSFunction(
                    "function AddValue(name, value)",
                    a =>
                    {
                        m_InternalObject.AddValue(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < ushort >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddValue"] = new BSFunctionReference(
                new BSFunction(
                    "function AddValue(name, value)",
                    a =>
                    {
                        m_InternalObject.AddValue(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddValue"] = new BSFunctionReference(
                new BSFunction(
                    "function AddValue(name, value)",
                    a =>
                    {
                        m_InternalObject.AddValue(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < uint >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddValue"] = new BSFunctionReference(
                new BSFunction(
                    "function AddValue(name, value)",
                    a =>
                    {
                        m_InternalObject.AddValue(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < long >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddValue"] = new BSFunctionReference(
                new BSFunction(
                    "function AddValue(name, value)",
                    a =>
                    {
                        m_InternalObject.AddValue(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < ulong >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddValue"] = new BSFunctionReference(
                new BSFunction(
                    "function AddValue(name, value)",
                    a =>
                    {
                        m_InternalObject.AddValue(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddValue"] = new BSFunctionReference(
                new BSFunction(
                    "function AddValue(name, value)",
                    a =>
                    {
                        m_InternalObject.AddValue(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < double >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddValue"] = new BSFunctionReference(
                new BSFunction(
                    "function AddValue(name, value)",
                    a =>
                    {
                        m_InternalObject.AddValue(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < decimal >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddValue"] = new BSFunctionReference(
                new BSFunction(
                    "function AddValue(name, value)",
                    a =>
                    {
                        m_InternalObject.AddValue(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < DateTime >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetBoolean"] = new BSFunctionReference(
                new BSFunction(
                    "function GetBoolean(name)",
                    a => m_InternalObject.GetBoolean( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetChar"] = new BSFunctionReference(
                new BSFunction(
                    "function GetChar(name)",
                    a => new BSWrapperObject_System_Char(
                        m_InternalObject.GetChar( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetSByte"] = new BSFunctionReference(
                new BSFunction(
                    "function GetSByte(name)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetSByte( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetByte"] = new BSFunctionReference(
                new BSFunction(
                    "function GetByte(name)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetByte( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetInt16"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInt16(name)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetInt16( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetUInt16"] = new BSFunctionReference(
                new BSFunction(
                    "function GetUInt16(name)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetUInt16( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetInt32"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInt32(name)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetInt32( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetUInt32"] = new BSFunctionReference(
                new BSFunction(
                    "function GetUInt32(name)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetUInt32( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetInt64"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInt64(name)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetInt64( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetUInt64"] = new BSFunctionReference(
                new BSFunction(
                    "function GetUInt64(name)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetUInt64( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetSingle"] = new BSFunctionReference(
                new BSFunction(
                    "function GetSingle(name)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetSingle( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetDouble"] = new BSFunctionReference(
                new BSFunction(
                    "function GetDouble(name)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetDouble( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetDecimal"] = new BSFunctionReference(
                new BSFunction(
                    "function GetDecimal(name)",
                    a => new BSObject( m_InternalObject.GetDecimal( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetDateTime"] = new BSFunctionReference(
                new BSFunction(
                    "function GetDateTime(name)",
                    a => new BSWrapperObject_System_DateTime(
                        m_InternalObject.GetDateTime( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetString"] = new BSFunctionReference(
                new BSFunction(
                    "function GetString(name)",
                    a => new BSObject( m_InternalObject.GetString( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Runtime_Serialization_SerializationInfo : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Runtime_Serialization_SerializationInfo() : base(
            typeof( SerializationInfo ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Runtime_Serialization_SerializationInfo()
        {
            WrapperHelper.AddRecastWrapper < SerializationInfo >(
                o => new BSWrapperObject_System_Runtime_Serialization_SerializationInfo( o ) );
        }

        #endregion
    }

    public class
        BSWrapperObject_System_Runtime_Serialization_SerializationInfoEnumerator : BSWrapperObject <
            SerializationInfoEnumerator >

    {
        #region Public

        public BSWrapperObject_System_Runtime_Serialization_SerializationInfoEnumerator(
            SerializationInfoEnumerator obj ) : base( obj )
        {
            m_Properties["Current"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Runtime_Serialization_SerializationEntry( m_InternalObject.Current ),
                null );

            m_Properties["Name"] = new BSReflectionReference( () => new BSObject( m_InternalObject.Name ), null );

            m_Properties["Value"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.Value ),
                null );

            m_Properties["MoveNext"] = new BSFunctionReference(
                new BSFunction(
                    "function MoveNext()",
                    a => m_InternalObject.MoveNext() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["Reset"] = new BSFunctionReference(
                new BSFunction(
                    "function Reset()",
                    a =>
                    {
                        m_InternalObject.Reset();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Runtime_Serialization_SerializationInfoEnumerator : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Runtime_Serialization_SerializationInfoEnumerator() : base(
            typeof( SerializationInfoEnumerator ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Runtime_Serialization_SerializationInfoEnumerator()
        {
            WrapperHelper.AddRecastWrapper < SerializationInfoEnumerator >(
                o => new BSWrapperObject_System_Runtime_Serialization_SerializationInfoEnumerator( o ) );
        }

        #endregion
    }

    public class
        BSWrapperObject_System_Runtime_Serialization_SerializationEntry : BSWrapperObject < SerializationEntry >

    {
        #region Public

        public BSWrapperObject_System_Runtime_Serialization_SerializationEntry( SerializationEntry obj ) : base( obj )
        {
            m_Properties["Value"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.Value ),
                null );

            m_Properties["Name"] = new BSReflectionReference( () => new BSObject( m_InternalObject.Name ), null );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Runtime_Serialization_SerializationEntry : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Runtime_Serialization_SerializationEntry() : base(
            typeof( SerializationEntry ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Runtime_Serialization_SerializationEntry()
        {
            WrapperHelper.AddRecastWrapper < SerializationEntry >(
                o => new BSWrapperObject_System_Runtime_Serialization_SerializationEntry( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Char : BSWrapperObject < char >

    {
        #region Public

        public BSWrapperObject_System_Char( char obj ) : base( obj )
        {
            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < char >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["CompareTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTo(value)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.CompareTo( WrapperHelper.UnwrapObject < object >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTo(value)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.CompareTo( WrapperHelper.UnwrapObject < char >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(provider)",
                    a => new BSObject(
                        m_InternalObject.ToString( WrapperHelper.UnwrapObject < IFormatProvider >( a[0] ) ) ),
                    1 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Char : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Char() : base( typeof( char ) )
        {
            m_StaticProperties["MaxValue"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Char( char.MaxValue ),
                null );

            m_StaticProperties["MinValue"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Char( char.MinValue ),
                null );

            m_StaticProperties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(c)",
                    a => new BSObject( char.ToString( WrapperHelper.UnwrapObject < char >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Parse"] = new BSFunctionReference(
                new BSFunction(
                    "function Parse(s)",
                    a => new BSWrapperObject_System_Char( char.Parse( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["IsDigit"] = new BSFunctionReference(
                new BSFunction(
                    "function IsDigit(c)",
                    a => char.IsDigit( WrapperHelper.UnwrapObject < char >( a[0] ) ) ? BSObject.One : BSObject.Zero,
                    1 ) );

            m_StaticProperties["IsLetter"] = new BSFunctionReference(
                new BSFunction(
                    "function IsLetter(c)",
                    a => char.IsLetter( WrapperHelper.UnwrapObject < char >( a[0] ) ) ? BSObject.One : BSObject.Zero,
                    1 ) );

            m_StaticProperties["IsWhiteSpace"] = new BSFunctionReference(
                new BSFunction(
                    "function IsWhiteSpace(c)",
                    a => char.IsWhiteSpace( WrapperHelper.UnwrapObject < char >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["IsUpper"] = new BSFunctionReference(
                new BSFunction(
                    "function IsUpper(c)",
                    a => char.IsUpper( WrapperHelper.UnwrapObject < char >( a[0] ) ) ? BSObject.One : BSObject.Zero,
                    1 ) );

            m_StaticProperties["IsLower"] = new BSFunctionReference(
                new BSFunction(
                    "function IsLower(c)",
                    a => char.IsLower( WrapperHelper.UnwrapObject < char >( a[0] ) ) ? BSObject.One : BSObject.Zero,
                    1 ) );

            m_StaticProperties["IsPunctuation"] = new BSFunctionReference(
                new BSFunction(
                    "function IsPunctuation(c)",
                    a => char.IsPunctuation( WrapperHelper.UnwrapObject < char >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["IsLetterOrDigit"] = new BSFunctionReference(
                new BSFunction(
                    "function IsLetterOrDigit(c)",
                    a => char.IsLetterOrDigit( WrapperHelper.UnwrapObject < char >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["ToUpper"] = new BSFunctionReference(
                new BSFunction(
                    "function ToUpper(c, culture)",
                    a => new BSWrapperObject_System_Char(
                        char.ToUpper(
                            WrapperHelper.UnwrapObject < char >( a[0] ),
                            WrapperHelper.UnwrapObject < CultureInfo >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["ToUpper"] = new BSFunctionReference(
                new BSFunction(
                    "function ToUpper(c)",
                    a => new BSWrapperObject_System_Char( char.ToUpper( WrapperHelper.UnwrapObject < char >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["ToUpperInvariant"] = new BSFunctionReference(
                new BSFunction(
                    "function ToUpperInvariant(c)",
                    a => new BSWrapperObject_System_Char(
                        char.ToUpperInvariant( WrapperHelper.UnwrapObject < char >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["ToLower"] = new BSFunctionReference(
                new BSFunction(
                    "function ToLower(c, culture)",
                    a => new BSWrapperObject_System_Char(
                        char.ToLower(
                            WrapperHelper.UnwrapObject < char >( a[0] ),
                            WrapperHelper.UnwrapObject < CultureInfo >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["ToLower"] = new BSFunctionReference(
                new BSFunction(
                    "function ToLower(c)",
                    a => new BSWrapperObject_System_Char( char.ToLower( WrapperHelper.UnwrapObject < char >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["ToLowerInvariant"] = new BSFunctionReference(
                new BSFunction(
                    "function ToLowerInvariant(c)",
                    a => new BSWrapperObject_System_Char(
                        char.ToLowerInvariant( WrapperHelper.UnwrapObject < char >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["IsControl"] = new BSFunctionReference(
                new BSFunction(
                    "function IsControl(c)",
                    a => char.IsControl( WrapperHelper.UnwrapObject < char >( a[0] ) ) ? BSObject.One : BSObject.Zero,
                    1 ) );

            m_StaticProperties["IsControl"] = new BSFunctionReference(
                new BSFunction(
                    "function IsControl(s, index)",
                    a => char.IsControl(
                        WrapperHelper.UnwrapObject < string >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["IsDigit"] = new BSFunctionReference(
                new BSFunction(
                    "function IsDigit(s, index)",
                    a => char.IsDigit(
                        WrapperHelper.UnwrapObject < string >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["IsLetter"] = new BSFunctionReference(
                new BSFunction(
                    "function IsLetter(s, index)",
                    a => char.IsLetter(
                        WrapperHelper.UnwrapObject < string >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["IsLetterOrDigit"] = new BSFunctionReference(
                new BSFunction(
                    "function IsLetterOrDigit(s, index)",
                    a => char.IsLetterOrDigit(
                        WrapperHelper.UnwrapObject < string >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["IsLower"] = new BSFunctionReference(
                new BSFunction(
                    "function IsLower(s, index)",
                    a => char.IsLower(
                        WrapperHelper.UnwrapObject < string >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["IsNumber"] = new BSFunctionReference(
                new BSFunction(
                    "function IsNumber(c)",
                    a => char.IsNumber( WrapperHelper.UnwrapObject < char >( a[0] ) ) ? BSObject.One : BSObject.Zero,
                    1 ) );

            m_StaticProperties["IsNumber"] = new BSFunctionReference(
                new BSFunction(
                    "function IsNumber(s, index)",
                    a => char.IsNumber(
                        WrapperHelper.UnwrapObject < string >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["IsPunctuation"] = new BSFunctionReference(
                new BSFunction(
                    "function IsPunctuation(s, index)",
                    a => char.IsPunctuation(
                        WrapperHelper.UnwrapObject < string >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["IsSeparator"] = new BSFunctionReference(
                new BSFunction(
                    "function IsSeparator(c)",
                    a => char.IsSeparator( WrapperHelper.UnwrapObject < char >( a[0] ) ) ? BSObject.One : BSObject.Zero,
                    1 ) );

            m_StaticProperties["IsSeparator"] = new BSFunctionReference(
                new BSFunction(
                    "function IsSeparator(s, index)",
                    a => char.IsSeparator(
                        WrapperHelper.UnwrapObject < string >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["IsSurrogate"] = new BSFunctionReference(
                new BSFunction(
                    "function IsSurrogate(c)",
                    a => char.IsSurrogate( WrapperHelper.UnwrapObject < char >( a[0] ) ) ? BSObject.One : BSObject.Zero,
                    1 ) );

            m_StaticProperties["IsSurrogate"] = new BSFunctionReference(
                new BSFunction(
                    "function IsSurrogate(s, index)",
                    a => char.IsSurrogate(
                        WrapperHelper.UnwrapObject < string >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["IsSymbol"] = new BSFunctionReference(
                new BSFunction(
                    "function IsSymbol(c)",
                    a => char.IsSymbol( WrapperHelper.UnwrapObject < char >( a[0] ) ) ? BSObject.One : BSObject.Zero,
                    1 ) );

            m_StaticProperties["IsSymbol"] = new BSFunctionReference(
                new BSFunction(
                    "function IsSymbol(s, index)",
                    a => char.IsSymbol(
                        WrapperHelper.UnwrapObject < string >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["IsUpper"] = new BSFunctionReference(
                new BSFunction(
                    "function IsUpper(s, index)",
                    a => char.IsUpper(
                        WrapperHelper.UnwrapObject < string >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["IsWhiteSpace"] = new BSFunctionReference(
                new BSFunction(
                    "function IsWhiteSpace(s, index)",
                    a => char.IsWhiteSpace(
                        WrapperHelper.UnwrapObject < string >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["GetNumericValue"] = new BSFunctionReference(
                new BSFunction(
                    "function GetNumericValue(c)",
                    a => new BSObject(
                        ( decimal ) char.GetNumericValue( WrapperHelper.UnwrapObject < char >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetNumericValue"] = new BSFunctionReference(
                new BSFunction(
                    "function GetNumericValue(s, index)",
                    a => new BSObject(
                        ( decimal ) char.GetNumericValue(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["IsHighSurrogate"] = new BSFunctionReference(
                new BSFunction(
                    "function IsHighSurrogate(c)",
                    a => char.IsHighSurrogate( WrapperHelper.UnwrapObject < char >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["IsHighSurrogate"] = new BSFunctionReference(
                new BSFunction(
                    "function IsHighSurrogate(s, index)",
                    a => char.IsHighSurrogate(
                        WrapperHelper.UnwrapObject < string >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["IsLowSurrogate"] = new BSFunctionReference(
                new BSFunction(
                    "function IsLowSurrogate(c)",
                    a => char.IsLowSurrogate( WrapperHelper.UnwrapObject < char >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["IsLowSurrogate"] = new BSFunctionReference(
                new BSFunction(
                    "function IsLowSurrogate(s, index)",
                    a => char.IsLowSurrogate(
                        WrapperHelper.UnwrapObject < string >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["IsSurrogatePair"] = new BSFunctionReference(
                new BSFunction(
                    "function IsSurrogatePair(s, index)",
                    a => char.IsSurrogatePair(
                        WrapperHelper.UnwrapObject < string >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["IsSurrogatePair"] = new BSFunctionReference(
                new BSFunction(
                    "function IsSurrogatePair(highSurrogate, lowSurrogate)",
                    a => char.IsSurrogatePair(
                        WrapperHelper.UnwrapObject < char >( a[0] ),
                        WrapperHelper.UnwrapObject < char >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["ConvertFromUtf32"] = new BSFunctionReference(
                new BSFunction(
                    "function ConvertFromUtf32(utf32)",
                    a => new BSObject( char.ConvertFromUtf32( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["ConvertToUtf32"] = new BSFunctionReference(
                new BSFunction(
                    "function ConvertToUtf32(highSurrogate, lowSurrogate)",
                    a => new BSObject(
                        ( decimal ) char.ConvertToUtf32(
                            WrapperHelper.UnwrapObject < char >( a[0] ),
                            WrapperHelper.UnwrapObject < char >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["ConvertToUtf32"] = new BSFunctionReference(
                new BSFunction(
                    "function ConvertToUtf32(s, index)",
                    a => new BSObject(
                        ( decimal ) char.ConvertToUtf32(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Char()
        {
            WrapperHelper.AddRecastWrapper < char >( o => new BSWrapperObject_System_Char( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Globalization_CultureInfo : BSWrapperObject < CultureInfo >

    {
        #region Public

        public BSWrapperObject_System_Globalization_CultureInfo( CultureInfo obj ) : base( obj )
        {
            m_Properties["IetfLanguageTag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.IetfLanguageTag ),
                null );

            m_Properties["KeyboardLayoutId"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.KeyboardLayoutId ),
                null );

            m_Properties["LCID"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.LCID ),
                null );

            m_Properties["Name"] = new BSReflectionReference( () => new BSObject( m_InternalObject.Name ), null );

            m_Properties["NativeName"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.NativeName ),
                null );

            m_Properties["Calendar"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Globalization_Calendar( m_InternalObject.Calendar ),
                null );

            m_Properties["Parent"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Globalization_CultureInfo( m_InternalObject.Parent ),
                null );

            m_Properties["TextInfo"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Globalization_TextInfo( m_InternalObject.TextInfo ),
                null );

            m_Properties["ThreeLetterISOLanguageName"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.ThreeLetterISOLanguageName ),
                null );

            m_Properties["ThreeLetterWindowsLanguageName"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.ThreeLetterWindowsLanguageName ),
                null );

            m_Properties["TwoLetterISOLanguageName"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.TwoLetterISOLanguageName ),
                null );

            m_Properties["UseUserOverride"] = new BSReflectionReference(
                () => m_InternalObject.UseUserOverride ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["CompareInfo"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Globalization_CompareInfo( m_InternalObject.CompareInfo ),
                null );

            m_Properties["IsNeutralCulture"] = new BSReflectionReference(
                () => m_InternalObject.IsNeutralCulture ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["NumberFormat"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Globalization_NumberFormatInfo( m_InternalObject.NumberFormat ),
                x => m_InternalObject.NumberFormat = WrapperHelper.UnwrapObject < NumberFormatInfo >( x ) );

            m_Properties["DateTimeFormat"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Globalization_DateTimeFormatInfo( m_InternalObject.DateTimeFormat ),
                x => m_InternalObject.DateTimeFormat = WrapperHelper.UnwrapObject < DateTimeFormatInfo >( x ) );

            m_Properties["DisplayName"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.DisplayName ),
                null );

            m_Properties["EnglishName"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.EnglishName ),
                null );

            m_Properties["IsReadOnly"] = new BSReflectionReference(
                () => m_InternalObject.IsReadOnly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["GetConsoleFallbackUICulture"] = new BSFunctionReference(
                new BSFunction(
                    "function GetConsoleFallbackUICulture()",
                    a => new BSWrapperObject_System_Globalization_CultureInfo(
                        m_InternalObject.GetConsoleFallbackUICulture() ),
                    0 ) );

            m_Properties["ClearCachedData"] = new BSFunctionReference(
                new BSFunction(
                    "function ClearCachedData()",
                    a =>
                    {
                        m_InternalObject.ClearCachedData();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Clone"] = new BSFunctionReference(
                new BSFunction(
                    "function Clone()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.Clone() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(value)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Globalization_CultureInfo : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Globalization_CultureInfo() : base( typeof( CultureInfo ) )
        {
            m_StaticProperties["InvariantCulture"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Globalization_CultureInfo( CultureInfo.InvariantCulture ),
                null );

            m_StaticProperties["CurrentCulture"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Globalization_CultureInfo( CultureInfo.CurrentCulture ),
                x => CultureInfo.CurrentCulture = WrapperHelper.UnwrapObject < CultureInfo >( x ) );

            m_StaticProperties["CurrentUICulture"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Globalization_CultureInfo( CultureInfo.CurrentUICulture ),
                x => CultureInfo.CurrentUICulture = WrapperHelper.UnwrapObject < CultureInfo >( x ) );

            m_StaticProperties["InstalledUICulture"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Globalization_CultureInfo( CultureInfo.InstalledUICulture ),
                null );

            m_StaticProperties["DefaultThreadCurrentCulture"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Globalization_CultureInfo( CultureInfo.DefaultThreadCurrentCulture ),
                x => CultureInfo.DefaultThreadCurrentCulture = WrapperHelper.UnwrapObject < CultureInfo >( x ) );

            m_StaticProperties["DefaultThreadCurrentUICulture"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Globalization_CultureInfo( CultureInfo.DefaultThreadCurrentUICulture ),
                x => CultureInfo.DefaultThreadCurrentUICulture = WrapperHelper.UnwrapObject < CultureInfo >( x ) );

            m_StaticProperties["ReadOnly"] = new BSFunctionReference(
                new BSFunction(
                    "function ReadOnly(ci)",
                    a => new BSWrapperObject_System_Globalization_CultureInfo(
                        CultureInfo.ReadOnly( WrapperHelper.UnwrapObject < CultureInfo >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetCultureInfo"] = new BSFunctionReference(
                new BSFunction(
                    "function GetCultureInfo(culture)",
                    a => new BSWrapperObject_System_Globalization_CultureInfo(
                        CultureInfo.GetCultureInfo( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetCultureInfo"] = new BSFunctionReference(
                new BSFunction(
                    "function GetCultureInfo(name)",
                    a => new BSWrapperObject_System_Globalization_CultureInfo(
                        CultureInfo.GetCultureInfo( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetCultureInfo"] = new BSFunctionReference(
                new BSFunction(
                    "function GetCultureInfo(name, altName)",
                    a => new BSWrapperObject_System_Globalization_CultureInfo(
                        CultureInfo.GetCultureInfo(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["GetCultureInfoByIetfLanguageTag"] = new BSFunctionReference(
                new BSFunction(
                    "function GetCultureInfoByIetfLanguageTag(name)",
                    a => new BSWrapperObject_System_Globalization_CultureInfo(
                        CultureInfo.GetCultureInfoByIetfLanguageTag( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["CreateSpecificCulture"] = new BSFunctionReference(
                new BSFunction(
                    "function CreateSpecificCulture(name)",
                    a => new BSWrapperObject_System_Globalization_CultureInfo(
                        CultureInfo.CreateSpecificCulture( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Globalization_CultureInfo()
        {
            WrapperHelper.AddRecastWrapper < CultureInfo >(
                o => new BSWrapperObject_System_Globalization_CultureInfo( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Globalization_Calendar : BSWrapperObject < Calendar >

    {
        #region Public

        public BSWrapperObject_System_Globalization_Calendar( Calendar obj ) : base( obj )
        {
            m_Properties["MinSupportedDateTime"] = new BSReflectionReference(
                () => new BSWrapperObject_System_DateTime( m_InternalObject.MinSupportedDateTime ),
                null );

            m_Properties["MaxSupportedDateTime"] = new BSReflectionReference(
                () => new BSWrapperObject_System_DateTime( m_InternalObject.MaxSupportedDateTime ),
                null );

            m_Properties["IsReadOnly"] = new BSReflectionReference(
                () => m_InternalObject.IsReadOnly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["TwoDigitYearMax"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.TwoDigitYearMax ),
                x => m_InternalObject.TwoDigitYearMax = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["Clone"] = new BSFunctionReference(
                new BSFunction(
                    "function Clone()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.Clone() ),
                    0 ) );

            m_Properties["AddMilliseconds"] = new BSFunctionReference(
                new BSFunction(
                    "function AddMilliseconds(time, milliseconds)",
                    a => new BSWrapperObject_System_DateTime(
                        m_InternalObject.AddMilliseconds(
                            WrapperHelper.UnwrapObject < DateTime >( a[0] ),
                            WrapperHelper.UnwrapObject < double >( a[1] ) ) ),
                    2 ) );

            m_Properties["AddDays"] = new BSFunctionReference(
                new BSFunction(
                    "function AddDays(time, days)",
                    a => new BSWrapperObject_System_DateTime(
                        m_InternalObject.AddDays(
                            WrapperHelper.UnwrapObject < DateTime >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_Properties["AddHours"] = new BSFunctionReference(
                new BSFunction(
                    "function AddHours(time, hours)",
                    a => new BSWrapperObject_System_DateTime(
                        m_InternalObject.AddHours(
                            WrapperHelper.UnwrapObject < DateTime >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_Properties["AddMinutes"] = new BSFunctionReference(
                new BSFunction(
                    "function AddMinutes(time, minutes)",
                    a => new BSWrapperObject_System_DateTime(
                        m_InternalObject.AddMinutes(
                            WrapperHelper.UnwrapObject < DateTime >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_Properties["AddMonths"] = new BSFunctionReference(
                new BSFunction(
                    "function AddMonths(time, months)",
                    a => new BSWrapperObject_System_DateTime(
                        m_InternalObject.AddMonths(
                            WrapperHelper.UnwrapObject < DateTime >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_Properties["AddSeconds"] = new BSFunctionReference(
                new BSFunction(
                    "function AddSeconds(time, seconds)",
                    a => new BSWrapperObject_System_DateTime(
                        m_InternalObject.AddSeconds(
                            WrapperHelper.UnwrapObject < DateTime >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_Properties["AddWeeks"] = new BSFunctionReference(
                new BSFunction(
                    "function AddWeeks(time, weeks)",
                    a => new BSWrapperObject_System_DateTime(
                        m_InternalObject.AddWeeks(
                            WrapperHelper.UnwrapObject < DateTime >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_Properties["AddYears"] = new BSFunctionReference(
                new BSFunction(
                    "function AddYears(time, years)",
                    a => new BSWrapperObject_System_DateTime(
                        m_InternalObject.AddYears(
                            WrapperHelper.UnwrapObject < DateTime >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_Properties["GetDayOfMonth"] = new BSFunctionReference(
                new BSFunction(
                    "function GetDayOfMonth(time)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetDayOfMonth( WrapperHelper.UnwrapObject < DateTime >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetDayOfYear"] = new BSFunctionReference(
                new BSFunction(
                    "function GetDayOfYear(time)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetDayOfYear( WrapperHelper.UnwrapObject < DateTime >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetDaysInMonth"] = new BSFunctionReference(
                new BSFunction(
                    "function GetDaysInMonth(year, month)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetDaysInMonth(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_Properties["GetDaysInMonth"] = new BSFunctionReference(
                new BSFunction(
                    "function GetDaysInMonth(year, month, era)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetDaysInMonth(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) ) ),
                    3 ) );

            m_Properties["GetDaysInYear"] = new BSFunctionReference(
                new BSFunction(
                    "function GetDaysInYear(year)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetDaysInYear( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetDaysInYear"] = new BSFunctionReference(
                new BSFunction(
                    "function GetDaysInYear(year, era)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetDaysInYear(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_Properties["GetEra"] = new BSFunctionReference(
                new BSFunction(
                    "function GetEra(time)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetEra( WrapperHelper.UnwrapObject < DateTime >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetHour"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHour(time)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetHour( WrapperHelper.UnwrapObject < DateTime >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetMilliseconds"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMilliseconds(time)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetMilliseconds(
                            WrapperHelper.UnwrapObject < DateTime >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetMinute"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMinute(time)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetMinute( WrapperHelper.UnwrapObject < DateTime >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetMonth"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMonth(time)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetMonth( WrapperHelper.UnwrapObject < DateTime >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetMonthsInYear"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMonthsInYear(year)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetMonthsInYear( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetMonthsInYear"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMonthsInYear(year, era)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetMonthsInYear(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_Properties["GetSecond"] = new BSFunctionReference(
                new BSFunction(
                    "function GetSecond(time)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetSecond( WrapperHelper.UnwrapObject < DateTime >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetYear"] = new BSFunctionReference(
                new BSFunction(
                    "function GetYear(time)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetYear( WrapperHelper.UnwrapObject < DateTime >( a[0] ) ) ),
                    1 ) );

            m_Properties["IsLeapDay"] = new BSFunctionReference(
                new BSFunction(
                    "function IsLeapDay(year, month, day)",
                    a => m_InternalObject.IsLeapDay(
                        WrapperHelper.UnwrapObject < int >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ),
                        WrapperHelper.UnwrapObject < int >( a[2] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    3 ) );

            m_Properties["IsLeapDay"] = new BSFunctionReference(
                new BSFunction(
                    "function IsLeapDay(year, month, day, era)",
                    a => m_InternalObject.IsLeapDay(
                        WrapperHelper.UnwrapObject < int >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ),
                        WrapperHelper.UnwrapObject < int >( a[2] ),
                        WrapperHelper.UnwrapObject < int >( a[3] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    4 ) );

            m_Properties["IsLeapMonth"] = new BSFunctionReference(
                new BSFunction(
                    "function IsLeapMonth(year, month)",
                    a => m_InternalObject.IsLeapMonth(
                        WrapperHelper.UnwrapObject < int >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_Properties["IsLeapMonth"] = new BSFunctionReference(
                new BSFunction(
                    "function IsLeapMonth(year, month, era)",
                    a => m_InternalObject.IsLeapMonth(
                        WrapperHelper.UnwrapObject < int >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ),
                        WrapperHelper.UnwrapObject < int >( a[2] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    3 ) );

            m_Properties["GetLeapMonth"] = new BSFunctionReference(
                new BSFunction(
                    "function GetLeapMonth(year)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetLeapMonth( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetLeapMonth"] = new BSFunctionReference(
                new BSFunction(
                    "function GetLeapMonth(year, era)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetLeapMonth(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_Properties["IsLeapYear"] = new BSFunctionReference(
                new BSFunction(
                    "function IsLeapYear(year)",
                    a => m_InternalObject.IsLeapYear( WrapperHelper.UnwrapObject < int >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["IsLeapYear"] = new BSFunctionReference(
                new BSFunction(
                    "function IsLeapYear(year, era)",
                    a => m_InternalObject.IsLeapYear(
                        WrapperHelper.UnwrapObject < int >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_Properties["ToDateTime"] = new BSFunctionReference(
                new BSFunction(
                    "function ToDateTime(year, month, day, hour, minute, second, millisecond)",
                    a => new BSWrapperObject_System_DateTime(
                        m_InternalObject.ToDateTime(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ),
                            WrapperHelper.UnwrapObject < int >( a[5] ),
                            WrapperHelper.UnwrapObject < int >( a[6] ) ) ),
                    7 ) );

            m_Properties["ToDateTime"] = new BSFunctionReference(
                new BSFunction(
                    "function ToDateTime(year, month, day, hour, minute, second, millisecond, era)",
                    a => new BSWrapperObject_System_DateTime(
                        m_InternalObject.ToDateTime(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ),
                            WrapperHelper.UnwrapObject < int >( a[5] ),
                            WrapperHelper.UnwrapObject < int >( a[6] ),
                            WrapperHelper.UnwrapObject < int >( a[7] ) ) ),
                    8 ) );

            m_Properties["ToFourDigitYear"] = new BSFunctionReference(
                new BSFunction(
                    "function ToFourDigitYear(year)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.ToFourDigitYear( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Globalization_Calendar : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Globalization_Calendar() : base( typeof( Calendar ) )
        {
            m_StaticProperties["CurrentEra"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Calendar.CurrentEra ),
                null );

            m_StaticProperties["ReadOnly"] = new BSFunctionReference(
                new BSFunction(
                    "function ReadOnly(calendar)",
                    a => new BSWrapperObject_System_Globalization_Calendar(
                        Calendar.ReadOnly( WrapperHelper.UnwrapObject < Calendar >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Globalization_Calendar()
        {
            WrapperHelper.AddRecastWrapper < Calendar >( o => new BSWrapperObject_System_Globalization_Calendar( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_DateTime : BSWrapperObject < DateTime >

    {
        #region Public

        public BSWrapperObject_System_DateTime( DateTime obj ) : base( obj )
        {
            m_Properties["Date"] = new BSReflectionReference(
                () => new BSWrapperObject_System_DateTime( m_InternalObject.Date ),
                null );

            m_Properties["Day"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Day ),
                null );

            m_Properties["DayOfYear"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.DayOfYear ),
                null );

            m_Properties["Hour"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Hour ),
                null );

            m_Properties["Millisecond"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Millisecond ),
                null );

            m_Properties["Minute"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Minute ),
                null );

            m_Properties["Month"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Month ),
                null );

            m_Properties["Second"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Second ),
                null );

            m_Properties["Ticks"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Ticks ),
                null );

            m_Properties["TimeOfDay"] = new BSReflectionReference(
                () => new BSWrapperObject_System_TimeSpan( m_InternalObject.TimeOfDay ),
                null );

            m_Properties["Year"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Year ),
                null );

            m_Properties["Add"] = new BSFunctionReference(
                new BSFunction(
                    "function Add(value)",
                    a => new BSWrapperObject_System_DateTime(
                        m_InternalObject.Add( WrapperHelper.UnwrapObject < TimeSpan >( a[0] ) ) ),
                    1 ) );

            m_Properties["AddDays"] = new BSFunctionReference(
                new BSFunction(
                    "function AddDays(value)",
                    a => new BSWrapperObject_System_DateTime(
                        m_InternalObject.AddDays( WrapperHelper.UnwrapObject < double >( a[0] ) ) ),
                    1 ) );

            m_Properties["AddHours"] = new BSFunctionReference(
                new BSFunction(
                    "function AddHours(value)",
                    a => new BSWrapperObject_System_DateTime(
                        m_InternalObject.AddHours( WrapperHelper.UnwrapObject < double >( a[0] ) ) ),
                    1 ) );

            m_Properties["AddMilliseconds"] = new BSFunctionReference(
                new BSFunction(
                    "function AddMilliseconds(value)",
                    a => new BSWrapperObject_System_DateTime(
                        m_InternalObject.AddMilliseconds( WrapperHelper.UnwrapObject < double >( a[0] ) ) ),
                    1 ) );

            m_Properties["AddMinutes"] = new BSFunctionReference(
                new BSFunction(
                    "function AddMinutes(value)",
                    a => new BSWrapperObject_System_DateTime(
                        m_InternalObject.AddMinutes( WrapperHelper.UnwrapObject < double >( a[0] ) ) ),
                    1 ) );

            m_Properties["AddMonths"] = new BSFunctionReference(
                new BSFunction(
                    "function AddMonths(months)",
                    a => new BSWrapperObject_System_DateTime(
                        m_InternalObject.AddMonths( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["AddSeconds"] = new BSFunctionReference(
                new BSFunction(
                    "function AddSeconds(value)",
                    a => new BSWrapperObject_System_DateTime(
                        m_InternalObject.AddSeconds( WrapperHelper.UnwrapObject < double >( a[0] ) ) ),
                    1 ) );

            m_Properties["AddTicks"] = new BSFunctionReference(
                new BSFunction(
                    "function AddTicks(value)",
                    a => new BSWrapperObject_System_DateTime(
                        m_InternalObject.AddTicks( WrapperHelper.UnwrapObject < long >( a[0] ) ) ),
                    1 ) );

            m_Properties["AddYears"] = new BSFunctionReference(
                new BSFunction(
                    "function AddYears(value)",
                    a => new BSWrapperObject_System_DateTime(
                        m_InternalObject.AddYears( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTo(value)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.CompareTo( WrapperHelper.UnwrapObject < object >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTo(value)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.CompareTo( WrapperHelper.UnwrapObject < DateTime >( a[0] ) ) ),
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(value)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(value)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < DateTime >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["IsDaylightSavingTime"] = new BSFunctionReference(
                new BSFunction(
                    "function IsDaylightSavingTime()",
                    a => m_InternalObject.IsDaylightSavingTime() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["ToBinary"] = new BSFunctionReference(
                new BSFunction(
                    "function ToBinary()",
                    a => new BSObject( ( decimal ) m_InternalObject.ToBinary() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Subtract"] = new BSFunctionReference(
                new BSFunction(
                    "function Subtract(value)",
                    a => new BSWrapperObject_System_TimeSpan(
                        m_InternalObject.Subtract( WrapperHelper.UnwrapObject < DateTime >( a[0] ) ) ),
                    1 ) );

            m_Properties["Subtract"] = new BSFunctionReference(
                new BSFunction(
                    "function Subtract(value)",
                    a => new BSWrapperObject_System_DateTime(
                        m_InternalObject.Subtract( WrapperHelper.UnwrapObject < TimeSpan >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToOADate"] = new BSFunctionReference(
                new BSFunction(
                    "function ToOADate()",
                    a => new BSObject( ( decimal ) m_InternalObject.ToOADate() ),
                    0 ) );

            m_Properties["ToFileTime"] = new BSFunctionReference(
                new BSFunction(
                    "function ToFileTime()",
                    a => new BSObject( ( decimal ) m_InternalObject.ToFileTime() ),
                    0 ) );

            m_Properties["ToFileTimeUtc"] = new BSFunctionReference(
                new BSFunction(
                    "function ToFileTimeUtc()",
                    a => new BSObject( ( decimal ) m_InternalObject.ToFileTimeUtc() ),
                    0 ) );

            m_Properties["ToLocalTime"] = new BSFunctionReference(
                new BSFunction(
                    "function ToLocalTime()",
                    a => new BSWrapperObject_System_DateTime( m_InternalObject.ToLocalTime() ),
                    0 ) );

            m_Properties["ToLongDateString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToLongDateString()",
                    a => new BSObject( m_InternalObject.ToLongDateString() ),
                    0 ) );

            m_Properties["ToLongTimeString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToLongTimeString()",
                    a => new BSObject( m_InternalObject.ToLongTimeString() ),
                    0 ) );

            m_Properties["ToShortDateString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToShortDateString()",
                    a => new BSObject( m_InternalObject.ToShortDateString() ),
                    0 ) );

            m_Properties["ToShortTimeString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToShortTimeString()",
                    a => new BSObject( m_InternalObject.ToShortTimeString() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format)",
                    a => new BSObject( m_InternalObject.ToString( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(provider)",
                    a => new BSObject(
                        m_InternalObject.ToString( WrapperHelper.UnwrapObject < IFormatProvider >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format, provider)",
                    a => new BSObject(
                        m_InternalObject.ToString(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < IFormatProvider >( a[1] ) ) ),
                    2 ) );

            m_Properties["ToUniversalTime"] = new BSFunctionReference(
                new BSFunction(
                    "function ToUniversalTime()",
                    a => new BSWrapperObject_System_DateTime( m_InternalObject.ToUniversalTime() ),
                    0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_DateTime : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_DateTime() : base( typeof( DateTime ) )
        {
            m_StaticProperties["Now"] = new BSReflectionReference(
                () => new BSWrapperObject_System_DateTime( DateTime.Now ),
                null );

            m_StaticProperties["UtcNow"] = new BSReflectionReference(
                () => new BSWrapperObject_System_DateTime( DateTime.UtcNow ),
                null );

            m_StaticProperties["Today"] = new BSReflectionReference(
                () => new BSWrapperObject_System_DateTime( DateTime.Today ),
                null );

            m_StaticProperties["MinValue"] = new BSReflectionReference(
                () => new BSWrapperObject_System_DateTime( DateTime.MinValue ),
                null );

            m_StaticProperties["MaxValue"] = new BSReflectionReference(
                () => new BSWrapperObject_System_DateTime( DateTime.MaxValue ),
                null );

            m_StaticProperties["Compare"] = new BSFunctionReference(
                new BSFunction(
                    "function Compare(t1, t2)",
                    a => new BSObject(
                        ( decimal ) DateTime.Compare(
                            WrapperHelper.UnwrapObject < DateTime >( a[0] ),
                            WrapperHelper.UnwrapObject < DateTime >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["DaysInMonth"] = new BSFunctionReference(
                new BSFunction(
                    "function DaysInMonth(year, month)",
                    a => new BSObject(
                        ( decimal ) DateTime.DaysInMonth(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(t1, t2)",
                    a => DateTime.Equals(
                        WrapperHelper.UnwrapObject < DateTime >( a[0] ),
                        WrapperHelper.UnwrapObject < DateTime >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["FromBinary"] = new BSFunctionReference(
                new BSFunction(
                    "function FromBinary(dateData)",
                    a => new BSWrapperObject_System_DateTime(
                        DateTime.FromBinary( WrapperHelper.UnwrapObject < long >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["FromFileTime"] = new BSFunctionReference(
                new BSFunction(
                    "function FromFileTime(fileTime)",
                    a => new BSWrapperObject_System_DateTime(
                        DateTime.FromFileTime( WrapperHelper.UnwrapObject < long >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["FromFileTimeUtc"] = new BSFunctionReference(
                new BSFunction(
                    "function FromFileTimeUtc(fileTime)",
                    a => new BSWrapperObject_System_DateTime(
                        DateTime.FromFileTimeUtc( WrapperHelper.UnwrapObject < long >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["FromOADate"] = new BSFunctionReference(
                new BSFunction(
                    "function FromOADate(d)",
                    a => new BSWrapperObject_System_DateTime(
                        DateTime.FromOADate( WrapperHelper.UnwrapObject < double >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["IsLeapYear"] = new BSFunctionReference(
                new BSFunction(
                    "function IsLeapYear(year)",
                    a => DateTime.IsLeapYear( WrapperHelper.UnwrapObject < int >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["Parse"] = new BSFunctionReference(
                new BSFunction(
                    "function Parse(s)",
                    a => new BSWrapperObject_System_DateTime(
                        DateTime.Parse( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Parse"] = new BSFunctionReference(
                new BSFunction(
                    "function Parse(s, provider)",
                    a => new BSWrapperObject_System_DateTime(
                        DateTime.Parse(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < IFormatProvider >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["ParseExact"] = new BSFunctionReference(
                new BSFunction(
                    "function ParseExact(s, format, provider)",
                    a => new BSWrapperObject_System_DateTime(
                        DateTime.ParseExact(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < IFormatProvider >( a[2] ) ) ),
                    3 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_DateTime()
        {
            WrapperHelper.AddRecastWrapper < DateTime >( o => new BSWrapperObject_System_DateTime( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_TimeSpan : BSWrapperObject < TimeSpan >

    {
        #region Public

        public BSWrapperObject_System_TimeSpan( TimeSpan obj ) : base( obj )
        {
            m_Properties["Ticks"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Ticks ),
                null );

            m_Properties["Days"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Days ),
                null );

            m_Properties["Hours"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Hours ),
                null );

            m_Properties["Milliseconds"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Milliseconds ),
                null );

            m_Properties["Minutes"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Minutes ),
                null );

            m_Properties["Seconds"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Seconds ),
                null );

            m_Properties["TotalDays"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.TotalDays ),
                null );

            m_Properties["TotalHours"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.TotalHours ),
                null );

            m_Properties["TotalMilliseconds"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.TotalMilliseconds ),
                null );

            m_Properties["TotalMinutes"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.TotalMinutes ),
                null );

            m_Properties["TotalSeconds"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.TotalSeconds ),
                null );

            m_Properties["Add"] = new BSFunctionReference(
                new BSFunction(
                    "function Add(ts)",
                    a => new BSWrapperObject_System_TimeSpan(
                        m_InternalObject.Add( WrapperHelper.UnwrapObject < TimeSpan >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTo(value)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.CompareTo( WrapperHelper.UnwrapObject < object >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTo(value)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.CompareTo( WrapperHelper.UnwrapObject < TimeSpan >( a[0] ) ) ),
                    1 ) );

            m_Properties["Duration"] = new BSFunctionReference(
                new BSFunction(
                    "function Duration()",
                    a => new BSWrapperObject_System_TimeSpan( m_InternalObject.Duration() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(value)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < TimeSpan >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Negate"] = new BSFunctionReference(
                new BSFunction(
                    "function Negate()",
                    a => new BSWrapperObject_System_TimeSpan( m_InternalObject.Negate() ),
                    0 ) );

            m_Properties["Subtract"] = new BSFunctionReference(
                new BSFunction(
                    "function Subtract(ts)",
                    a => new BSWrapperObject_System_TimeSpan(
                        m_InternalObject.Subtract( WrapperHelper.UnwrapObject < TimeSpan >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format)",
                    a => new BSObject( m_InternalObject.ToString( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format, formatProvider)",
                    a => new BSObject(
                        m_InternalObject.ToString(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < IFormatProvider >( a[1] ) ) ),
                    2 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_TimeSpan : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_TimeSpan() : base( typeof( TimeSpan ) )
        {
            m_StaticProperties["TicksPerMillisecond"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) TimeSpan.TicksPerMillisecond ),
                null );

            m_StaticProperties["TicksPerSecond"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) TimeSpan.TicksPerSecond ),
                null );

            m_StaticProperties["TicksPerMinute"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) TimeSpan.TicksPerMinute ),
                null );

            m_StaticProperties["TicksPerHour"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) TimeSpan.TicksPerHour ),
                null );

            m_StaticProperties["TicksPerDay"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) TimeSpan.TicksPerDay ),
                null );

            m_StaticProperties["Zero"] = new BSReflectionReference(
                () => new BSWrapperObject_System_TimeSpan( TimeSpan.Zero ),
                null );

            m_StaticProperties["MaxValue"] = new BSReflectionReference(
                () => new BSWrapperObject_System_TimeSpan( TimeSpan.MaxValue ),
                null );

            m_StaticProperties["MinValue"] = new BSReflectionReference(
                () => new BSWrapperObject_System_TimeSpan( TimeSpan.MinValue ),
                null );

            m_StaticProperties["Compare"] = new BSFunctionReference(
                new BSFunction(
                    "function Compare(t1, t2)",
                    a => new BSObject(
                        ( decimal ) TimeSpan.Compare(
                            WrapperHelper.UnwrapObject < TimeSpan >( a[0] ),
                            WrapperHelper.UnwrapObject < TimeSpan >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["FromDays"] = new BSFunctionReference(
                new BSFunction(
                    "function FromDays(value)",
                    a => new BSWrapperObject_System_TimeSpan(
                        TimeSpan.FromDays( WrapperHelper.UnwrapObject < double >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(t1, t2)",
                    a => TimeSpan.Equals(
                        WrapperHelper.UnwrapObject < TimeSpan >( a[0] ),
                        WrapperHelper.UnwrapObject < TimeSpan >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["FromHours"] = new BSFunctionReference(
                new BSFunction(
                    "function FromHours(value)",
                    a => new BSWrapperObject_System_TimeSpan(
                        TimeSpan.FromHours( WrapperHelper.UnwrapObject < double >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["FromMilliseconds"] = new BSFunctionReference(
                new BSFunction(
                    "function FromMilliseconds(value)",
                    a => new BSWrapperObject_System_TimeSpan(
                        TimeSpan.FromMilliseconds( WrapperHelper.UnwrapObject < double >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["FromMinutes"] = new BSFunctionReference(
                new BSFunction(
                    "function FromMinutes(value)",
                    a => new BSWrapperObject_System_TimeSpan(
                        TimeSpan.FromMinutes( WrapperHelper.UnwrapObject < double >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["FromSeconds"] = new BSFunctionReference(
                new BSFunction(
                    "function FromSeconds(value)",
                    a => new BSWrapperObject_System_TimeSpan(
                        TimeSpan.FromSeconds( WrapperHelper.UnwrapObject < double >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["FromTicks"] = new BSFunctionReference(
                new BSFunction(
                    "function FromTicks(value)",
                    a => new BSWrapperObject_System_TimeSpan(
                        TimeSpan.FromTicks( WrapperHelper.UnwrapObject < long >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Parse"] = new BSFunctionReference(
                new BSFunction(
                    "function Parse(s)",
                    a => new BSWrapperObject_System_TimeSpan(
                        TimeSpan.Parse( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Parse"] = new BSFunctionReference(
                new BSFunction(
                    "function Parse(input, formatProvider)",
                    a => new BSWrapperObject_System_TimeSpan(
                        TimeSpan.Parse(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < IFormatProvider >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["ParseExact"] = new BSFunctionReference(
                new BSFunction(
                    "function ParseExact(input, format, formatProvider)",
                    a => new BSWrapperObject_System_TimeSpan(
                        TimeSpan.ParseExact(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < IFormatProvider >( a[2] ) ) ),
                    3 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_TimeSpan()
        {
            WrapperHelper.AddRecastWrapper < TimeSpan >( o => new BSWrapperObject_System_TimeSpan( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Globalization_TextInfo : BSWrapperObject < TextInfo >

    {
        #region Public

        public BSWrapperObject_System_Globalization_TextInfo( TextInfo obj ) : base( obj )
        {
            m_Properties["ANSICodePage"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.ANSICodePage ),
                null );

            m_Properties["OEMCodePage"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.OEMCodePage ),
                null );

            m_Properties["MacCodePage"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.MacCodePage ),
                null );

            m_Properties["EBCDICCodePage"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.EBCDICCodePage ),
                null );

            m_Properties["LCID"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.LCID ),
                null );

            m_Properties["CultureName"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.CultureName ),
                null );

            m_Properties["IsReadOnly"] = new BSReflectionReference(
                () => m_InternalObject.IsReadOnly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["ListSeparator"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.ListSeparator ),
                x => m_InternalObject.ListSeparator = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["IsRightToLeft"] = new BSReflectionReference(
                () => m_InternalObject.IsRightToLeft ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["Clone"] = new BSFunctionReference(
                new BSFunction(
                    "function Clone()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.Clone() ),
                    0 ) );

            m_Properties["ToLower"] = new BSFunctionReference(
                new BSFunction(
                    "function ToLower(c)",
                    a => new BSWrapperObject_System_Char(
                        m_InternalObject.ToLower( WrapperHelper.UnwrapObject < char >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToLower"] = new BSFunctionReference(
                new BSFunction(
                    "function ToLower(str)",
                    a => new BSObject( m_InternalObject.ToLower( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToUpper"] = new BSFunctionReference(
                new BSFunction(
                    "function ToUpper(c)",
                    a => new BSWrapperObject_System_Char(
                        m_InternalObject.ToUpper( WrapperHelper.UnwrapObject < char >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToUpper"] = new BSFunctionReference(
                new BSFunction(
                    "function ToUpper(str)",
                    a => new BSObject( m_InternalObject.ToUpper( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["ToTitleCase"] = new BSFunctionReference(
                new BSFunction(
                    "function ToTitleCase(str)",
                    a => new BSObject( m_InternalObject.ToTitleCase( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Globalization_TextInfo : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Globalization_TextInfo() : base( typeof( TextInfo ) )
        {
            m_StaticProperties["ReadOnly"] = new BSFunctionReference(
                new BSFunction(
                    "function ReadOnly(textInfo)",
                    a => new BSWrapperObject_System_Globalization_TextInfo(
                        TextInfo.ReadOnly( WrapperHelper.UnwrapObject < TextInfo >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Globalization_TextInfo()
        {
            WrapperHelper.AddRecastWrapper < TextInfo >( o => new BSWrapperObject_System_Globalization_TextInfo( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Globalization_CompareInfo : BSWrapperObject < CompareInfo >

    {
        #region Public

        public BSWrapperObject_System_Globalization_CompareInfo( CompareInfo obj ) : base( obj )
        {
            m_Properties["Name"] = new BSReflectionReference( () => new BSObject( m_InternalObject.Name ), null );

            m_Properties["LCID"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.LCID ),
                null );

            m_Properties["Version"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Globalization_SortVersion( m_InternalObject.Version ),
                null );

            m_Properties["Compare"] = new BSFunctionReference(
                new BSFunction(
                    "function Compare(string1, string2)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.Compare(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ) ) ),
                    2 ) );

            m_Properties["Compare"] = new BSFunctionReference(
                new BSFunction(
                    "function Compare(string1, offset1, length1, string2, offset2, length2)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.Compare(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < string >( a[3] ),
                            WrapperHelper.UnwrapObject < int >( a[4] ),
                            WrapperHelper.UnwrapObject < int >( a[5] ) ) ),
                    6 ) );

            m_Properties["Compare"] = new BSFunctionReference(
                new BSFunction(
                    "function Compare(string1, offset1, string2, offset2)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.Compare(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < string >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) ) ),
                    4 ) );

            m_Properties["IsPrefix"] = new BSFunctionReference(
                new BSFunction(
                    "function IsPrefix(source, prefix)",
                    a => m_InternalObject.IsPrefix(
                        WrapperHelper.UnwrapObject < string >( a[0] ),
                        WrapperHelper.UnwrapObject < string >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_Properties["IsSuffix"] = new BSFunctionReference(
                new BSFunction(
                    "function IsSuffix(source, suffix)",
                    a => m_InternalObject.IsSuffix(
                        WrapperHelper.UnwrapObject < string >( a[0] ),
                        WrapperHelper.UnwrapObject < string >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_Properties["IndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function IndexOf(source, value)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.IndexOf(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < char >( a[1] ) ) ),
                    2 ) );

            m_Properties["IndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function IndexOf(source, value)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.IndexOf(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ) ) ),
                    2 ) );

            m_Properties["IndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function IndexOf(source, value, startIndex)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.IndexOf(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < char >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) ) ),
                    3 ) );

            m_Properties["IndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function IndexOf(source, value, startIndex)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.IndexOf(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) ) ),
                    3 ) );

            m_Properties["IndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function IndexOf(source, value, startIndex, count)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.IndexOf(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < char >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) ) ),
                    4 ) );

            m_Properties["IndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function IndexOf(source, value, startIndex, count)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.IndexOf(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) ) ),
                    4 ) );

            m_Properties["LastIndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function LastIndexOf(source, value)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.LastIndexOf(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < char >( a[1] ) ) ),
                    2 ) );

            m_Properties["LastIndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function LastIndexOf(source, value)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.LastIndexOf(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ) ) ),
                    2 ) );

            m_Properties["LastIndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function LastIndexOf(source, value, startIndex)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.LastIndexOf(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < char >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) ) ),
                    3 ) );

            m_Properties["LastIndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function LastIndexOf(source, value, startIndex)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.LastIndexOf(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) ) ),
                    3 ) );

            m_Properties["LastIndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function LastIndexOf(source, value, startIndex, count)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.LastIndexOf(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < char >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) ) ),
                    4 ) );

            m_Properties["LastIndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function LastIndexOf(source, value, startIndex, count)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.LastIndexOf(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) ) ),
                    4 ) );

            m_Properties["GetSortKey"] = new BSFunctionReference(
                new BSFunction(
                    "function GetSortKey(source)",
                    a => new BSWrapperObject_System_Globalization_SortKey(
                        m_InternalObject.GetSortKey( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(value)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Globalization_CompareInfo : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Globalization_CompareInfo() : base( typeof( CompareInfo ) )
        {
            m_StaticProperties["GetCompareInfo"] = new BSFunctionReference(
                new BSFunction(
                    "function GetCompareInfo(culture, assembly)",
                    a => new BSWrapperObject_System_Globalization_CompareInfo(
                        CompareInfo.GetCompareInfo(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Assembly >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["GetCompareInfo"] = new BSFunctionReference(
                new BSFunction(
                    "function GetCompareInfo(name, assembly)",
                    a => new BSWrapperObject_System_Globalization_CompareInfo(
                        CompareInfo.GetCompareInfo(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Assembly >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["GetCompareInfo"] = new BSFunctionReference(
                new BSFunction(
                    "function GetCompareInfo(culture)",
                    a => new BSWrapperObject_System_Globalization_CompareInfo(
                        CompareInfo.GetCompareInfo( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetCompareInfo"] = new BSFunctionReference(
                new BSFunction(
                    "function GetCompareInfo(name)",
                    a => new BSWrapperObject_System_Globalization_CompareInfo(
                        CompareInfo.GetCompareInfo( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["IsSortable"] = new BSFunctionReference(
                new BSFunction(
                    "function IsSortable(ch)",
                    a => CompareInfo.IsSortable( WrapperHelper.UnwrapObject < char >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["IsSortable"] = new BSFunctionReference(
                new BSFunction(
                    "function IsSortable(text)",
                    a => CompareInfo.IsSortable( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Globalization_CompareInfo()
        {
            WrapperHelper.AddRecastWrapper < CompareInfo >(
                o => new BSWrapperObject_System_Globalization_CompareInfo( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Globalization_SortVersion : BSWrapperObject < SortVersion >

    {
        #region Public

        public BSWrapperObject_System_Globalization_SortVersion( SortVersion obj ) : base( obj )
        {
            m_Properties["FullVersion"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.FullVersion ),
                null );

            m_Properties["SortId"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Guid( m_InternalObject.SortId ),
                null );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < SortVersion >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Globalization_SortVersion : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Globalization_SortVersion() : base( typeof( SortVersion ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Globalization_SortVersion()
        {
            WrapperHelper.AddRecastWrapper < SortVersion >(
                o => new BSWrapperObject_System_Globalization_SortVersion( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Guid : BSWrapperObject < Guid >

    {
        #region Public

        public BSWrapperObject_System_Guid( Guid obj ) : base( obj )
        {
            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(o)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(g)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < Guid >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["CompareTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTo(value)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.CompareTo( WrapperHelper.UnwrapObject < object >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTo(value)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.CompareTo( WrapperHelper.UnwrapObject < Guid >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format)",
                    a => new BSObject( m_InternalObject.ToString( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(format, provider)",
                    a => new BSObject(
                        m_InternalObject.ToString(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < IFormatProvider >( a[1] ) ) ),
                    2 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Guid : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Guid() : base( typeof( Guid ) )
        {
            m_StaticProperties["Empty"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Guid( Guid.Empty ),
                null );

            m_StaticProperties["Parse"] = new BSFunctionReference(
                new BSFunction(
                    "function Parse(input)",
                    a => new BSWrapperObject_System_Guid( Guid.Parse( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["ParseExact"] = new BSFunctionReference(
                new BSFunction(
                    "function ParseExact(input, format)",
                    a => new BSWrapperObject_System_Guid(
                        Guid.ParseExact(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["NewGuid"] = new BSFunctionReference(
                new BSFunction( "function NewGuid()", a => new BSWrapperObject_System_Guid( Guid.NewGuid() ), 0 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Guid()
        {
            WrapperHelper.AddRecastWrapper < Guid >( o => new BSWrapperObject_System_Guid( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Globalization_SortKey : BSWrapperObject < SortKey >

    {
        #region Public

        public BSWrapperObject_System_Globalization_SortKey( SortKey obj ) : base( obj )
        {
            m_Properties["OriginalString"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.OriginalString ),
                null );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(value)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Globalization_SortKey : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Globalization_SortKey() : base( typeof( SortKey ) )
        {
            m_StaticProperties["Compare"] = new BSFunctionReference(
                new BSFunction(
                    "function Compare(sortkey1, sortkey2)",
                    a => new BSObject(
                        ( decimal ) SortKey.Compare(
                            WrapperHelper.UnwrapObject < SortKey >( a[0] ),
                            WrapperHelper.UnwrapObject < SortKey >( a[1] ) ) ),
                    2 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Globalization_SortKey()
        {
            WrapperHelper.AddRecastWrapper < SortKey >( o => new BSWrapperObject_System_Globalization_SortKey( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Reflection_Assembly : BSWrapperObject < Assembly >

    {
        #region Public

        public BSWrapperObject_System_Reflection_Assembly( Assembly obj ) : base( obj )
        {
            m_Properties["CodeBase"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.CodeBase ),
                null );

            m_Properties["EscapedCodeBase"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.EscapedCodeBase ),
                null );

            m_Properties["FullName"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.FullName ),
                null );

            m_Properties["EntryPoint"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_MethodInfo( m_InternalObject.EntryPoint ),
                null );

            m_Properties["Location"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.Location ),
                null );

            m_Properties["ImageRuntimeVersion"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.ImageRuntimeVersion ),
                null );

            m_Properties["HostContext"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.HostContext ),
                null );

            m_Properties["ReflectionOnly"] = new BSReflectionReference(
                () => m_InternalObject.ReflectionOnly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsFullyTrusted"] = new BSReflectionReference(
                () => m_InternalObject.IsFullyTrusted ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["ManifestModule"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_Module( m_InternalObject.ManifestModule ),
                null );

            m_Properties["GlobalAssemblyCache"] = new BSReflectionReference(
                () => m_InternalObject.GlobalAssemblyCache ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsDynamic"] = new BSReflectionReference(
                () => m_InternalObject.IsDynamic ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["GetObjectData"] = new BSFunctionReference(
                new BSFunction(
                    "function GetObjectData(info, context)",
                    a =>
                    {
                        m_InternalObject.GetObjectData(
                            WrapperHelper.UnwrapObject < SerializationInfo >( a[0] ),
                            WrapperHelper.UnwrapObject < StreamingContext >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetFile"] = new BSFunctionReference(
                new BSFunction(
                    "function GetFile(name)",
                    a => new BSWrapperObject_System_IO_FileStream(
                        m_InternalObject.GetFile( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetManifestResourceStream"] = new BSFunctionReference(
                new BSFunction(
                    "function GetManifestResourceStream(name)",
                    a => new BSWrapperObject_System_IO_Stream(
                        m_InternalObject.GetManifestResourceStream( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetName"] = new BSFunctionReference(
                new BSFunction(
                    "function GetName(copiedName)",
                    a => new BSWrapperObject_System_Reflection_AssemblyName(
                        m_InternalObject.GetName( WrapperHelper.UnwrapObject < bool >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetName"] = new BSFunctionReference(
                new BSFunction(
                    "function GetName()",
                    a => new BSWrapperObject_System_Reflection_AssemblyName( m_InternalObject.GetName() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["CreateInstance"] = new BSFunctionReference(
                new BSFunction(
                    "function CreateInstance(typeName)",
                    a => new BSWrapperObject_System_Object(
                        m_InternalObject.CreateInstance( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CreateInstance"] = new BSFunctionReference(
                new BSFunction(
                    "function CreateInstance(typeName, ignoreCase)",
                    a => new BSWrapperObject_System_Object(
                        m_InternalObject.CreateInstance(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) ) ),
                    2 ) );

            m_Properties["GetManifestResourceInfo"] = new BSFunctionReference(
                new BSFunction(
                    "function GetManifestResourceInfo(resourceName)",
                    a => new BSWrapperObject_System_Reflection_ManifestResourceInfo(
                        m_InternalObject.GetManifestResourceInfo( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(o)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetModule"] = new BSFunctionReference(
                new BSFunction(
                    "function GetModule(name)",
                    a => new BSWrapperObject_System_Reflection_Module(
                        m_InternalObject.GetModule( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetSatelliteAssembly"] = new BSFunctionReference(
                new BSFunction(
                    "function GetSatelliteAssembly(culture)",
                    a => new BSWrapperObject_System_Reflection_Assembly(
                        m_InternalObject.GetSatelliteAssembly( WrapperHelper.UnwrapObject < CultureInfo >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetSatelliteAssembly"] = new BSFunctionReference(
                new BSFunction(
                    "function GetSatelliteAssembly(culture, version)",
                    a => new BSWrapperObject_System_Reflection_Assembly(
                        m_InternalObject.GetSatelliteAssembly(
                            WrapperHelper.UnwrapObject < CultureInfo >( a[0] ),
                            WrapperHelper.UnwrapObject < Version >( a[1] ) ) ),
                    2 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Reflection_Assembly : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Reflection_Assembly() : base( typeof( Assembly ) )
        {
            m_StaticProperties["CreateQualifiedName"] = new BSFunctionReference(
                new BSFunction(
                    "function CreateQualifiedName(assemblyName, typeName)",
                    a => new BSObject(
                        Assembly.CreateQualifiedName(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["GetEntryAssembly"] = new BSFunctionReference(
                new BSFunction(
                    "function GetEntryAssembly()",
                    a => new BSWrapperObject_System_Reflection_Assembly( Assembly.GetEntryAssembly() ),
                    0 ) );

            m_StaticProperties["LoadFrom"] = new BSFunctionReference(
                new BSFunction(
                    "function LoadFrom(assemblyFile)",
                    a => new BSWrapperObject_System_Reflection_Assembly(
                        Assembly.LoadFrom( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["UnsafeLoadFrom"] = new BSFunctionReference(
                new BSFunction(
                    "function UnsafeLoadFrom(assemblyFile)",
                    a => new BSWrapperObject_System_Reflection_Assembly(
                        Assembly.UnsafeLoadFrom( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["LoadFile"] = new BSFunctionReference(
                new BSFunction(
                    "function LoadFile(path)",
                    a => new BSWrapperObject_System_Reflection_Assembly(
                        Assembly.LoadFile( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Load"] = new BSFunctionReference(
                new BSFunction(
                    "function Load(assemblyString)",
                    a => new BSWrapperObject_System_Reflection_Assembly(
                        Assembly.Load( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Load"] = new BSFunctionReference(
                new BSFunction(
                    "function Load(assemblyRef)",
                    a => new BSWrapperObject_System_Reflection_Assembly(
                        Assembly.Load( WrapperHelper.UnwrapObject < AssemblyName >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["ReflectionOnlyLoad"] = new BSFunctionReference(
                new BSFunction(
                    "function ReflectionOnlyLoad(assemblyString)",
                    a => new BSWrapperObject_System_Reflection_Assembly(
                        Assembly.ReflectionOnlyLoad( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["ReflectionOnlyLoadFrom"] = new BSFunctionReference(
                new BSFunction(
                    "function ReflectionOnlyLoadFrom(assemblyFile)",
                    a => new BSWrapperObject_System_Reflection_Assembly(
                        Assembly.ReflectionOnlyLoadFrom( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["LoadWithPartialName"] = new BSFunctionReference(
                new BSFunction(
                    "function LoadWithPartialName(partialName)",
                    a => new BSWrapperObject_System_Reflection_Assembly(
                        Assembly.LoadWithPartialName( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetExecutingAssembly"] = new BSFunctionReference(
                new BSFunction(
                    "function GetExecutingAssembly()",
                    a => new BSWrapperObject_System_Reflection_Assembly( Assembly.GetExecutingAssembly() ),
                    0 ) );

            m_StaticProperties["GetCallingAssembly"] = new BSFunctionReference(
                new BSFunction(
                    "function GetCallingAssembly()",
                    a => new BSWrapperObject_System_Reflection_Assembly( Assembly.GetCallingAssembly() ),
                    0 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Reflection_Assembly()
        {
            WrapperHelper.AddRecastWrapper < Assembly >( o => new BSWrapperObject_System_Reflection_Assembly( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Security_IPermission : BSWrapperObject < IPermission >

    {
        #region Public

        public BSWrapperObject_System_Security_IPermission( IPermission obj ) : base( obj )
        {
            m_Properties["Copy"] = new BSFunctionReference(
                new BSFunction(
                    "function Copy()",
                    a => new BSWrapperObject_System_Security_IPermission( m_InternalObject.Copy() ),
                    0 ) );

            m_Properties["Demand"] = new BSFunctionReference(
                new BSFunction(
                    "function Demand()",
                    a =>
                    {
                        m_InternalObject.Demand();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Intersect"] = new BSFunctionReference(
                new BSFunction(
                    "function Intersect(target)",
                    a => new BSWrapperObject_System_Security_IPermission(
                        m_InternalObject.Intersect( WrapperHelper.UnwrapObject < IPermission >( a[0] ) ) ),
                    1 ) );

            m_Properties["IsSubsetOf"] = new BSFunctionReference(
                new BSFunction(
                    "function IsSubsetOf(target)",
                    a => m_InternalObject.IsSubsetOf( WrapperHelper.UnwrapObject < IPermission >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Union"] = new BSFunctionReference(
                new BSFunction(
                    "function Union(target)",
                    a => new BSWrapperObject_System_Security_IPermission(
                        m_InternalObject.Union( WrapperHelper.UnwrapObject < IPermission >( a[0] ) ) ),
                    1 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Security_IPermission : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Security_IPermission() : base( typeof( IPermission ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Security_IPermission()
        {
            WrapperHelper.AddRecastWrapper < IPermission >( o => new BSWrapperObject_System_Security_IPermission( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Security_SecurityElement : BSWrapperObject < SecurityElement >

    {
        #region Public

        public BSWrapperObject_System_Security_SecurityElement( SecurityElement obj ) : base( obj )
        {
            m_Properties["Attributes"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Collections_Hashtable( m_InternalObject.Attributes ),
                x => m_InternalObject.Attributes = WrapperHelper.UnwrapObject < Hashtable >( x ) );

            m_Properties["Children"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Collections_ArrayList( m_InternalObject.Children ),
                x => m_InternalObject.Children = WrapperHelper.UnwrapObject < ArrayList >( x ) );

            m_Properties["Tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.Tag ),
                x => m_InternalObject.Tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["Text"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.Text ),
                x => m_InternalObject.Text = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["AddAttribute"] = new BSFunctionReference(
                new BSFunction(
                    "function AddAttribute(name, value)",
                    a =>
                    {
                        m_InternalObject.AddAttribute(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["AddChild"] = new BSFunctionReference(
                new BSFunction(
                    "function AddChild(child)",
                    a =>
                    {
                        m_InternalObject.AddChild( WrapperHelper.UnwrapObject < SecurityElement >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Attribute"] = new BSFunctionReference(
                new BSFunction(
                    "function Attribute(name)",
                    a => new BSObject( m_InternalObject.Attribute( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["Copy"] = new BSFunctionReference(
                new BSFunction(
                    "function Copy()",
                    a => new BSWrapperObject_System_Security_SecurityElement( m_InternalObject.Copy() ),
                    0 ) );

            m_Properties["Equal"] = new BSFunctionReference(
                new BSFunction(
                    "function Equal(other)",
                    a => m_InternalObject.Equal( WrapperHelper.UnwrapObject < SecurityElement >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SearchForChildByTag"] = new BSFunctionReference(
                new BSFunction(
                    "function SearchForChildByTag(tag)",
                    a => new BSWrapperObject_System_Security_SecurityElement(
                        m_InternalObject.SearchForChildByTag( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["SearchForTextOfTag"] = new BSFunctionReference(
                new BSFunction(
                    "function SearchForTextOfTag(tag)",
                    a => new BSObject(
                        m_InternalObject.SearchForTextOfTag( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Security_SecurityElement : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Security_SecurityElement() : base( typeof( SecurityElement ) )
        {
            m_StaticProperties["Escape"] = new BSFunctionReference(
                new BSFunction(
                    "function Escape(str)",
                    a => new BSObject( SecurityElement.Escape( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["FromString"] = new BSFunctionReference(
                new BSFunction(
                    "function FromString(xml)",
                    a => new BSWrapperObject_System_Security_SecurityElement(
                        SecurityElement.FromString( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["IsValidAttributeName"] = new BSFunctionReference(
                new BSFunction(
                    "function IsValidAttributeName(name)",
                    a => SecurityElement.IsValidAttributeName( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["IsValidAttributeValue"] = new BSFunctionReference(
                new BSFunction(
                    "function IsValidAttributeValue(value)",
                    a => SecurityElement.IsValidAttributeValue( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["IsValidTag"] = new BSFunctionReference(
                new BSFunction(
                    "function IsValidTag(tag)",
                    a => SecurityElement.IsValidTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["IsValidText"] = new BSFunctionReference(
                new BSFunction(
                    "function IsValidText(text)",
                    a => SecurityElement.IsValidText( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Security_SecurityElement()
        {
            WrapperHelper.AddRecastWrapper < SecurityElement >(
                o => new BSWrapperObject_System_Security_SecurityElement( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Collections_Hashtable : BSWrapperObject < Hashtable >

    {
        #region Public

        public BSWrapperObject_System_Collections_Hashtable( Hashtable obj ) : base( obj )
        {
            m_Properties["get_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function get_Item(key)",
                    a => new BSWrapperObject_System_Object(
                        m_InternalObject[WrapperHelper.UnwrapObject < object >( a[0] )] ),
                    1 ) );

            m_Properties["set_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function set_Item(key, value)",
                    a =>
                    {
                        m_InternalObject[WrapperHelper.UnwrapObject < object >( a[0] )] =
                            WrapperHelper.UnwrapObject < object >( a[1] );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["IsReadOnly"] = new BSReflectionReference(
                () => m_InternalObject.IsReadOnly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsFixedSize"] = new BSReflectionReference(
                () => m_InternalObject.IsFixedSize ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsSynchronized"] = new BSReflectionReference(
                () => m_InternalObject.IsSynchronized ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["Keys"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Collections_ICollection( m_InternalObject.Keys ),
                null );

            m_Properties["Values"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Collections_ICollection( m_InternalObject.Values ),
                null );

            m_Properties["SyncRoot"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.SyncRoot ),
                null );

            m_Properties["Count"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Count ),
                null );

            m_Properties["Add"] = new BSFunctionReference(
                new BSFunction(
                    "function Add(key, value)",
                    a =>
                    {
                        m_InternalObject.Add(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Clear"] = new BSFunctionReference(
                new BSFunction(
                    "function Clear()",
                    a =>
                    {
                        m_InternalObject.Clear();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Clone"] = new BSFunctionReference(
                new BSFunction(
                    "function Clone()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.Clone() ),
                    0 ) );

            m_Properties["Contains"] = new BSFunctionReference(
                new BSFunction(
                    "function Contains(key)",
                    a => m_InternalObject.Contains( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ContainsKey"] = new BSFunctionReference(
                new BSFunction(
                    "function ContainsKey(key)",
                    a => m_InternalObject.ContainsKey( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ContainsValue"] = new BSFunctionReference(
                new BSFunction(
                    "function ContainsValue(value)",
                    a => m_InternalObject.ContainsValue( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["CopyTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyTo(array, arrayIndex)",
                    a =>
                    {
                        m_InternalObject.CopyTo(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetEnumerator"] = new BSFunctionReference(
                new BSFunction(
                    "function GetEnumerator()",
                    a => new BSWrapperObject_System_Collections_IDictionaryEnumerator(
                        m_InternalObject.GetEnumerator() ),
                    0 ) );

            m_Properties["Remove"] = new BSFunctionReference(
                new BSFunction(
                    "function Remove(key)",
                    a =>
                    {
                        m_InternalObject.Remove( WrapperHelper.UnwrapObject < object >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetObjectData"] = new BSFunctionReference(
                new BSFunction(
                    "function GetObjectData(info, context)",
                    a =>
                    {
                        m_InternalObject.GetObjectData(
                            WrapperHelper.UnwrapObject < SerializationInfo >( a[0] ),
                            WrapperHelper.UnwrapObject < StreamingContext >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["OnDeserialization"] = new BSFunctionReference(
                new BSFunction(
                    "function OnDeserialization(sender)",
                    a =>
                    {
                        m_InternalObject.OnDeserialization( WrapperHelper.UnwrapObject < object >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Collections_Hashtable : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Collections_Hashtable() : base( typeof( Hashtable ) )
        {
            m_StaticProperties["Synchronized"] = new BSFunctionReference(
                new BSFunction(
                    "function Synchronized(table)",
                    a => new BSWrapperObject_System_Collections_Hashtable(
                        Hashtable.Synchronized( WrapperHelper.UnwrapObject < Hashtable >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Collections_Hashtable()
        {
            WrapperHelper.AddRecastWrapper < Hashtable >( o => new BSWrapperObject_System_Collections_Hashtable( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Collections_ICollection : BSWrapperObject < ICollection >

    {
        #region Public

        public BSWrapperObject_System_Collections_ICollection( ICollection obj ) : base( obj )
        {
            m_Properties["Count"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Count ),
                null );

            m_Properties["SyncRoot"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.SyncRoot ),
                null );

            m_Properties["IsSynchronized"] = new BSReflectionReference(
                () => m_InternalObject.IsSynchronized ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["CopyTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyTo(array, index)",
                    a =>
                    {
                        m_InternalObject.CopyTo(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Collections_ICollection : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Collections_ICollection() : base( typeof( ICollection ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Collections_ICollection()
        {
            WrapperHelper.AddRecastWrapper < ICollection >(
                o => new BSWrapperObject_System_Collections_ICollection( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Collections_IDictionaryEnumerator : BSWrapperObject < IDictionaryEnumerator >

    {
        #region Public

        public BSWrapperObject_System_Collections_IDictionaryEnumerator( IDictionaryEnumerator obj ) : base( obj )
        {
            m_Properties["Key"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.Key ),
                null );

            m_Properties["Value"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.Value ),
                null );

            m_Properties["Entry"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Collections_DictionaryEntry( m_InternalObject.Entry ),
                null );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Collections_IDictionaryEnumerator : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Collections_IDictionaryEnumerator() : base(
            typeof( IDictionaryEnumerator ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Collections_IDictionaryEnumerator()
        {
            WrapperHelper.AddRecastWrapper < IDictionaryEnumerator >(
                o => new BSWrapperObject_System_Collections_IDictionaryEnumerator( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Collections_DictionaryEntry : BSWrapperObject < DictionaryEntry >

    {
        #region Public

        public BSWrapperObject_System_Collections_DictionaryEntry( DictionaryEntry obj ) : base( obj )
        {
            m_Properties["Key"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.Key ),
                x => m_InternalObject.Key = WrapperHelper.UnwrapObject < object >( x ) );

            m_Properties["Value"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.Value ),
                x => m_InternalObject.Value = WrapperHelper.UnwrapObject < object >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Collections_DictionaryEntry : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Collections_DictionaryEntry() : base( typeof( DictionaryEntry ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Collections_DictionaryEntry()
        {
            WrapperHelper.AddRecastWrapper < DictionaryEntry >(
                o => new BSWrapperObject_System_Collections_DictionaryEntry( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Runtime_Serialization_StreamingContext : BSWrapperObject < StreamingContext >

    {
        #region Public

        public BSWrapperObject_System_Runtime_Serialization_StreamingContext( StreamingContext obj ) : base( obj )
        {
            m_Properties["Context"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.Context ),
                null );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Runtime_Serialization_StreamingContext : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Runtime_Serialization_StreamingContext() : base(
            typeof( StreamingContext ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Runtime_Serialization_StreamingContext()
        {
            WrapperHelper.AddRecastWrapper < StreamingContext >(
                o => new BSWrapperObject_System_Runtime_Serialization_StreamingContext( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Collections_ArrayList : BSWrapperObject < ArrayList >

    {
        #region Public

        public BSWrapperObject_System_Collections_ArrayList( ArrayList obj ) : base( obj )
        {
            m_Properties["Capacity"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Capacity ),
                x => m_InternalObject.Capacity = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["Count"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Count ),
                null );

            m_Properties["IsFixedSize"] = new BSReflectionReference(
                () => m_InternalObject.IsFixedSize ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsReadOnly"] = new BSReflectionReference(
                () => m_InternalObject.IsReadOnly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsSynchronized"] = new BSReflectionReference(
                () => m_InternalObject.IsSynchronized ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["SyncRoot"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.SyncRoot ),
                null );

            m_Properties["get_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function get_Item(index)",
                    a => new BSWrapperObject_System_Object(
                        m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] )] ),
                    1 ) );

            m_Properties["set_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function set_Item(index, value)",
                    a =>
                    {
                        m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] )] =
                            WrapperHelper.UnwrapObject < object >( a[1] );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Add"] = new BSFunctionReference(
                new BSFunction(
                    "function Add(value)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.Add( WrapperHelper.UnwrapObject < object >( a[0] ) ) ),
                    1 ) );

            m_Properties["AddRange"] = new BSFunctionReference(
                new BSFunction(
                    "function AddRange(c)",
                    a =>
                    {
                        m_InternalObject.AddRange( WrapperHelper.UnwrapObject < ICollection >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BinarySearch"] = new BSFunctionReference(
                new BSFunction(
                    "function BinarySearch(index, count, value, comparer)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.BinarySearch(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < object >( a[2] ),
                            WrapperHelper.UnwrapObject < IComparer >( a[3] ) ) ),
                    4 ) );

            m_Properties["BinarySearch"] = new BSFunctionReference(
                new BSFunction(
                    "function BinarySearch(value)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.BinarySearch( WrapperHelper.UnwrapObject < object >( a[0] ) ) ),
                    1 ) );

            m_Properties["BinarySearch"] = new BSFunctionReference(
                new BSFunction(
                    "function BinarySearch(value, comparer)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.BinarySearch(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < IComparer >( a[1] ) ) ),
                    2 ) );

            m_Properties["Clear"] = new BSFunctionReference(
                new BSFunction(
                    "function Clear()",
                    a =>
                    {
                        m_InternalObject.Clear();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Clone"] = new BSFunctionReference(
                new BSFunction(
                    "function Clone()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.Clone() ),
                    0 ) );

            m_Properties["Contains"] = new BSFunctionReference(
                new BSFunction(
                    "function Contains(item)",
                    a => m_InternalObject.Contains( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["CopyTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyTo(array)",
                    a =>
                    {
                        m_InternalObject.CopyTo( WrapperHelper.UnwrapObject < Array >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["CopyTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyTo(array, arrayIndex)",
                    a =>
                    {
                        m_InternalObject.CopyTo(
                            WrapperHelper.UnwrapObject < Array >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["CopyTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyTo(index, array, arrayIndex, count)",
                    a =>
                    {
                        m_InternalObject.CopyTo(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Array >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < int >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["GetEnumerator"] = new BSFunctionReference(
                new BSFunction(
                    "function GetEnumerator()",
                    a => new BSWrapperObject_System_Collections_IEnumerator( m_InternalObject.GetEnumerator() ),
                    0 ) );

            m_Properties["GetEnumerator"] = new BSFunctionReference(
                new BSFunction(
                    "function GetEnumerator(index, count)",
                    a => new BSWrapperObject_System_Collections_IEnumerator(
                        m_InternalObject.GetEnumerator(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_Properties["IndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function IndexOf(value)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.IndexOf( WrapperHelper.UnwrapObject < object >( a[0] ) ) ),
                    1 ) );

            m_Properties["IndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function IndexOf(value, startIndex)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.IndexOf(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_Properties["IndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function IndexOf(value, startIndex, count)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.IndexOf(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) ) ),
                    3 ) );

            m_Properties["Insert"] = new BSFunctionReference(
                new BSFunction(
                    "function Insert(index, value)",
                    a =>
                    {
                        m_InternalObject.Insert(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["InsertRange"] = new BSFunctionReference(
                new BSFunction(
                    "function InsertRange(index, c)",
                    a =>
                    {
                        m_InternalObject.InsertRange(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < ICollection >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["LastIndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function LastIndexOf(value)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.LastIndexOf( WrapperHelper.UnwrapObject < object >( a[0] ) ) ),
                    1 ) );

            m_Properties["LastIndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function LastIndexOf(value, startIndex)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.LastIndexOf(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_Properties["LastIndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function LastIndexOf(value, startIndex, count)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.LastIndexOf(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) ) ),
                    3 ) );

            m_Properties["Remove"] = new BSFunctionReference(
                new BSFunction(
                    "function Remove(obj)",
                    a =>
                    {
                        m_InternalObject.Remove( WrapperHelper.UnwrapObject < object >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["RemoveAt"] = new BSFunctionReference(
                new BSFunction(
                    "function RemoveAt(index)",
                    a =>
                    {
                        m_InternalObject.RemoveAt( WrapperHelper.UnwrapObject < int >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["RemoveRange"] = new BSFunctionReference(
                new BSFunction(
                    "function RemoveRange(index, count)",
                    a =>
                    {
                        m_InternalObject.RemoveRange(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Reverse"] = new BSFunctionReference(
                new BSFunction(
                    "function Reverse()",
                    a =>
                    {
                        m_InternalObject.Reverse();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Reverse"] = new BSFunctionReference(
                new BSFunction(
                    "function Reverse(index, count)",
                    a =>
                    {
                        m_InternalObject.Reverse(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetRange"] = new BSFunctionReference(
                new BSFunction(
                    "function SetRange(index, c)",
                    a =>
                    {
                        m_InternalObject.SetRange(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < ICollection >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetRange"] = new BSFunctionReference(
                new BSFunction(
                    "function GetRange(index, count)",
                    a => new BSWrapperObject_System_Collections_ArrayList(
                        m_InternalObject.GetRange(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_Properties["Sort"] = new BSFunctionReference(
                new BSFunction(
                    "function Sort()",
                    a =>
                    {
                        m_InternalObject.Sort();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Sort"] = new BSFunctionReference(
                new BSFunction(
                    "function Sort(comparer)",
                    a =>
                    {
                        m_InternalObject.Sort( WrapperHelper.UnwrapObject < IComparer >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Sort"] = new BSFunctionReference(
                new BSFunction(
                    "function Sort(index, count, comparer)",
                    a =>
                    {
                        m_InternalObject.Sort(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < IComparer >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["TrimToSize"] = new BSFunctionReference(
                new BSFunction(
                    "function TrimToSize()",
                    a =>
                    {
                        m_InternalObject.TrimToSize();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Collections_ArrayList : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Collections_ArrayList() : base( typeof( ArrayList ) )
        {
            m_StaticProperties["Adapter"] = new BSFunctionReference(
                new BSFunction(
                    "function Adapter(list)",
                    a => new BSWrapperObject_System_Collections_ArrayList(
                        ArrayList.Adapter( WrapperHelper.UnwrapObject < IList >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["FixedSize"] = new BSFunctionReference(
                new BSFunction(
                    "function FixedSize(list)",
                    a => new BSWrapperObject_System_Collections_IList(
                        ArrayList.FixedSize( WrapperHelper.UnwrapObject < IList >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["FixedSize"] = new BSFunctionReference(
                new BSFunction(
                    "function FixedSize(list)",
                    a => new BSWrapperObject_System_Collections_ArrayList(
                        ArrayList.FixedSize( WrapperHelper.UnwrapObject < ArrayList >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["ReadOnly"] = new BSFunctionReference(
                new BSFunction(
                    "function ReadOnly(list)",
                    a => new BSWrapperObject_System_Collections_IList(
                        ArrayList.ReadOnly( WrapperHelper.UnwrapObject < IList >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["ReadOnly"] = new BSFunctionReference(
                new BSFunction(
                    "function ReadOnly(list)",
                    a => new BSWrapperObject_System_Collections_ArrayList(
                        ArrayList.ReadOnly( WrapperHelper.UnwrapObject < ArrayList >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Repeat"] = new BSFunctionReference(
                new BSFunction(
                    "function Repeat(value, count)",
                    a => new BSWrapperObject_System_Collections_ArrayList(
                        ArrayList.Repeat(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Synchronized"] = new BSFunctionReference(
                new BSFunction(
                    "function Synchronized(list)",
                    a => new BSWrapperObject_System_Collections_IList(
                        ArrayList.Synchronized( WrapperHelper.UnwrapObject < IList >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Synchronized"] = new BSFunctionReference(
                new BSFunction(
                    "function Synchronized(list)",
                    a => new BSWrapperObject_System_Collections_ArrayList(
                        ArrayList.Synchronized( WrapperHelper.UnwrapObject < ArrayList >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Collections_ArrayList()
        {
            WrapperHelper.AddRecastWrapper < ArrayList >( o => new BSWrapperObject_System_Collections_ArrayList( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Collections_IList : BSWrapperObject < IList >

    {
        #region Public

        public BSWrapperObject_System_Collections_IList( IList obj ) : base( obj )
        {
            m_Properties["get_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function get_Item(index)",
                    a => new BSWrapperObject_System_Object(
                        m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] )] ),
                    1 ) );

            m_Properties["set_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function set_Item(index, value)",
                    a =>
                    {
                        m_InternalObject[WrapperHelper.UnwrapObject < int >( a[0] )] =
                            WrapperHelper.UnwrapObject < object >( a[1] );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["IsReadOnly"] = new BSReflectionReference(
                () => m_InternalObject.IsReadOnly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsFixedSize"] = new BSReflectionReference(
                () => m_InternalObject.IsFixedSize ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["Add"] = new BSFunctionReference(
                new BSFunction(
                    "function Add(value)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.Add( WrapperHelper.UnwrapObject < object >( a[0] ) ) ),
                    1 ) );

            m_Properties["Contains"] = new BSFunctionReference(
                new BSFunction(
                    "function Contains(value)",
                    a => m_InternalObject.Contains( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Clear"] = new BSFunctionReference(
                new BSFunction(
                    "function Clear()",
                    a =>
                    {
                        m_InternalObject.Clear();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["IndexOf"] = new BSFunctionReference(
                new BSFunction(
                    "function IndexOf(value)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.IndexOf( WrapperHelper.UnwrapObject < object >( a[0] ) ) ),
                    1 ) );

            m_Properties["Insert"] = new BSFunctionReference(
                new BSFunction(
                    "function Insert(index, value)",
                    a =>
                    {
                        m_InternalObject.Insert(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Remove"] = new BSFunctionReference(
                new BSFunction(
                    "function Remove(value)",
                    a =>
                    {
                        m_InternalObject.Remove( WrapperHelper.UnwrapObject < object >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["RemoveAt"] = new BSFunctionReference(
                new BSFunction(
                    "function RemoveAt(index)",
                    a =>
                    {
                        m_InternalObject.RemoveAt( WrapperHelper.UnwrapObject < int >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Collections_IList : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Collections_IList() : base( typeof( IList ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Collections_IList()
        {
            WrapperHelper.AddRecastWrapper < IList >( o => new BSWrapperObject_System_Collections_IList( o ) );
        }

        #endregion
    }

    public class
        BSWrapperObject_System_Reflection_ModuleResolveEventHandler : BSWrapperObject < ModuleResolveEventHandler >

    {
        #region Public

        public BSWrapperObject_System_Reflection_ModuleResolveEventHandler( ModuleResolveEventHandler obj ) : base(
            obj )
        {
            m_Properties["Method"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_MethodInfo( m_InternalObject.Method ),
                null );

            m_Properties["Target"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.Target ),
                null );

            m_Properties["Invoke"] = new BSFunctionReference(
                new BSFunction(
                    "function Invoke(sender, e)",
                    a => new BSWrapperObject_System_Reflection_Module(
                        m_InternalObject.Invoke(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < ResolveEventArgs >( a[1] ) ) ),
                    2 ) );

            m_Properties["BeginInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function BeginInvoke(sender, e, callback, object)",
                    a => new BSWrapperObject_System_IAsyncResult(
                        m_InternalObject.BeginInvoke(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < ResolveEventArgs >( a[1] ),
                            WrapperHelper.UnwrapObject < AsyncCallback >( a[2] ),
                            WrapperHelper.UnwrapObject < object >( a[3] ) ) ),
                    4 ) );

            m_Properties["EndInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function EndInvoke(result)",
                    a => new BSWrapperObject_System_Reflection_Module(
                        m_InternalObject.EndInvoke( WrapperHelper.UnwrapObject < IAsyncResult >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetObjectData"] = new BSFunctionReference(
                new BSFunction(
                    "function GetObjectData(info, context)",
                    a =>
                    {
                        m_InternalObject.GetObjectData(
                            WrapperHelper.UnwrapObject < SerializationInfo >( a[0] ),
                            WrapperHelper.UnwrapObject < StreamingContext >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Clone"] = new BSFunctionReference(
                new BSFunction(
                    "function Clone()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.Clone() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Reflection_ModuleResolveEventHandler : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Reflection_ModuleResolveEventHandler() : base(
            typeof( ModuleResolveEventHandler ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Reflection_ModuleResolveEventHandler()
        {
            WrapperHelper.AddRecastWrapper < ModuleResolveEventHandler >(
                o => new BSWrapperObject_System_Reflection_ModuleResolveEventHandler( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_ResolveEventArgs : BSWrapperObject < ResolveEventArgs >

    {
        #region Public

        public BSWrapperObject_System_ResolveEventArgs( ResolveEventArgs obj ) : base( obj )
        {
            m_Properties["Name"] = new BSReflectionReference( () => new BSObject( m_InternalObject.Name ), null );

            m_Properties["RequestingAssembly"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_Assembly( m_InternalObject.RequestingAssembly ),
                null );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_ResolveEventArgs : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_ResolveEventArgs() : base( typeof( ResolveEventArgs ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_ResolveEventArgs()
        {
            WrapperHelper.AddRecastWrapper < ResolveEventArgs >(
                o => new BSWrapperObject_System_ResolveEventArgs( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_EventArgs : BSWrapperObject < EventArgs >

    {
        #region Public

        public BSWrapperObject_System_EventArgs( EventArgs obj ) : base( obj )
        {
            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_EventArgs : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_EventArgs() : base( typeof( EventArgs ) )
        {
            m_StaticProperties["Empty"] = new BSReflectionReference(
                () => new BSWrapperObject_System_EventArgs( EventArgs.Empty ),
                null );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_EventArgs()
        {
            WrapperHelper.AddRecastWrapper < EventArgs >( o => new BSWrapperObject_System_EventArgs( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_IAsyncResult : BSWrapperObject < IAsyncResult >

    {
        #region Public

        public BSWrapperObject_System_IAsyncResult( IAsyncResult obj ) : base( obj )
        {
            m_Properties["IsCompleted"] = new BSReflectionReference(
                () => m_InternalObject.IsCompleted ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["AsyncWaitHandle"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Threading_WaitHandle( m_InternalObject.AsyncWaitHandle ),
                null );

            m_Properties["AsyncState"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.AsyncState ),
                null );

            m_Properties["CompletedSynchronously"] = new BSReflectionReference(
                () => m_InternalObject.CompletedSynchronously ? BSObject.One : BSObject.Zero,
                null );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_IAsyncResult : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_IAsyncResult() : base( typeof( IAsyncResult ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_IAsyncResult()
        {
            WrapperHelper.AddRecastWrapper < IAsyncResult >( o => new BSWrapperObject_System_IAsyncResult( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Threading_WaitHandle : BSWrapperObject < WaitHandle >

    {
        #region Public

        public BSWrapperObject_System_Threading_WaitHandle( WaitHandle obj ) : base( obj )
        {
            m_Properties["Handle"] = new BSReflectionReference(
                () => new BSWrapperObject_System_IntPtr( m_InternalObject.Handle ),
                x => m_InternalObject.Handle = WrapperHelper.UnwrapObject < IntPtr >( x ) );

            m_Properties["SafeWaitHandle"] = new BSReflectionReference(
                () => new BSWrapperObject_Microsoft_Win32_SafeHandles_SafeWaitHandle( m_InternalObject.SafeWaitHandle ),
                x => m_InternalObject.SafeWaitHandle = WrapperHelper.UnwrapObject < SafeWaitHandle >( x ) );

            m_Properties["WaitOne"] = new BSFunctionReference(
                new BSFunction(
                    "function WaitOne(millisecondsTimeout, exitContext)",
                    a => m_InternalObject.WaitOne(
                        WrapperHelper.UnwrapObject < int >( a[0] ),
                        WrapperHelper.UnwrapObject < bool >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_Properties["WaitOne"] = new BSFunctionReference(
                new BSFunction(
                    "function WaitOne(timeout, exitContext)",
                    a => m_InternalObject.WaitOne(
                        WrapperHelper.UnwrapObject < TimeSpan >( a[0] ),
                        WrapperHelper.UnwrapObject < bool >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_Properties["WaitOne"] = new BSFunctionReference(
                new BSFunction(
                    "function WaitOne()",
                    a => m_InternalObject.WaitOne() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["WaitOne"] = new BSFunctionReference(
                new BSFunction(
                    "function WaitOne(millisecondsTimeout)",
                    a => m_InternalObject.WaitOne( WrapperHelper.UnwrapObject < int >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["WaitOne"] = new BSFunctionReference(
                new BSFunction(
                    "function WaitOne(timeout)",
                    a => m_InternalObject.WaitOne( WrapperHelper.UnwrapObject < TimeSpan >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Close"] = new BSFunctionReference(
                new BSFunction(
                    "function Close()",
                    a =>
                    {
                        m_InternalObject.Close();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Dispose"] = new BSFunctionReference(
                new BSFunction(
                    "function Dispose()",
                    a =>
                    {
                        m_InternalObject.Dispose();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetLifetimeService"] = new BSFunctionReference(
                new BSFunction(
                    "function GetLifetimeService()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.GetLifetimeService() ),
                    0 ) );

            m_Properties["InitializeLifetimeService"] = new BSFunctionReference(
                new BSFunction(
                    "function InitializeLifetimeService()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.InitializeLifetimeService() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Threading_WaitHandle : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Threading_WaitHandle() : base( typeof( WaitHandle ) )
        {
            m_StaticProperties["WaitTimeout"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) WaitHandle.WaitTimeout ),
                null );

            m_StaticProperties["SignalAndWait"] = new BSFunctionReference(
                new BSFunction(
                    "function SignalAndWait(toSignal, toWaitOn)",
                    a => WaitHandle.SignalAndWait(
                        WrapperHelper.UnwrapObject < WaitHandle >( a[0] ),
                        WrapperHelper.UnwrapObject < WaitHandle >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["SignalAndWait"] = new BSFunctionReference(
                new BSFunction(
                    "function SignalAndWait(toSignal, toWaitOn, timeout, exitContext)",
                    a => WaitHandle.SignalAndWait(
                        WrapperHelper.UnwrapObject < WaitHandle >( a[0] ),
                        WrapperHelper.UnwrapObject < WaitHandle >( a[1] ),
                        WrapperHelper.UnwrapObject < TimeSpan >( a[2] ),
                        WrapperHelper.UnwrapObject < bool >( a[3] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    4 ) );

            m_StaticProperties["SignalAndWait"] = new BSFunctionReference(
                new BSFunction(
                    "function SignalAndWait(toSignal, toWaitOn, millisecondsTimeout, exitContext)",
                    a => WaitHandle.SignalAndWait(
                        WrapperHelper.UnwrapObject < WaitHandle >( a[0] ),
                        WrapperHelper.UnwrapObject < WaitHandle >( a[1] ),
                        WrapperHelper.UnwrapObject < int >( a[2] ),
                        WrapperHelper.UnwrapObject < bool >( a[3] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    4 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Threading_WaitHandle()
        {
            WrapperHelper.AddRecastWrapper < WaitHandle >( o => new BSWrapperObject_System_Threading_WaitHandle( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_Microsoft_Win32_SafeHandles_SafeWaitHandle : BSWrapperObject < SafeWaitHandle >

    {
        #region Public

        public BSWrapperObject_Microsoft_Win32_SafeHandles_SafeWaitHandle( SafeWaitHandle obj ) : base( obj )
        {
            m_Properties["IsInvalid"] = new BSReflectionReference(
                () => m_InternalObject.IsInvalid ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsClosed"] = new BSReflectionReference(
                () => m_InternalObject.IsClosed ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["DangerousGetHandle"] = new BSFunctionReference(
                new BSFunction(
                    "function DangerousGetHandle()",
                    a => new BSWrapperObject_System_IntPtr( m_InternalObject.DangerousGetHandle() ),
                    0 ) );

            m_Properties["Close"] = new BSFunctionReference(
                new BSFunction(
                    "function Close()",
                    a =>
                    {
                        m_InternalObject.Close();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Dispose"] = new BSFunctionReference(
                new BSFunction(
                    "function Dispose()",
                    a =>
                    {
                        m_InternalObject.Dispose();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetHandleAsInvalid"] = new BSFunctionReference(
                new BSFunction(
                    "function SetHandleAsInvalid()",
                    a =>
                    {
                        m_InternalObject.SetHandleAsInvalid();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["DangerousRelease"] = new BSFunctionReference(
                new BSFunction(
                    "function DangerousRelease()",
                    a =>
                    {
                        m_InternalObject.DangerousRelease();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_Microsoft_Win32_SafeHandles_SafeWaitHandle : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_Microsoft_Win32_SafeHandles_SafeWaitHandle() : base( typeof( SafeWaitHandle ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_Microsoft_Win32_SafeHandles_SafeWaitHandle()
        {
            WrapperHelper.AddRecastWrapper < SafeWaitHandle >(
                o => new BSWrapperObject_Microsoft_Win32_SafeHandles_SafeWaitHandle( o ) );
        }

        #endregion
    }

    public class
        BSWrapperObject_Microsoft_Win32_SafeHandles_SafeHandleZeroOrMinusOneIsInvalid : BSWrapperObject <
            SafeHandleZeroOrMinusOneIsInvalid >

    {
        #region Public

        public BSWrapperObject_Microsoft_Win32_SafeHandles_SafeHandleZeroOrMinusOneIsInvalid(
            SafeHandleZeroOrMinusOneIsInvalid obj ) : base( obj )
        {
            m_Properties["IsInvalid"] = new BSReflectionReference(
                () => m_InternalObject.IsInvalid ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsClosed"] = new BSReflectionReference(
                () => m_InternalObject.IsClosed ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["DangerousGetHandle"] = new BSFunctionReference(
                new BSFunction(
                    "function DangerousGetHandle()",
                    a => new BSWrapperObject_System_IntPtr( m_InternalObject.DangerousGetHandle() ),
                    0 ) );

            m_Properties["Close"] = new BSFunctionReference(
                new BSFunction(
                    "function Close()",
                    a =>
                    {
                        m_InternalObject.Close();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Dispose"] = new BSFunctionReference(
                new BSFunction(
                    "function Dispose()",
                    a =>
                    {
                        m_InternalObject.Dispose();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetHandleAsInvalid"] = new BSFunctionReference(
                new BSFunction(
                    "function SetHandleAsInvalid()",
                    a =>
                    {
                        m_InternalObject.SetHandleAsInvalid();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["DangerousRelease"] = new BSFunctionReference(
                new BSFunction(
                    "function DangerousRelease()",
                    a =>
                    {
                        m_InternalObject.DangerousRelease();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class
        BSStaticWrapperObject_Microsoft_Win32_SafeHandles_SafeHandleZeroOrMinusOneIsInvalid : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_Microsoft_Win32_SafeHandles_SafeHandleZeroOrMinusOneIsInvalid() : base(
            typeof( SafeHandleZeroOrMinusOneIsInvalid ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_Microsoft_Win32_SafeHandles_SafeHandleZeroOrMinusOneIsInvalid()
        {
            WrapperHelper.AddRecastWrapper < SafeHandleZeroOrMinusOneIsInvalid >(
                o => new BSWrapperObject_Microsoft_Win32_SafeHandles_SafeHandleZeroOrMinusOneIsInvalid( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Runtime_InteropServices_SafeHandle : BSWrapperObject < SafeHandle >

    {
        #region Public

        public BSWrapperObject_System_Runtime_InteropServices_SafeHandle( SafeHandle obj ) : base( obj )
        {
            m_Properties["IsClosed"] = new BSReflectionReference(
                () => m_InternalObject.IsClosed ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsInvalid"] = new BSReflectionReference(
                () => m_InternalObject.IsInvalid ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["DangerousGetHandle"] = new BSFunctionReference(
                new BSFunction(
                    "function DangerousGetHandle()",
                    a => new BSWrapperObject_System_IntPtr( m_InternalObject.DangerousGetHandle() ),
                    0 ) );

            m_Properties["Close"] = new BSFunctionReference(
                new BSFunction(
                    "function Close()",
                    a =>
                    {
                        m_InternalObject.Close();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Dispose"] = new BSFunctionReference(
                new BSFunction(
                    "function Dispose()",
                    a =>
                    {
                        m_InternalObject.Dispose();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetHandleAsInvalid"] = new BSFunctionReference(
                new BSFunction(
                    "function SetHandleAsInvalid()",
                    a =>
                    {
                        m_InternalObject.SetHandleAsInvalid();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["DangerousRelease"] = new BSFunctionReference(
                new BSFunction(
                    "function DangerousRelease()",
                    a =>
                    {
                        m_InternalObject.DangerousRelease();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Runtime_InteropServices_SafeHandle : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Runtime_InteropServices_SafeHandle() : base( typeof( SafeHandle ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Runtime_InteropServices_SafeHandle()
        {
            WrapperHelper.AddRecastWrapper < SafeHandle >(
                o => new BSWrapperObject_System_Runtime_InteropServices_SafeHandle( o ) );
        }

        #endregion
    }

    public class
        BSWrapperObject_System_Runtime_ConstrainedExecution_CriticalFinalizerObject : BSWrapperObject <
            CriticalFinalizerObject >

    {
        #region Public

        public BSWrapperObject_System_Runtime_ConstrainedExecution_CriticalFinalizerObject(
            CriticalFinalizerObject obj ) : base( obj )
        {
            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class
        BSStaticWrapperObject_System_Runtime_ConstrainedExecution_CriticalFinalizerObject : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Runtime_ConstrainedExecution_CriticalFinalizerObject() : base(
            typeof( CriticalFinalizerObject ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Runtime_ConstrainedExecution_CriticalFinalizerObject()
        {
            WrapperHelper.AddRecastWrapper < CriticalFinalizerObject >(
                o => new BSWrapperObject_System_Runtime_ConstrainedExecution_CriticalFinalizerObject( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Collections_IDictionary : BSWrapperObject < IDictionary >

    {
        #region Public

        public BSWrapperObject_System_Collections_IDictionary( IDictionary obj ) : base( obj )
        {
            m_Properties["get_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function get_Item(key)",
                    a => new BSWrapperObject_System_Object(
                        m_InternalObject[WrapperHelper.UnwrapObject < object >( a[0] )] ),
                    1 ) );

            m_Properties["set_Item"] = new BSFunctionReference(
                new BSFunction(
                    "function set_Item(key, value)",
                    a =>
                    {
                        m_InternalObject[WrapperHelper.UnwrapObject < object >( a[0] )] =
                            WrapperHelper.UnwrapObject < object >( a[1] );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Keys"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Collections_ICollection( m_InternalObject.Keys ),
                null );

            m_Properties["Values"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Collections_ICollection( m_InternalObject.Values ),
                null );

            m_Properties["IsReadOnly"] = new BSReflectionReference(
                () => m_InternalObject.IsReadOnly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsFixedSize"] = new BSReflectionReference(
                () => m_InternalObject.IsFixedSize ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["Contains"] = new BSFunctionReference(
                new BSFunction(
                    "function Contains(key)",
                    a => m_InternalObject.Contains( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Add"] = new BSFunctionReference(
                new BSFunction(
                    "function Add(key, value)",
                    a =>
                    {
                        m_InternalObject.Add(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Clear"] = new BSFunctionReference(
                new BSFunction(
                    "function Clear()",
                    a =>
                    {
                        m_InternalObject.Clear();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetEnumerator"] = new BSFunctionReference(
                new BSFunction(
                    "function GetEnumerator()",
                    a => new BSWrapperObject_System_Collections_IDictionaryEnumerator(
                        m_InternalObject.GetEnumerator() ),
                    0 ) );

            m_Properties["Remove"] = new BSFunctionReference(
                new BSFunction(
                    "function Remove(key)",
                    a =>
                    {
                        m_InternalObject.Remove( WrapperHelper.UnwrapObject < object >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Collections_IDictionary : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Collections_IDictionary() : base( typeof( IDictionary ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Collections_IDictionary()
        {
            WrapperHelper.AddRecastWrapper < IDictionary >(
                o => new BSWrapperObject_System_Collections_IDictionary( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_MarshalByRefObject : BSWrapperObject < MarshalByRefObject >

    {
        #region Public

        public BSWrapperObject_System_MarshalByRefObject( MarshalByRefObject obj ) : base( obj )
        {
            m_Properties["GetLifetimeService"] = new BSFunctionReference(
                new BSFunction(
                    "function GetLifetimeService()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.GetLifetimeService() ),
                    0 ) );

            m_Properties["InitializeLifetimeService"] = new BSFunctionReference(
                new BSFunction(
                    "function InitializeLifetimeService()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.InitializeLifetimeService() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_MarshalByRefObject : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_MarshalByRefObject() : base( typeof( MarshalByRefObject ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_MarshalByRefObject()
        {
            WrapperHelper.AddRecastWrapper < MarshalByRefObject >(
                o => new BSWrapperObject_System_MarshalByRefObject( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_AsyncCallback : BSWrapperObject < AsyncCallback >

    {
        #region Public

        public BSWrapperObject_System_AsyncCallback( AsyncCallback obj ) : base( obj )
        {
            m_Properties["Method"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_MethodInfo( m_InternalObject.Method ),
                null );

            m_Properties["Target"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.Target ),
                null );

            m_Properties["Invoke"] = new BSFunctionReference(
                new BSFunction(
                    "function Invoke(ar)",
                    a =>
                    {
                        m_InternalObject.Invoke( WrapperHelper.UnwrapObject < IAsyncResult >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BeginInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function BeginInvoke(ar, callback, object)",
                    a => new BSWrapperObject_System_IAsyncResult(
                        m_InternalObject.BeginInvoke(
                            WrapperHelper.UnwrapObject < IAsyncResult >( a[0] ),
                            WrapperHelper.UnwrapObject < AsyncCallback >( a[1] ),
                            WrapperHelper.UnwrapObject < object >( a[2] ) ) ),
                    3 ) );

            m_Properties["EndInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function EndInvoke(result)",
                    a =>
                    {
                        m_InternalObject.EndInvoke( WrapperHelper.UnwrapObject < IAsyncResult >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetObjectData"] = new BSFunctionReference(
                new BSFunction(
                    "function GetObjectData(info, context)",
                    a =>
                    {
                        m_InternalObject.GetObjectData(
                            WrapperHelper.UnwrapObject < SerializationInfo >( a[0] ),
                            WrapperHelper.UnwrapObject < StreamingContext >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Clone"] = new BSFunctionReference(
                new BSFunction(
                    "function Clone()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.Clone() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_AsyncCallback : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_AsyncCallback() : base( typeof( AsyncCallback ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_AsyncCallback()
        {
            WrapperHelper.AddRecastWrapper < AsyncCallback >( o => new BSWrapperObject_System_AsyncCallback( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_MulticastDelegate : BSWrapperObject < MulticastDelegate >

    {
        #region Public

        public BSWrapperObject_System_MulticastDelegate( MulticastDelegate obj ) : base( obj )
        {
            m_Properties["Method"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_MethodInfo( m_InternalObject.Method ),
                null );

            m_Properties["Target"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.Target ),
                null );

            m_Properties["GetObjectData"] = new BSFunctionReference(
                new BSFunction(
                    "function GetObjectData(info, context)",
                    a =>
                    {
                        m_InternalObject.GetObjectData(
                            WrapperHelper.UnwrapObject < SerializationInfo >( a[0] ),
                            WrapperHelper.UnwrapObject < StreamingContext >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Clone"] = new BSFunctionReference(
                new BSFunction(
                    "function Clone()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.Clone() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_MulticastDelegate : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_MulticastDelegate() : base( typeof( MulticastDelegate ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_MulticastDelegate()
        {
            WrapperHelper.AddRecastWrapper < MulticastDelegate >(
                o => new BSWrapperObject_System_MulticastDelegate( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Delegate : BSWrapperObject < Delegate >

    {
        #region Public

        public BSWrapperObject_System_Delegate( Delegate obj ) : base( obj )
        {
            m_Properties["Method"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_MethodInfo( m_InternalObject.Method ),
                null );

            m_Properties["Target"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.Target ),
                null );

            m_Properties["Clone"] = new BSFunctionReference(
                new BSFunction(
                    "function Clone()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.Clone() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["GetObjectData"] = new BSFunctionReference(
                new BSFunction(
                    "function GetObjectData(info, context)",
                    a =>
                    {
                        m_InternalObject.GetObjectData(
                            WrapperHelper.UnwrapObject < SerializationInfo >( a[0] ),
                            WrapperHelper.UnwrapObject < StreamingContext >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Delegate : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Delegate() : base( typeof( Delegate ) )
        {
            m_StaticProperties["Combine"] = new BSFunctionReference(
                new BSFunction(
                    "function Combine(a, b)",
                    a => new BSWrapperObject_System_Delegate(
                        Delegate.Combine(
                            WrapperHelper.UnwrapObject < Delegate >( a[0] ),
                            WrapperHelper.UnwrapObject < Delegate >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Remove"] = new BSFunctionReference(
                new BSFunction(
                    "function Remove(source, value)",
                    a => new BSWrapperObject_System_Delegate(
                        Delegate.Remove(
                            WrapperHelper.UnwrapObject < Delegate >( a[0] ),
                            WrapperHelper.UnwrapObject < Delegate >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["RemoveAll"] = new BSFunctionReference(
                new BSFunction(
                    "function RemoveAll(source, value)",
                    a => new BSWrapperObject_System_Delegate(
                        Delegate.RemoveAll(
                            WrapperHelper.UnwrapObject < Delegate >( a[0] ),
                            WrapperHelper.UnwrapObject < Delegate >( a[1] ) ) ),
                    2 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Delegate()
        {
            WrapperHelper.AddRecastWrapper < Delegate >( o => new BSWrapperObject_System_Delegate( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_IO_FileStream : BSWrapperObject < FileStream >

    {
        #region Public

        public BSWrapperObject_System_IO_FileStream( FileStream obj ) : base( obj )
        {
            m_Properties["CanRead"] = new BSReflectionReference(
                () => m_InternalObject.CanRead ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["CanWrite"] = new BSReflectionReference(
                () => m_InternalObject.CanWrite ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["CanSeek"] = new BSReflectionReference(
                () => m_InternalObject.CanSeek ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsAsync"] = new BSReflectionReference(
                () => m_InternalObject.IsAsync ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["Name"] = new BSReflectionReference( () => new BSObject( m_InternalObject.Name ), null );

            m_Properties["Length"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Length ),
                null );

            m_Properties["Position"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Position ),
                x => m_InternalObject.Position = WrapperHelper.UnwrapObject < long >( x ) );

            m_Properties["Handle"] = new BSReflectionReference(
                () => new BSWrapperObject_System_IntPtr( m_InternalObject.Handle ),
                null );

            m_Properties["SafeFileHandle"] = new BSReflectionReference(
                () => new BSWrapperObject_Microsoft_Win32_SafeHandles_SafeFileHandle( m_InternalObject.SafeFileHandle ),
                null );

            m_Properties["CanTimeout"] = new BSReflectionReference(
                () => m_InternalObject.CanTimeout ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["ReadTimeout"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.ReadTimeout ),
                x => m_InternalObject.ReadTimeout = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["WriteTimeout"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.WriteTimeout ),
                x => m_InternalObject.WriteTimeout = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["ReadByte"] = new BSFunctionReference(
                new BSFunction(
                    "function ReadByte()",
                    a => new BSObject( ( decimal ) m_InternalObject.ReadByte() ),
                    0 ) );

            m_Properties["WriteByte"] = new BSFunctionReference(
                new BSFunction(
                    "function WriteByte(value)",
                    a =>
                    {
                        m_InternalObject.WriteByte( WrapperHelper.UnwrapObject < byte >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["EndRead"] = new BSFunctionReference(
                new BSFunction(
                    "function EndRead(asyncResult)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.EndRead( WrapperHelper.UnwrapObject < IAsyncResult >( a[0] ) ) ),
                    1 ) );

            m_Properties["EndWrite"] = new BSFunctionReference(
                new BSFunction(
                    "function EndWrite(asyncResult)",
                    a =>
                    {
                        m_InternalObject.EndWrite( WrapperHelper.UnwrapObject < IAsyncResult >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetLength"] = new BSFunctionReference(
                new BSFunction(
                    "function SetLength(value)",
                    a =>
                    {
                        m_InternalObject.SetLength( WrapperHelper.UnwrapObject < long >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Flush"] = new BSFunctionReference(
                new BSFunction(
                    "function Flush()",
                    a =>
                    {
                        m_InternalObject.Flush();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Flush"] = new BSFunctionReference(
                new BSFunction(
                    "function Flush(flushToDisk)",
                    a =>
                    {
                        m_InternalObject.Flush( WrapperHelper.UnwrapObject < bool >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Lock"] = new BSFunctionReference(
                new BSFunction(
                    "function Lock(position, length)",
                    a =>
                    {
                        m_InternalObject.Lock(
                            WrapperHelper.UnwrapObject < long >( a[0] ),
                            WrapperHelper.UnwrapObject < long >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Unlock"] = new BSFunctionReference(
                new BSFunction(
                    "function Unlock(position, length)",
                    a =>
                    {
                        m_InternalObject.Unlock(
                            WrapperHelper.UnwrapObject < long >( a[0] ),
                            WrapperHelper.UnwrapObject < long >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["FlushAsync"] = new BSFunctionReference(
                new BSFunction(
                    "function FlushAsync(cancellationToken)",
                    a => new BSWrapperObject_System_Threading_Tasks_Task(
                        m_InternalObject.FlushAsync( WrapperHelper.UnwrapObject < CancellationToken >( a[0] ) ) ),
                    1 ) );

            m_Properties["CopyToAsync"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyToAsync(destination)",
                    a => new BSWrapperObject_System_Threading_Tasks_Task(
                        m_InternalObject.CopyToAsync( WrapperHelper.UnwrapObject < Stream >( a[0] ) ) ),
                    1 ) );

            m_Properties["CopyToAsync"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyToAsync(destination, bufferSize)",
                    a => new BSWrapperObject_System_Threading_Tasks_Task(
                        m_InternalObject.CopyToAsync(
                            WrapperHelper.UnwrapObject < Stream >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_Properties["CopyToAsync"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyToAsync(destination, bufferSize, cancellationToken)",
                    a => new BSWrapperObject_System_Threading_Tasks_Task(
                        m_InternalObject.CopyToAsync(
                            WrapperHelper.UnwrapObject < Stream >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < CancellationToken >( a[2] ) ) ),
                    3 ) );

            m_Properties["CopyTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyTo(destination)",
                    a =>
                    {
                        m_InternalObject.CopyTo( WrapperHelper.UnwrapObject < Stream >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["CopyTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyTo(destination, bufferSize)",
                    a =>
                    {
                        m_InternalObject.CopyTo(
                            WrapperHelper.UnwrapObject < Stream >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Close"] = new BSFunctionReference(
                new BSFunction(
                    "function Close()",
                    a =>
                    {
                        m_InternalObject.Close();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Dispose"] = new BSFunctionReference(
                new BSFunction(
                    "function Dispose()",
                    a =>
                    {
                        m_InternalObject.Dispose();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["FlushAsync"] = new BSFunctionReference(
                new BSFunction(
                    "function FlushAsync()",
                    a => new BSWrapperObject_System_Threading_Tasks_Task( m_InternalObject.FlushAsync() ),
                    0 ) );

            m_Properties["GetLifetimeService"] = new BSFunctionReference(
                new BSFunction(
                    "function GetLifetimeService()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.GetLifetimeService() ),
                    0 ) );

            m_Properties["InitializeLifetimeService"] = new BSFunctionReference(
                new BSFunction(
                    "function InitializeLifetimeService()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.InitializeLifetimeService() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_IO_FileStream : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_IO_FileStream() : base( typeof( FileStream ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_IO_FileStream()
        {
            WrapperHelper.AddRecastWrapper < FileStream >( o => new BSWrapperObject_System_IO_FileStream( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_Microsoft_Win32_SafeHandles_SafeFileHandle : BSWrapperObject < SafeFileHandle >

    {
        #region Public

        public BSWrapperObject_Microsoft_Win32_SafeHandles_SafeFileHandle( SafeFileHandle obj ) : base( obj )
        {
            m_Properties["IsInvalid"] = new BSReflectionReference(
                () => m_InternalObject.IsInvalid ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsClosed"] = new BSReflectionReference(
                () => m_InternalObject.IsClosed ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["DangerousGetHandle"] = new BSFunctionReference(
                new BSFunction(
                    "function DangerousGetHandle()",
                    a => new BSWrapperObject_System_IntPtr( m_InternalObject.DangerousGetHandle() ),
                    0 ) );

            m_Properties["Close"] = new BSFunctionReference(
                new BSFunction(
                    "function Close()",
                    a =>
                    {
                        m_InternalObject.Close();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Dispose"] = new BSFunctionReference(
                new BSFunction(
                    "function Dispose()",
                    a =>
                    {
                        m_InternalObject.Dispose();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetHandleAsInvalid"] = new BSFunctionReference(
                new BSFunction(
                    "function SetHandleAsInvalid()",
                    a =>
                    {
                        m_InternalObject.SetHandleAsInvalid();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["DangerousRelease"] = new BSFunctionReference(
                new BSFunction(
                    "function DangerousRelease()",
                    a =>
                    {
                        m_InternalObject.DangerousRelease();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_Microsoft_Win32_SafeHandles_SafeFileHandle : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_Microsoft_Win32_SafeHandles_SafeFileHandle() : base( typeof( SafeFileHandle ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_Microsoft_Win32_SafeHandles_SafeFileHandle()
        {
            WrapperHelper.AddRecastWrapper < SafeFileHandle >(
                o => new BSWrapperObject_Microsoft_Win32_SafeHandles_SafeFileHandle( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Collections_ReadOnlyCollectionBase : BSWrapperObject < ReadOnlyCollectionBase >

    {
        #region Public

        public BSWrapperObject_System_Collections_ReadOnlyCollectionBase( ReadOnlyCollectionBase obj ) : base( obj )
        {
            m_Properties["Count"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Count ),
                null );

            m_Properties["GetEnumerator"] = new BSFunctionReference(
                new BSFunction(
                    "function GetEnumerator()",
                    a => new BSWrapperObject_System_Collections_IEnumerator( m_InternalObject.GetEnumerator() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Collections_ReadOnlyCollectionBase : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Collections_ReadOnlyCollectionBase() : base(
            typeof( ReadOnlyCollectionBase ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Collections_ReadOnlyCollectionBase()
        {
            WrapperHelper.AddRecastWrapper < ReadOnlyCollectionBase >(
                o => new BSWrapperObject_System_Collections_ReadOnlyCollectionBase( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Threading_Tasks_Task : BSWrapperObject < Task >

    {
        #region Public

        public BSWrapperObject_System_Threading_Tasks_Task( Task obj ) : base( obj )
        {
            m_Properties["Id"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Id ),
                null );

            m_Properties["Exception"] = new BSReflectionReference(
                () => new BSWrapperObject_System_AggregateException( m_InternalObject.Exception ),
                null );

            m_Properties["IsCanceled"] = new BSReflectionReference(
                () => m_InternalObject.IsCanceled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsCompleted"] = new BSReflectionReference(
                () => m_InternalObject.IsCompleted ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["AsyncState"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.AsyncState ),
                null );

            m_Properties["IsFaulted"] = new BSReflectionReference(
                () => m_InternalObject.IsFaulted ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["Start"] = new BSFunctionReference(
                new BSFunction(
                    "function Start()",
                    a =>
                    {
                        m_InternalObject.Start();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Start"] = new BSFunctionReference(
                new BSFunction(
                    "function Start(scheduler)",
                    a =>
                    {
                        m_InternalObject.Start( WrapperHelper.UnwrapObject < TaskScheduler >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["RunSynchronously"] = new BSFunctionReference(
                new BSFunction(
                    "function RunSynchronously()",
                    a =>
                    {
                        m_InternalObject.RunSynchronously();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["RunSynchronously"] = new BSFunctionReference(
                new BSFunction(
                    "function RunSynchronously(scheduler)",
                    a =>
                    {
                        m_InternalObject.RunSynchronously( WrapperHelper.UnwrapObject < TaskScheduler >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Dispose"] = new BSFunctionReference(
                new BSFunction(
                    "function Dispose()",
                    a =>
                    {
                        m_InternalObject.Dispose();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetAwaiter"] = new BSFunctionReference(
                new BSFunction(
                    "function GetAwaiter()",
                    a => new BSWrapperObject_System_Runtime_CompilerServices_TaskAwaiter(
                        m_InternalObject.GetAwaiter() ),
                    0 ) );

            m_Properties["ConfigureAwait"] = new BSFunctionReference(
                new BSFunction(
                    "function ConfigureAwait(continueOnCapturedContext)",
                    a => new BSWrapperObject_System_Runtime_CompilerServices_ConfiguredTaskAwaitable(
                        m_InternalObject.ConfigureAwait( WrapperHelper.UnwrapObject < bool >( a[0] ) ) ),
                    1 ) );

            m_Properties["Wait"] = new BSFunctionReference(
                new BSFunction(
                    "function Wait()",
                    a =>
                    {
                        m_InternalObject.Wait();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Wait"] = new BSFunctionReference(
                new BSFunction(
                    "function Wait(timeout)",
                    a => m_InternalObject.Wait( WrapperHelper.UnwrapObject < TimeSpan >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Wait"] = new BSFunctionReference(
                new BSFunction(
                    "function Wait(cancellationToken)",
                    a =>
                    {
                        m_InternalObject.Wait( WrapperHelper.UnwrapObject < CancellationToken >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Wait"] = new BSFunctionReference(
                new BSFunction(
                    "function Wait(millisecondsTimeout)",
                    a => m_InternalObject.Wait( WrapperHelper.UnwrapObject < int >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Wait"] = new BSFunctionReference(
                new BSFunction(
                    "function Wait(millisecondsTimeout, cancellationToken)",
                    a => m_InternalObject.Wait(
                        WrapperHelper.UnwrapObject < int >( a[0] ),
                        WrapperHelper.UnwrapObject < CancellationToken >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Threading_Tasks_Task : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Threading_Tasks_Task() : base( typeof( Task ) )
        {
            m_StaticProperties["Factory"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Threading_Tasks_TaskFactory( Task.Factory ),
                null );

            m_StaticProperties["CompletedTask"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Threading_Tasks_Task( Task.CompletedTask ),
                null );

            m_StaticProperties["Yield"] = new BSFunctionReference(
                new BSFunction(
                    "function Yield()",
                    a => new BSWrapperObject_System_Runtime_CompilerServices_YieldAwaitable( Task.Yield() ),
                    0 ) );

            m_StaticProperties["FromException"] = new BSFunctionReference(
                new BSFunction(
                    "function FromException(exception)",
                    a => new BSWrapperObject_System_Threading_Tasks_Task(
                        Task.FromException( WrapperHelper.UnwrapObject < Exception >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["FromCanceled"] = new BSFunctionReference(
                new BSFunction(
                    "function FromCanceled(cancellationToken)",
                    a => new BSWrapperObject_System_Threading_Tasks_Task(
                        Task.FromCanceled( WrapperHelper.UnwrapObject < CancellationToken >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Run"] = new BSFunctionReference(
                new BSFunction(
                    "function Run(action)",
                    a => new BSWrapperObject_System_Threading_Tasks_Task(
                        Task.Run( WrapperHelper.UnwrapObject < Action >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Run"] = new BSFunctionReference(
                new BSFunction(
                    "function Run(action, cancellationToken)",
                    a => new BSWrapperObject_System_Threading_Tasks_Task(
                        Task.Run(
                            WrapperHelper.UnwrapObject < Action >( a[0] ),
                            WrapperHelper.UnwrapObject < CancellationToken >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Delay"] = new BSFunctionReference(
                new BSFunction(
                    "function Delay(delay)",
                    a => new BSWrapperObject_System_Threading_Tasks_Task(
                        Task.Delay( WrapperHelper.UnwrapObject < TimeSpan >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Delay"] = new BSFunctionReference(
                new BSFunction(
                    "function Delay(delay, cancellationToken)",
                    a => new BSWrapperObject_System_Threading_Tasks_Task(
                        Task.Delay(
                            WrapperHelper.UnwrapObject < TimeSpan >( a[0] ),
                            WrapperHelper.UnwrapObject < CancellationToken >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Delay"] = new BSFunctionReference(
                new BSFunction(
                    "function Delay(millisecondsDelay)",
                    a => new BSWrapperObject_System_Threading_Tasks_Task(
                        Task.Delay( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Delay"] = new BSFunctionReference(
                new BSFunction(
                    "function Delay(millisecondsDelay, cancellationToken)",
                    a => new BSWrapperObject_System_Threading_Tasks_Task(
                        Task.Delay(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < CancellationToken >( a[1] ) ) ),
                    2 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Threading_Tasks_Task()
        {
            WrapperHelper.AddRecastWrapper < Task >( o => new BSWrapperObject_System_Threading_Tasks_Task( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Threading_Tasks_TaskFactory : BSWrapperObject < TaskFactory >

    {
        #region Public

        public BSWrapperObject_System_Threading_Tasks_TaskFactory( TaskFactory obj ) : base( obj )
        {
            m_Properties["CancellationToken"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Threading_CancellationToken( m_InternalObject.CancellationToken ),
                null );

            m_Properties["Scheduler"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Threading_Tasks_TaskScheduler( m_InternalObject.Scheduler ),
                null );

            m_Properties["StartNew"] = new BSFunctionReference(
                new BSFunction(
                    "function StartNew(action)",
                    a => new BSWrapperObject_System_Threading_Tasks_Task(
                        m_InternalObject.StartNew( WrapperHelper.UnwrapObject < Action >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartNew"] = new BSFunctionReference(
                new BSFunction(
                    "function StartNew(action, cancellationToken)",
                    a => new BSWrapperObject_System_Threading_Tasks_Task(
                        m_InternalObject.StartNew(
                            WrapperHelper.UnwrapObject < Action >( a[0] ),
                            WrapperHelper.UnwrapObject < CancellationToken >( a[1] ) ) ),
                    2 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Threading_Tasks_TaskFactory : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Threading_Tasks_TaskFactory() : base( typeof( TaskFactory ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Threading_Tasks_TaskFactory()
        {
            WrapperHelper.AddRecastWrapper < TaskFactory >(
                o => new BSWrapperObject_System_Threading_Tasks_TaskFactory( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Threading_CancellationToken : BSWrapperObject < CancellationToken >

    {
        #region Public

        public BSWrapperObject_System_Threading_CancellationToken( CancellationToken obj ) : base( obj )
        {
            m_Properties["IsCancellationRequested"] = new BSReflectionReference(
                () => m_InternalObject.IsCancellationRequested ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["CanBeCanceled"] = new BSReflectionReference(
                () => m_InternalObject.CanBeCanceled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["WaitHandle"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Threading_WaitHandle( m_InternalObject.WaitHandle ),
                null );

            m_Properties["Register"] = new BSFunctionReference(
                new BSFunction(
                    "function Register(callback)",
                    a => new BSWrapperObject_System_Threading_CancellationTokenRegistration(
                        m_InternalObject.Register( WrapperHelper.UnwrapObject < Action >( a[0] ) ) ),
                    1 ) );

            m_Properties["Register"] = new BSFunctionReference(
                new BSFunction(
                    "function Register(callback, useSynchronizationContext)",
                    a => new BSWrapperObject_System_Threading_CancellationTokenRegistration(
                        m_InternalObject.Register(
                            WrapperHelper.UnwrapObject < Action >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) ) ),
                    2 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < CancellationToken >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ThrowIfCancellationRequested"] = new BSFunctionReference(
                new BSFunction(
                    "function ThrowIfCancellationRequested()",
                    a =>
                    {
                        m_InternalObject.ThrowIfCancellationRequested();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Threading_CancellationToken : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Threading_CancellationToken() : base( typeof( CancellationToken ) )
        {
            m_StaticProperties["None"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Threading_CancellationToken( CancellationToken.None ),
                null );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Threading_CancellationToken()
        {
            WrapperHelper.AddRecastWrapper < CancellationToken >(
                o => new BSWrapperObject_System_Threading_CancellationToken( o ) );
        }

        #endregion
    }

    public class
        BSWrapperObject_System_Threading_CancellationTokenRegistration : BSWrapperObject < CancellationTokenRegistration
        >

    {
        #region Public

        public BSWrapperObject_System_Threading_CancellationTokenRegistration( CancellationTokenRegistration obj ) :
            base( obj )
        {
            m_Properties["Dispose"] = new BSFunctionReference(
                new BSFunction(
                    "function Dispose()",
                    a =>
                    {
                        m_InternalObject.Dispose();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < CancellationTokenRegistration >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Threading_CancellationTokenRegistration : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Threading_CancellationTokenRegistration() : base(
            typeof( CancellationTokenRegistration ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Threading_CancellationTokenRegistration()
        {
            WrapperHelper.AddRecastWrapper < CancellationTokenRegistration >(
                o => new BSWrapperObject_System_Threading_CancellationTokenRegistration( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Action : BSWrapperObject < Action >

    {
        #region Public

        public BSWrapperObject_System_Action( Action obj ) : base( obj )
        {
            m_Properties["Method"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_MethodInfo( m_InternalObject.Method ),
                null );

            m_Properties["Target"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.Target ),
                null );

            m_Properties["Invoke"] = new BSFunctionReference(
                new BSFunction(
                    "function Invoke()",
                    a =>
                    {
                        m_InternalObject.Invoke();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["BeginInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function BeginInvoke(callback, object)",
                    a => new BSWrapperObject_System_IAsyncResult(
                        m_InternalObject.BeginInvoke(
                            WrapperHelper.UnwrapObject < AsyncCallback >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) ) ),
                    2 ) );

            m_Properties["EndInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function EndInvoke(result)",
                    a =>
                    {
                        m_InternalObject.EndInvoke( WrapperHelper.UnwrapObject < IAsyncResult >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetObjectData"] = new BSFunctionReference(
                new BSFunction(
                    "function GetObjectData(info, context)",
                    a =>
                    {
                        m_InternalObject.GetObjectData(
                            WrapperHelper.UnwrapObject < SerializationInfo >( a[0] ),
                            WrapperHelper.UnwrapObject < StreamingContext >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Clone"] = new BSFunctionReference(
                new BSFunction(
                    "function Clone()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.Clone() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Action : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Action() : base( typeof( Action ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Action()
        {
            WrapperHelper.AddRecastWrapper < Action >( o => new BSWrapperObject_System_Action( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Threading_Tasks_TaskScheduler : BSWrapperObject < TaskScheduler >

    {
        #region Public

        public BSWrapperObject_System_Threading_Tasks_TaskScheduler( TaskScheduler obj ) : base( obj )
        {
            m_Properties["MaximumConcurrencyLevel"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.MaximumConcurrencyLevel ),
                null );

            m_Properties["Id"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Id ),
                null );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Threading_Tasks_TaskScheduler : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Threading_Tasks_TaskScheduler() : base( typeof( TaskScheduler ) )
        {
            m_StaticProperties["Default"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Threading_Tasks_TaskScheduler( TaskScheduler.Default ),
                null );

            m_StaticProperties["Current"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Threading_Tasks_TaskScheduler( TaskScheduler.Current ),
                null );

            m_StaticProperties["FromCurrentSynchronizationContext"] = new BSFunctionReference(
                new BSFunction(
                    "function FromCurrentSynchronizationContext()",
                    a => new BSWrapperObject_System_Threading_Tasks_TaskScheduler(
                        TaskScheduler.FromCurrentSynchronizationContext() ),
                    0 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Threading_Tasks_TaskScheduler()
        {
            WrapperHelper.AddRecastWrapper < TaskScheduler >(
                o => new BSWrapperObject_System_Threading_Tasks_TaskScheduler( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_AggregateException : BSWrapperObject < AggregateException >

    {
        #region Public

        public BSWrapperObject_System_AggregateException( AggregateException obj ) : base( obj )
        {
            m_Properties["Message"] = new BSReflectionReference( () => new BSObject( m_InternalObject.Message ), null );

            m_Properties["Data"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Collections_IDictionary( m_InternalObject.Data ),
                null );

            m_Properties["InnerException"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Exception( m_InternalObject.InnerException ),
                null );

            m_Properties["TargetSite"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_MethodBase( m_InternalObject.TargetSite ),
                null );

            m_Properties["StackTrace"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.StackTrace ),
                null );

            m_Properties["HelpLink"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.HelpLink ),
                x => m_InternalObject.HelpLink = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["Source"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.Source ),
                x => m_InternalObject.Source = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["HResult"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.HResult ),
                null );

            m_Properties["GetObjectData"] = new BSFunctionReference(
                new BSFunction(
                    "function GetObjectData(info, context)",
                    a =>
                    {
                        m_InternalObject.GetObjectData(
                            WrapperHelper.UnwrapObject < SerializationInfo >( a[0] ),
                            WrapperHelper.UnwrapObject < StreamingContext >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetBaseException"] = new BSFunctionReference(
                new BSFunction(
                    "function GetBaseException()",
                    a => new BSWrapperObject_System_Exception( m_InternalObject.GetBaseException() ),
                    0 ) );

            m_Properties["Flatten"] = new BSFunctionReference(
                new BSFunction(
                    "function Flatten()",
                    a => new BSWrapperObject_System_AggregateException( m_InternalObject.Flatten() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_AggregateException : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_AggregateException() : base( typeof( AggregateException ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_AggregateException()
        {
            WrapperHelper.AddRecastWrapper < AggregateException >(
                o => new BSWrapperObject_System_AggregateException( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Exception : BSWrapperObject < Exception >

    {
        #region Public

        public BSWrapperObject_System_Exception( Exception obj ) : base( obj )
        {
            m_Properties["Message"] = new BSReflectionReference( () => new BSObject( m_InternalObject.Message ), null );

            m_Properties["Data"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Collections_IDictionary( m_InternalObject.Data ),
                null );

            m_Properties["InnerException"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Exception( m_InternalObject.InnerException ),
                null );

            m_Properties["TargetSite"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_MethodBase( m_InternalObject.TargetSite ),
                null );

            m_Properties["StackTrace"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.StackTrace ),
                null );

            m_Properties["HelpLink"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.HelpLink ),
                x => m_InternalObject.HelpLink = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["Source"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.Source ),
                x => m_InternalObject.Source = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["HResult"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.HResult ),
                null );

            m_Properties["GetBaseException"] = new BSFunctionReference(
                new BSFunction(
                    "function GetBaseException()",
                    a => new BSWrapperObject_System_Exception( m_InternalObject.GetBaseException() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["GetObjectData"] = new BSFunctionReference(
                new BSFunction(
                    "function GetObjectData(info, context)",
                    a =>
                    {
                        m_InternalObject.GetObjectData(
                            WrapperHelper.UnwrapObject < SerializationInfo >( a[0] ),
                            WrapperHelper.UnwrapObject < StreamingContext >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Exception : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Exception() : base( typeof( Exception ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Exception()
        {
            WrapperHelper.AddRecastWrapper < Exception >( o => new BSWrapperObject_System_Exception( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Reflection_MethodBase : BSWrapperObject < MethodBase >

    {
        #region Public

        public BSWrapperObject_System_Reflection_MethodBase( MethodBase obj ) : base( obj )
        {
            m_Properties["MethodHandle"] = new BSReflectionReference(
                () => new BSWrapperObject_System_RuntimeMethodHandle( m_InternalObject.MethodHandle ),
                null );

            m_Properties["IsGenericMethodDefinition"] = new BSReflectionReference(
                () => m_InternalObject.IsGenericMethodDefinition ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["ContainsGenericParameters"] = new BSReflectionReference(
                () => m_InternalObject.ContainsGenericParameters ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsGenericMethod"] = new BSReflectionReference(
                () => m_InternalObject.IsGenericMethod ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsSecurityCritical"] = new BSReflectionReference(
                () => m_InternalObject.IsSecurityCritical ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsSecuritySafeCritical"] = new BSReflectionReference(
                () => m_InternalObject.IsSecuritySafeCritical ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsSecurityTransparent"] = new BSReflectionReference(
                () => m_InternalObject.IsSecurityTransparent ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsPublic"] = new BSReflectionReference(
                () => m_InternalObject.IsPublic ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsPrivate"] = new BSReflectionReference(
                () => m_InternalObject.IsPrivate ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsFamily"] = new BSReflectionReference(
                () => m_InternalObject.IsFamily ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsAssembly"] = new BSReflectionReference(
                () => m_InternalObject.IsAssembly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsFamilyAndAssembly"] = new BSReflectionReference(
                () => m_InternalObject.IsFamilyAndAssembly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsFamilyOrAssembly"] = new BSReflectionReference(
                () => m_InternalObject.IsFamilyOrAssembly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsStatic"] = new BSReflectionReference(
                () => m_InternalObject.IsStatic ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsFinal"] = new BSReflectionReference(
                () => m_InternalObject.IsFinal ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsVirtual"] = new BSReflectionReference(
                () => m_InternalObject.IsVirtual ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsHideBySig"] = new BSReflectionReference(
                () => m_InternalObject.IsHideBySig ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsAbstract"] = new BSReflectionReference(
                () => m_InternalObject.IsAbstract ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsSpecialName"] = new BSReflectionReference(
                () => m_InternalObject.IsSpecialName ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsConstructor"] = new BSReflectionReference(
                () => m_InternalObject.IsConstructor ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["Name"] = new BSReflectionReference( () => new BSObject( m_InternalObject.Name ), null );

            m_Properties["MetadataToken"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.MetadataToken ),
                null );

            m_Properties["Module"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_Module( m_InternalObject.Module ),
                null );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["GetMethodBody"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMethodBody()",
                    a => new BSWrapperObject_System_Reflection_MethodBody( m_InternalObject.GetMethodBody() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Reflection_MethodBase : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Reflection_MethodBase() : base( typeof( MethodBase ) )
        {
            m_StaticProperties["GetMethodFromHandle"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMethodFromHandle(handle)",
                    a => new BSWrapperObject_System_Reflection_MethodBase(
                        MethodBase.GetMethodFromHandle( WrapperHelper.UnwrapObject < RuntimeMethodHandle >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetMethodFromHandle"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMethodFromHandle(handle, declaringType)",
                    a => new BSWrapperObject_System_Reflection_MethodBase(
                        MethodBase.GetMethodFromHandle(
                            WrapperHelper.UnwrapObject < RuntimeMethodHandle >( a[0] ),
                            WrapperHelper.UnwrapObject < RuntimeTypeHandle >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["GetCurrentMethod"] = new BSFunctionReference(
                new BSFunction(
                    "function GetCurrentMethod()",
                    a => new BSWrapperObject_System_Reflection_MethodBase( MethodBase.GetCurrentMethod() ),
                    0 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Reflection_MethodBase()
        {
            WrapperHelper.AddRecastWrapper < MethodBase >( o => new BSWrapperObject_System_Reflection_MethodBase( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_RuntimeMethodHandle : BSWrapperObject < RuntimeMethodHandle >

    {
        #region Public

        public BSWrapperObject_System_RuntimeMethodHandle( RuntimeMethodHandle obj ) : base( obj )
        {
            m_Properties["Value"] = new BSReflectionReference(
                () => new BSWrapperObject_System_IntPtr( m_InternalObject.Value ),
                null );

            m_Properties["GetObjectData"] = new BSFunctionReference(
                new BSFunction(
                    "function GetObjectData(info, context)",
                    a =>
                    {
                        m_InternalObject.GetObjectData(
                            WrapperHelper.UnwrapObject < SerializationInfo >( a[0] ),
                            WrapperHelper.UnwrapObject < StreamingContext >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetFunctionPointer"] = new BSFunctionReference(
                new BSFunction(
                    "function GetFunctionPointer()",
                    a => new BSWrapperObject_System_IntPtr( m_InternalObject.GetFunctionPointer() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(handle)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < RuntimeMethodHandle >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_RuntimeMethodHandle : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_RuntimeMethodHandle() : base( typeof( RuntimeMethodHandle ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_RuntimeMethodHandle()
        {
            WrapperHelper.AddRecastWrapper < RuntimeMethodHandle >(
                o => new BSWrapperObject_System_RuntimeMethodHandle( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Reflection_Binder : BSWrapperObject < Binder >

    {
        #region Public

        public BSWrapperObject_System_Reflection_Binder( Binder obj ) : base( obj )
        {
            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Reflection_Binder : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Reflection_Binder() : base( typeof( Binder ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Reflection_Binder()
        {
            WrapperHelper.AddRecastWrapper < Binder >( o => new BSWrapperObject_System_Reflection_Binder( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Reflection_FieldInfo : BSWrapperObject < FieldInfo >

    {
        #region Public

        public BSWrapperObject_System_Reflection_FieldInfo( FieldInfo obj ) : base( obj )
        {
            m_Properties["FieldHandle"] = new BSReflectionReference(
                () => new BSWrapperObject_System_RuntimeFieldHandle( m_InternalObject.FieldHandle ),
                null );

            m_Properties["IsLiteral"] = new BSReflectionReference(
                () => m_InternalObject.IsLiteral ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsStatic"] = new BSReflectionReference(
                () => m_InternalObject.IsStatic ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsInitOnly"] = new BSReflectionReference(
                () => m_InternalObject.IsInitOnly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsPublic"] = new BSReflectionReference(
                () => m_InternalObject.IsPublic ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsPrivate"] = new BSReflectionReference(
                () => m_InternalObject.IsPrivate ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsFamily"] = new BSReflectionReference(
                () => m_InternalObject.IsFamily ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsAssembly"] = new BSReflectionReference(
                () => m_InternalObject.IsAssembly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsFamilyAndAssembly"] = new BSReflectionReference(
                () => m_InternalObject.IsFamilyAndAssembly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsFamilyOrAssembly"] = new BSReflectionReference(
                () => m_InternalObject.IsFamilyOrAssembly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsPinvokeImpl"] = new BSReflectionReference(
                () => m_InternalObject.IsPinvokeImpl ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsSpecialName"] = new BSReflectionReference(
                () => m_InternalObject.IsSpecialName ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsNotSerialized"] = new BSReflectionReference(
                () => m_InternalObject.IsNotSerialized ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsSecurityCritical"] = new BSReflectionReference(
                () => m_InternalObject.IsSecurityCritical ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsSecuritySafeCritical"] = new BSReflectionReference(
                () => m_InternalObject.IsSecuritySafeCritical ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsSecurityTransparent"] = new BSReflectionReference(
                () => m_InternalObject.IsSecurityTransparent ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["Name"] = new BSReflectionReference( () => new BSObject( m_InternalObject.Name ), null );

            m_Properties["MetadataToken"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.MetadataToken ),
                null );

            m_Properties["Module"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_Module( m_InternalObject.Module ),
                null );

            m_Properties["GetValue"] = new BSFunctionReference(
                new BSFunction(
                    "function GetValue(obj)",
                    a => new BSWrapperObject_System_Object(
                        m_InternalObject.GetValue( WrapperHelper.UnwrapObject < object >( a[0] ) ) ),
                    1 ) );

            m_Properties["SetValue"] = new BSFunctionReference(
                new BSFunction(
                    "function SetValue(obj, value)",
                    a =>
                    {
                        m_InternalObject.SetValue(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetRawConstantValue"] = new BSFunctionReference(
                new BSFunction(
                    "function GetRawConstantValue()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.GetRawConstantValue() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Reflection_FieldInfo : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Reflection_FieldInfo() : base( typeof( FieldInfo ) )
        {
            m_StaticProperties["GetFieldFromHandle"] = new BSFunctionReference(
                new BSFunction(
                    "function GetFieldFromHandle(handle)",
                    a => new BSWrapperObject_System_Reflection_FieldInfo(
                        FieldInfo.GetFieldFromHandle( WrapperHelper.UnwrapObject < RuntimeFieldHandle >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GetFieldFromHandle"] = new BSFunctionReference(
                new BSFunction(
                    "function GetFieldFromHandle(handle, declaringType)",
                    a => new BSWrapperObject_System_Reflection_FieldInfo(
                        FieldInfo.GetFieldFromHandle(
                            WrapperHelper.UnwrapObject < RuntimeFieldHandle >( a[0] ),
                            WrapperHelper.UnwrapObject < RuntimeTypeHandle >( a[1] ) ) ),
                    2 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Reflection_FieldInfo()
        {
            WrapperHelper.AddRecastWrapper < FieldInfo >( o => new BSWrapperObject_System_Reflection_FieldInfo( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_RuntimeTypeHandle : BSWrapperObject < RuntimeTypeHandle >

    {
        #region Public

        public BSWrapperObject_System_RuntimeTypeHandle( RuntimeTypeHandle obj ) : base( obj )
        {
            m_Properties["Value"] = new BSReflectionReference(
                () => new BSWrapperObject_System_IntPtr( m_InternalObject.Value ),
                null );

            m_Properties["GetObjectData"] = new BSFunctionReference(
                new BSFunction(
                    "function GetObjectData(info, context)",
                    a =>
                    {
                        m_InternalObject.GetObjectData(
                            WrapperHelper.UnwrapObject < SerializationInfo >( a[0] ),
                            WrapperHelper.UnwrapObject < StreamingContext >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(handle)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < RuntimeTypeHandle >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["GetModuleHandle"] = new BSFunctionReference(
                new BSFunction(
                    "function GetModuleHandle()",
                    a => new BSWrapperObject_System_ModuleHandle( m_InternalObject.GetModuleHandle() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_RuntimeTypeHandle : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_RuntimeTypeHandle() : base( typeof( RuntimeTypeHandle ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_RuntimeTypeHandle()
        {
            WrapperHelper.AddRecastWrapper < RuntimeTypeHandle >(
                o => new BSWrapperObject_System_RuntimeTypeHandle( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Reflection_PropertyInfo : BSWrapperObject < PropertyInfo >

    {
        #region Public

        public BSWrapperObject_System_Reflection_PropertyInfo( PropertyInfo obj ) : base( obj )
        {
            m_Properties["CanRead"] = new BSReflectionReference(
                () => m_InternalObject.CanRead ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["CanWrite"] = new BSReflectionReference(
                () => m_InternalObject.CanWrite ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["GetMethod"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_MethodInfo( m_InternalObject.GetMethod ),
                null );

            m_Properties["SetMethod"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_MethodInfo( m_InternalObject.SetMethod ),
                null );

            m_Properties["IsSpecialName"] = new BSReflectionReference(
                () => m_InternalObject.IsSpecialName ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["Name"] = new BSReflectionReference( () => new BSObject( m_InternalObject.Name ), null );

            m_Properties["MetadataToken"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.MetadataToken ),
                null );

            m_Properties["Module"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_Module( m_InternalObject.Module ),
                null );

            m_Properties["GetGetMethod"] = new BSFunctionReference(
                new BSFunction(
                    "function GetGetMethod()",
                    a => new BSWrapperObject_System_Reflection_MethodInfo( m_InternalObject.GetGetMethod() ),
                    0 ) );

            m_Properties["GetGetMethod"] = new BSFunctionReference(
                new BSFunction(
                    "function GetGetMethod(nonPublic)",
                    a => new BSWrapperObject_System_Reflection_MethodInfo(
                        m_InternalObject.GetGetMethod( WrapperHelper.UnwrapObject < bool >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetSetMethod"] = new BSFunctionReference(
                new BSFunction(
                    "function GetSetMethod()",
                    a => new BSWrapperObject_System_Reflection_MethodInfo( m_InternalObject.GetSetMethod() ),
                    0 ) );

            m_Properties["GetSetMethod"] = new BSFunctionReference(
                new BSFunction(
                    "function GetSetMethod(nonPublic)",
                    a => new BSWrapperObject_System_Reflection_MethodInfo(
                        m_InternalObject.GetSetMethod( WrapperHelper.UnwrapObject < bool >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetValue"] = new BSFunctionReference(
                new BSFunction(
                    "function GetValue(obj)",
                    a => new BSWrapperObject_System_Object(
                        m_InternalObject.GetValue( WrapperHelper.UnwrapObject < object >( a[0] ) ) ),
                    1 ) );

            m_Properties["SetValue"] = new BSFunctionReference(
                new BSFunction(
                    "function SetValue(obj, value)",
                    a =>
                    {
                        m_InternalObject.SetValue(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetConstantValue"] = new BSFunctionReference(
                new BSFunction(
                    "function GetConstantValue()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.GetConstantValue() ),
                    0 ) );

            m_Properties["GetRawConstantValue"] = new BSFunctionReference(
                new BSFunction(
                    "function GetRawConstantValue()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.GetRawConstantValue() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Reflection_PropertyInfo : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Reflection_PropertyInfo() : base( typeof( PropertyInfo ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Reflection_PropertyInfo()
        {
            WrapperHelper.AddRecastWrapper < PropertyInfo >(
                o => new BSWrapperObject_System_Reflection_PropertyInfo( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Reflection_MethodBody : BSWrapperObject < MethodBody >

    {
        #region Public

        public BSWrapperObject_System_Reflection_MethodBody( MethodBody obj ) : base( obj )
        {
            m_Properties["InitLocals"] = new BSReflectionReference(
                () => m_InternalObject.InitLocals ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["LocalSignatureMetadataToken"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.LocalSignatureMetadataToken ),
                null );

            m_Properties["MaxStackSize"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.MaxStackSize ),
                null );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Reflection_MethodBody : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Reflection_MethodBody() : base( typeof( MethodBody ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Reflection_MethodBody()
        {
            WrapperHelper.AddRecastWrapper < MethodBody >( o => new BSWrapperObject_System_Reflection_MethodBody( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Runtime_CompilerServices_TaskAwaiter : BSWrapperObject < TaskAwaiter >

    {
        #region Public

        public BSWrapperObject_System_Runtime_CompilerServices_TaskAwaiter( TaskAwaiter obj ) : base( obj )
        {
            m_Properties["IsCompleted"] = new BSReflectionReference(
                () => m_InternalObject.IsCompleted ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["OnCompleted"] = new BSFunctionReference(
                new BSFunction(
                    "function OnCompleted(continuation)",
                    a =>
                    {
                        m_InternalObject.OnCompleted( WrapperHelper.UnwrapObject < Action >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["UnsafeOnCompleted"] = new BSFunctionReference(
                new BSFunction(
                    "function UnsafeOnCompleted(continuation)",
                    a =>
                    {
                        m_InternalObject.UnsafeOnCompleted( WrapperHelper.UnwrapObject < Action >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetResult"] = new BSFunctionReference(
                new BSFunction(
                    "function GetResult()",
                    a =>
                    {
                        m_InternalObject.GetResult();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Runtime_CompilerServices_TaskAwaiter : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Runtime_CompilerServices_TaskAwaiter() : base( typeof( TaskAwaiter ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Runtime_CompilerServices_TaskAwaiter()
        {
            WrapperHelper.AddRecastWrapper < TaskAwaiter >(
                o => new BSWrapperObject_System_Runtime_CompilerServices_TaskAwaiter( o ) );
        }

        #endregion
    }

    public class
        BSWrapperObject_System_Runtime_CompilerServices_ConfiguredTaskAwaitable : BSWrapperObject <
            ConfiguredTaskAwaitable >

    {
        #region Public

        public BSWrapperObject_System_Runtime_CompilerServices_ConfiguredTaskAwaitable( ConfiguredTaskAwaitable obj ) :
            base( obj )
        {
            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Runtime_CompilerServices_ConfiguredTaskAwaitable : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Runtime_CompilerServices_ConfiguredTaskAwaitable() : base(
            typeof( ConfiguredTaskAwaitable ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Runtime_CompilerServices_ConfiguredTaskAwaitable()
        {
            WrapperHelper.AddRecastWrapper < ConfiguredTaskAwaitable >(
                o => new BSWrapperObject_System_Runtime_CompilerServices_ConfiguredTaskAwaitable( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Runtime_CompilerServices_YieldAwaitable : BSWrapperObject < YieldAwaitable >

    {
        #region Public

        public BSWrapperObject_System_Runtime_CompilerServices_YieldAwaitable( YieldAwaitable obj ) : base( obj )
        {
            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Runtime_CompilerServices_YieldAwaitable : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Runtime_CompilerServices_YieldAwaitable() : base( typeof( YieldAwaitable ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Runtime_CompilerServices_YieldAwaitable()
        {
            WrapperHelper.AddRecastWrapper < YieldAwaitable >(
                o => new BSWrapperObject_System_Runtime_CompilerServices_YieldAwaitable( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_IO_Stream : BSWrapperObject < Stream >

    {
        #region Public

        public BSWrapperObject_System_IO_Stream( Stream obj ) : base( obj )
        {
            m_Properties["CanRead"] = new BSReflectionReference(
                () => m_InternalObject.CanRead ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["CanSeek"] = new BSReflectionReference(
                () => m_InternalObject.CanSeek ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["CanTimeout"] = new BSReflectionReference(
                () => m_InternalObject.CanTimeout ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["CanWrite"] = new BSReflectionReference(
                () => m_InternalObject.CanWrite ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["Length"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Length ),
                null );

            m_Properties["Position"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Position ),
                x => m_InternalObject.Position = WrapperHelper.UnwrapObject < long >( x ) );

            m_Properties["ReadTimeout"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.ReadTimeout ),
                x => m_InternalObject.ReadTimeout = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["WriteTimeout"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.WriteTimeout ),
                x => m_InternalObject.WriteTimeout = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["CopyToAsync"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyToAsync(destination)",
                    a => new BSWrapperObject_System_Threading_Tasks_Task(
                        m_InternalObject.CopyToAsync( WrapperHelper.UnwrapObject < Stream >( a[0] ) ) ),
                    1 ) );

            m_Properties["CopyToAsync"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyToAsync(destination, bufferSize)",
                    a => new BSWrapperObject_System_Threading_Tasks_Task(
                        m_InternalObject.CopyToAsync(
                            WrapperHelper.UnwrapObject < Stream >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_Properties["CopyToAsync"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyToAsync(destination, bufferSize, cancellationToken)",
                    a => new BSWrapperObject_System_Threading_Tasks_Task(
                        m_InternalObject.CopyToAsync(
                            WrapperHelper.UnwrapObject < Stream >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < CancellationToken >( a[2] ) ) ),
                    3 ) );

            m_Properties["CopyTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyTo(destination)",
                    a =>
                    {
                        m_InternalObject.CopyTo( WrapperHelper.UnwrapObject < Stream >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["CopyTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CopyTo(destination, bufferSize)",
                    a =>
                    {
                        m_InternalObject.CopyTo(
                            WrapperHelper.UnwrapObject < Stream >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Close"] = new BSFunctionReference(
                new BSFunction(
                    "function Close()",
                    a =>
                    {
                        m_InternalObject.Close();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Dispose"] = new BSFunctionReference(
                new BSFunction(
                    "function Dispose()",
                    a =>
                    {
                        m_InternalObject.Dispose();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Flush"] = new BSFunctionReference(
                new BSFunction(
                    "function Flush()",
                    a =>
                    {
                        m_InternalObject.Flush();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["FlushAsync"] = new BSFunctionReference(
                new BSFunction(
                    "function FlushAsync()",
                    a => new BSWrapperObject_System_Threading_Tasks_Task( m_InternalObject.FlushAsync() ),
                    0 ) );

            m_Properties["FlushAsync"] = new BSFunctionReference(
                new BSFunction(
                    "function FlushAsync(cancellationToken)",
                    a => new BSWrapperObject_System_Threading_Tasks_Task(
                        m_InternalObject.FlushAsync( WrapperHelper.UnwrapObject < CancellationToken >( a[0] ) ) ),
                    1 ) );

            m_Properties["EndRead"] = new BSFunctionReference(
                new BSFunction(
                    "function EndRead(asyncResult)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.EndRead( WrapperHelper.UnwrapObject < IAsyncResult >( a[0] ) ) ),
                    1 ) );

            m_Properties["EndWrite"] = new BSFunctionReference(
                new BSFunction(
                    "function EndWrite(asyncResult)",
                    a =>
                    {
                        m_InternalObject.EndWrite( WrapperHelper.UnwrapObject < IAsyncResult >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetLength"] = new BSFunctionReference(
                new BSFunction(
                    "function SetLength(value)",
                    a =>
                    {
                        m_InternalObject.SetLength( WrapperHelper.UnwrapObject < long >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["ReadByte"] = new BSFunctionReference(
                new BSFunction(
                    "function ReadByte()",
                    a => new BSObject( ( decimal ) m_InternalObject.ReadByte() ),
                    0 ) );

            m_Properties["WriteByte"] = new BSFunctionReference(
                new BSFunction(
                    "function WriteByte(value)",
                    a =>
                    {
                        m_InternalObject.WriteByte( WrapperHelper.UnwrapObject < byte >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetLifetimeService"] = new BSFunctionReference(
                new BSFunction(
                    "function GetLifetimeService()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.GetLifetimeService() ),
                    0 ) );

            m_Properties["InitializeLifetimeService"] = new BSFunctionReference(
                new BSFunction(
                    "function InitializeLifetimeService()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.InitializeLifetimeService() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_IO_Stream : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_IO_Stream() : base( typeof( Stream ) )
        {
            m_StaticProperties["Null"] = new BSReflectionReference(
                () => new BSWrapperObject_System_IO_Stream( Stream.Null ),
                null );

            m_StaticProperties["Synchronized"] = new BSFunctionReference(
                new BSFunction(
                    "function Synchronized(stream)",
                    a => new BSWrapperObject_System_IO_Stream(
                        Stream.Synchronized( WrapperHelper.UnwrapObject < Stream >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_IO_Stream()
        {
            WrapperHelper.AddRecastWrapper < Stream >( o => new BSWrapperObject_System_IO_Stream( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Reflection_AssemblyName : BSWrapperObject < AssemblyName >

    {
        #region Public

        public BSWrapperObject_System_Reflection_AssemblyName( AssemblyName obj ) : base( obj )
        {
            m_Properties["Name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.Name ),
                x => m_InternalObject.Name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["CodeBase"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.CodeBase ),
                x => m_InternalObject.CodeBase = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["EscapedCodeBase"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.EscapedCodeBase ),
                null );

            m_Properties["CultureInfo"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Globalization_CultureInfo( m_InternalObject.CultureInfo ),
                x => m_InternalObject.CultureInfo = WrapperHelper.UnwrapObject < CultureInfo >( x ) );

            m_Properties["FullName"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.FullName ),
                null );

            m_Properties["KeyPair"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_StrongNameKeyPair( m_InternalObject.KeyPair ),
                x => m_InternalObject.KeyPair = WrapperHelper.UnwrapObject < StrongNameKeyPair >( x ) );

            m_Properties["Version"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Version( m_InternalObject.Version ),
                x => m_InternalObject.Version = WrapperHelper.UnwrapObject < Version >( x ) );

            m_Properties["CultureName"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.CultureName ),
                x => m_InternalObject.CultureName = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["GetObjectData"] = new BSFunctionReference(
                new BSFunction(
                    "function GetObjectData(info, context)",
                    a =>
                    {
                        m_InternalObject.GetObjectData(
                            WrapperHelper.UnwrapObject < SerializationInfo >( a[0] ),
                            WrapperHelper.UnwrapObject < StreamingContext >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Clone"] = new BSFunctionReference(
                new BSFunction(
                    "function Clone()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.Clone() ),
                    0 ) );

            m_Properties["OnDeserialization"] = new BSFunctionReference(
                new BSFunction(
                    "function OnDeserialization(sender)",
                    a =>
                    {
                        m_InternalObject.OnDeserialization( WrapperHelper.UnwrapObject < object >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Reflection_AssemblyName : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Reflection_AssemblyName() : base( typeof( AssemblyName ) )
        {
            m_StaticProperties["ReferenceMatchesDefinition"] = new BSFunctionReference(
                new BSFunction(
                    "function ReferenceMatchesDefinition(reference, definition)",
                    a => AssemblyName.ReferenceMatchesDefinition(
                        WrapperHelper.UnwrapObject < AssemblyName >( a[0] ),
                        WrapperHelper.UnwrapObject < AssemblyName >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["GetAssemblyName"] = new BSFunctionReference(
                new BSFunction(
                    "function GetAssemblyName(assemblyFile)",
                    a => new BSWrapperObject_System_Reflection_AssemblyName(
                        AssemblyName.GetAssemblyName( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Reflection_AssemblyName()
        {
            WrapperHelper.AddRecastWrapper < AssemblyName >(
                o => new BSWrapperObject_System_Reflection_AssemblyName( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Reflection_StrongNameKeyPair : BSWrapperObject < StrongNameKeyPair >

    {
        #region Public

        public BSWrapperObject_System_Reflection_StrongNameKeyPair( StrongNameKeyPair obj ) : base( obj )
        {
            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Reflection_StrongNameKeyPair : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Reflection_StrongNameKeyPair() : base( typeof( StrongNameKeyPair ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Reflection_StrongNameKeyPair()
        {
            WrapperHelper.AddRecastWrapper < StrongNameKeyPair >(
                o => new BSWrapperObject_System_Reflection_StrongNameKeyPair( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Version : BSWrapperObject < Version >

    {
        #region Public

        public BSWrapperObject_System_Version( Version obj ) : base( obj )
        {
            m_Properties["Major"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Major ),
                null );

            m_Properties["Minor"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Minor ),
                null );

            m_Properties["Build"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Build ),
                null );

            m_Properties["Revision"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Revision ),
                null );

            m_Properties["MajorRevision"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.MajorRevision ),
                null );

            m_Properties["MinorRevision"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.MinorRevision ),
                null );

            m_Properties["Clone"] = new BSFunctionReference(
                new BSFunction(
                    "function Clone()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.Clone() ),
                    0 ) );

            m_Properties["CompareTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTo(version)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.CompareTo( WrapperHelper.UnwrapObject < object >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTo"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTo(value)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.CompareTo( WrapperHelper.UnwrapObject < Version >( a[0] ) ) ),
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < Version >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(fieldCount)",
                    a => new BSObject( m_InternalObject.ToString( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Version : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Version() : base( typeof( Version ) )
        {
            m_StaticProperties["Parse"] = new BSFunctionReference(
                new BSFunction(
                    "function Parse(input)",
                    a => new BSWrapperObject_System_Version(
                        Version.Parse( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Version()
        {
            WrapperHelper.AddRecastWrapper < Version >( o => new BSWrapperObject_System_Version( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Reflection_ManifestResourceInfo : BSWrapperObject < ManifestResourceInfo >

    {
        #region Public

        public BSWrapperObject_System_Reflection_ManifestResourceInfo( ManifestResourceInfo obj ) : base( obj )
        {
            m_Properties["ReferencedAssembly"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_Assembly( m_InternalObject.ReferencedAssembly ),
                null );

            m_Properties["FileName"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.FileName ),
                null );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Reflection_ManifestResourceInfo : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Reflection_ManifestResourceInfo() : base( typeof( ManifestResourceInfo ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Reflection_ManifestResourceInfo()
        {
            WrapperHelper.AddRecastWrapper < ManifestResourceInfo >(
                o => new BSWrapperObject_System_Reflection_ManifestResourceInfo( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Globalization_NumberFormatInfo : BSWrapperObject < NumberFormatInfo >

    {
        #region Public

        public BSWrapperObject_System_Globalization_NumberFormatInfo( NumberFormatInfo obj ) : base( obj )
        {
            m_Properties["CurrencyDecimalDigits"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.CurrencyDecimalDigits ),
                x => m_InternalObject.CurrencyDecimalDigits = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["CurrencyDecimalSeparator"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.CurrencyDecimalSeparator ),
                x => m_InternalObject.CurrencyDecimalSeparator = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["IsReadOnly"] = new BSReflectionReference(
                () => m_InternalObject.IsReadOnly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["CurrencyGroupSeparator"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.CurrencyGroupSeparator ),
                x => m_InternalObject.CurrencyGroupSeparator = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["CurrencySymbol"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.CurrencySymbol ),
                x => m_InternalObject.CurrencySymbol = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["NaNSymbol"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.NaNSymbol ),
                x => m_InternalObject.NaNSymbol = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["CurrencyNegativePattern"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.CurrencyNegativePattern ),
                x => m_InternalObject.CurrencyNegativePattern = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["NumberNegativePattern"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.NumberNegativePattern ),
                x => m_InternalObject.NumberNegativePattern = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["PercentPositivePattern"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.PercentPositivePattern ),
                x => m_InternalObject.PercentPositivePattern = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["PercentNegativePattern"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.PercentNegativePattern ),
                x => m_InternalObject.PercentNegativePattern = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["NegativeInfinitySymbol"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.NegativeInfinitySymbol ),
                x => m_InternalObject.NegativeInfinitySymbol = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["NegativeSign"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.NegativeSign ),
                x => m_InternalObject.NegativeSign = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["NumberDecimalDigits"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.NumberDecimalDigits ),
                x => m_InternalObject.NumberDecimalDigits = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["NumberDecimalSeparator"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.NumberDecimalSeparator ),
                x => m_InternalObject.NumberDecimalSeparator = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["NumberGroupSeparator"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.NumberGroupSeparator ),
                x => m_InternalObject.NumberGroupSeparator = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["CurrencyPositivePattern"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.CurrencyPositivePattern ),
                x => m_InternalObject.CurrencyPositivePattern = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["PositiveInfinitySymbol"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.PositiveInfinitySymbol ),
                x => m_InternalObject.PositiveInfinitySymbol = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["PositiveSign"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.PositiveSign ),
                x => m_InternalObject.PositiveSign = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["PercentDecimalDigits"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.PercentDecimalDigits ),
                x => m_InternalObject.PercentDecimalDigits = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["PercentDecimalSeparator"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.PercentDecimalSeparator ),
                x => m_InternalObject.PercentDecimalSeparator = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["PercentGroupSeparator"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.PercentGroupSeparator ),
                x => m_InternalObject.PercentGroupSeparator = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["PercentSymbol"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.PercentSymbol ),
                x => m_InternalObject.PercentSymbol = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["PerMilleSymbol"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.PerMilleSymbol ),
                x => m_InternalObject.PerMilleSymbol = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["Clone"] = new BSFunctionReference(
                new BSFunction(
                    "function Clone()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.Clone() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Globalization_NumberFormatInfo : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Globalization_NumberFormatInfo() : base( typeof( NumberFormatInfo ) )
        {
            m_StaticProperties["InvariantInfo"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Globalization_NumberFormatInfo( NumberFormatInfo.InvariantInfo ),
                null );

            m_StaticProperties["CurrentInfo"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Globalization_NumberFormatInfo( NumberFormatInfo.CurrentInfo ),
                null );

            m_StaticProperties["GetInstance"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstance(formatProvider)",
                    a => new BSWrapperObject_System_Globalization_NumberFormatInfo(
                        NumberFormatInfo.GetInstance( WrapperHelper.UnwrapObject < IFormatProvider >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["ReadOnly"] = new BSFunctionReference(
                new BSFunction(
                    "function ReadOnly(nfi)",
                    a => new BSWrapperObject_System_Globalization_NumberFormatInfo(
                        NumberFormatInfo.ReadOnly( WrapperHelper.UnwrapObject < NumberFormatInfo >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Globalization_NumberFormatInfo()
        {
            WrapperHelper.AddRecastWrapper < NumberFormatInfo >(
                o => new BSWrapperObject_System_Globalization_NumberFormatInfo( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Globalization_DateTimeFormatInfo : BSWrapperObject < DateTimeFormatInfo >

    {
        #region Public

        public BSWrapperObject_System_Globalization_DateTimeFormatInfo( DateTimeFormatInfo obj ) : base( obj )
        {
            m_Properties["AMDesignator"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.AMDesignator ),
                x => m_InternalObject.AMDesignator = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["Calendar"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Globalization_Calendar( m_InternalObject.Calendar ),
                x => m_InternalObject.Calendar = WrapperHelper.UnwrapObject < Calendar >( x ) );

            m_Properties["DateSeparator"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.DateSeparator ),
                x => m_InternalObject.DateSeparator = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["FullDateTimePattern"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.FullDateTimePattern ),
                x => m_InternalObject.FullDateTimePattern = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["LongDatePattern"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.LongDatePattern ),
                x => m_InternalObject.LongDatePattern = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["LongTimePattern"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.LongTimePattern ),
                x => m_InternalObject.LongTimePattern = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["MonthDayPattern"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.MonthDayPattern ),
                x => m_InternalObject.MonthDayPattern = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["PMDesignator"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.PMDesignator ),
                x => m_InternalObject.PMDesignator = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["RFC1123Pattern"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.RFC1123Pattern ),
                null );

            m_Properties["ShortDatePattern"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.ShortDatePattern ),
                x => m_InternalObject.ShortDatePattern = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["ShortTimePattern"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.ShortTimePattern ),
                x => m_InternalObject.ShortTimePattern = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["SortableDateTimePattern"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.SortableDateTimePattern ),
                null );

            m_Properties["TimeSeparator"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.TimeSeparator ),
                x => m_InternalObject.TimeSeparator = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["UniversalSortableDateTimePattern"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.UniversalSortableDateTimePattern ),
                null );

            m_Properties["YearMonthPattern"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.YearMonthPattern ),
                x => m_InternalObject.YearMonthPattern = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["IsReadOnly"] = new BSReflectionReference(
                () => m_InternalObject.IsReadOnly ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["NativeCalendarName"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.NativeCalendarName ),
                null );

            m_Properties["Clone"] = new BSFunctionReference(
                new BSFunction(
                    "function Clone()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.Clone() ),
                    0 ) );

            m_Properties["GetEra"] = new BSFunctionReference(
                new BSFunction(
                    "function GetEra(eraName)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetEra( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetEraName"] = new BSFunctionReference(
                new BSFunction(
                    "function GetEraName(era)",
                    a => new BSObject( m_InternalObject.GetEraName( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetAbbreviatedEraName"] = new BSFunctionReference(
                new BSFunction(
                    "function GetAbbreviatedEraName(era)",
                    a => new BSObject(
                        m_InternalObject.GetAbbreviatedEraName( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetAbbreviatedMonthName"] = new BSFunctionReference(
                new BSFunction(
                    "function GetAbbreviatedMonthName(month)",
                    a => new BSObject(
                        m_InternalObject.GetAbbreviatedMonthName( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetMonthName"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMonthName(month)",
                    a => new BSObject( m_InternalObject.GetMonthName( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Globalization_DateTimeFormatInfo : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Globalization_DateTimeFormatInfo() : base( typeof( DateTimeFormatInfo ) )
        {
            m_StaticProperties["InvariantInfo"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Globalization_DateTimeFormatInfo( DateTimeFormatInfo.InvariantInfo ),
                null );

            m_StaticProperties["CurrentInfo"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Globalization_DateTimeFormatInfo( DateTimeFormatInfo.CurrentInfo ),
                null );

            m_StaticProperties["GetInstance"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstance(provider)",
                    a => new BSWrapperObject_System_Globalization_DateTimeFormatInfo(
                        DateTimeFormatInfo.GetInstance( WrapperHelper.UnwrapObject < IFormatProvider >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["ReadOnly"] = new BSFunctionReference(
                new BSFunction(
                    "function ReadOnly(dtfi)",
                    a => new BSWrapperObject_System_Globalization_DateTimeFormatInfo(
                        DateTimeFormatInfo.ReadOnly( WrapperHelper.UnwrapObject < DateTimeFormatInfo >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Globalization_DateTimeFormatInfo()
        {
            WrapperHelper.AddRecastWrapper < DateTimeFormatInfo >(
                o => new BSWrapperObject_System_Globalization_DateTimeFormatInfo( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Reflection_TypeFilter : BSWrapperObject < TypeFilter >

    {
        #region Public

        public BSWrapperObject_System_Reflection_TypeFilter( TypeFilter obj ) : base( obj )
        {
            m_Properties["Method"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Reflection_MethodInfo( m_InternalObject.Method ),
                null );

            m_Properties["Target"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Object( m_InternalObject.Target ),
                null );

            m_Properties["EndInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function EndInvoke(result)",
                    a => m_InternalObject.EndInvoke( WrapperHelper.UnwrapObject < IAsyncResult >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetObjectData"] = new BSFunctionReference(
                new BSFunction(
                    "function GetObjectData(info, context)",
                    a =>
                    {
                        m_InternalObject.GetObjectData(
                            WrapperHelper.UnwrapObject < SerializationInfo >( a[0] ),
                            WrapperHelper.UnwrapObject < StreamingContext >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Clone"] = new BSFunctionReference(
                new BSFunction(
                    "function Clone()",
                    a => new BSWrapperObject_System_Object( m_InternalObject.Clone() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Reflection_TypeFilter : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Reflection_TypeFilter() : base( typeof( TypeFilter ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Reflection_TypeFilter()
        {
            WrapperHelper.AddRecastWrapper < TypeFilter >( o => new BSWrapperObject_System_Reflection_TypeFilter( o ) );
        }

        #endregion
    }

    public class
        BSWrapperObject_System_Security_Cryptography_X509Certificates_X509Certificate : BSWrapperObject <
            X509Certificate >

    {
        #region Public

        public BSWrapperObject_System_Security_Cryptography_X509Certificates_X509Certificate( X509Certificate obj ) :
            base( obj )
        {
            m_Properties["Issuer"] = new BSReflectionReference( () => new BSObject( m_InternalObject.Issuer ), null );
            m_Properties["Subject"] = new BSReflectionReference( () => new BSObject( m_InternalObject.Subject ), null );

            m_Properties["Handle"] = new BSReflectionReference(
                () => new BSWrapperObject_System_IntPtr( m_InternalObject.Handle ),
                null );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < X509Certificate >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetCertHashString"] = new BSFunctionReference(
                new BSFunction(
                    "function GetCertHashString()",
                    a => new BSObject( m_InternalObject.GetCertHashString() ),
                    0 ) );

            m_Properties["GetEffectiveDateString"] = new BSFunctionReference(
                new BSFunction(
                    "function GetEffectiveDateString()",
                    a => new BSObject( m_InternalObject.GetEffectiveDateString() ),
                    0 ) );

            m_Properties["GetExpirationDateString"] = new BSFunctionReference(
                new BSFunction(
                    "function GetExpirationDateString()",
                    a => new BSObject( m_InternalObject.GetExpirationDateString() ),
                    0 ) );

            m_Properties["GetFormat"] = new BSFunctionReference(
                new BSFunction( "function GetFormat()", a => new BSObject( m_InternalObject.GetFormat() ), 0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["GetIssuerName"] = new BSFunctionReference(
                new BSFunction(
                    "function GetIssuerName()",
                    a => new BSObject( m_InternalObject.GetIssuerName() ),
                    0 ) );

            m_Properties["GetKeyAlgorithm"] = new BSFunctionReference(
                new BSFunction(
                    "function GetKeyAlgorithm()",
                    a => new BSObject( m_InternalObject.GetKeyAlgorithm() ),
                    0 ) );

            m_Properties["GetKeyAlgorithmParametersString"] = new BSFunctionReference(
                new BSFunction(
                    "function GetKeyAlgorithmParametersString()",
                    a => new BSObject( m_InternalObject.GetKeyAlgorithmParametersString() ),
                    0 ) );

            m_Properties["GetName"] = new BSFunctionReference(
                new BSFunction( "function GetName()", a => new BSObject( m_InternalObject.GetName() ), 0 ) );

            m_Properties["GetPublicKeyString"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPublicKeyString()",
                    a => new BSObject( m_InternalObject.GetPublicKeyString() ),
                    0 ) );

            m_Properties["GetRawCertDataString"] = new BSFunctionReference(
                new BSFunction(
                    "function GetRawCertDataString()",
                    a => new BSObject( m_InternalObject.GetRawCertDataString() ),
                    0 ) );

            m_Properties["GetSerialNumberString"] = new BSFunctionReference(
                new BSFunction(
                    "function GetSerialNumberString()",
                    a => new BSObject( m_InternalObject.GetSerialNumberString() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction(
                    "function ToString(fVerbose)",
                    a => new BSObject( m_InternalObject.ToString( WrapperHelper.UnwrapObject < bool >( a[0] ) ) ),
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Import"] = new BSFunctionReference(
                new BSFunction(
                    "function Import(fileName)",
                    a =>
                    {
                        m_InternalObject.Import( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Dispose"] = new BSFunctionReference(
                new BSFunction(
                    "function Dispose()",
                    a =>
                    {
                        m_InternalObject.Dispose();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Reset"] = new BSFunctionReference(
                new BSFunction(
                    "function Reset()",
                    a =>
                    {
                        m_InternalObject.Reset();

                        return new BSObject( null );
                    },
                    0 ) );

        }

        #endregion
    }

    public class
        BSStaticWrapperObject_System_Security_Cryptography_X509Certificates_X509Certificate : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Security_Cryptography_X509Certificates_X509Certificate() : base(
            typeof( X509Certificate ) )
        {
            m_StaticProperties["CreateFromCertFile"] = new BSFunctionReference(
                new BSFunction(
                    "function CreateFromCertFile(filename)",
                    a => new BSWrapperObject_System_Security_Cryptography_X509Certificates_X509Certificate(
                        X509Certificate.CreateFromCertFile( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["CreateFromSignedFile"] = new BSFunctionReference(
                new BSFunction(
                    "function CreateFromSignedFile(filename)",
                    a => new BSWrapperObject_System_Security_Cryptography_X509Certificates_X509Certificate(
                        X509Certificate.CreateFromSignedFile( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Security_Cryptography_X509Certificates_X509Certificate()
        {
            WrapperHelper.AddRecastWrapper < X509Certificate >(
                o => new BSWrapperObject_System_Security_Cryptography_X509Certificates_X509Certificate( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_System_Security_SecureString : BSWrapperObject < SecureString >

    {
        #region Public

        public BSWrapperObject_System_Security_SecureString( SecureString obj ) : base( obj )
        {
            m_Properties["Length"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.Length ),
                null );

            m_Properties["AppendChar"] = new BSFunctionReference(
                new BSFunction(
                    "function AppendChar(c)",
                    a =>
                    {
                        m_InternalObject.AppendChar( WrapperHelper.UnwrapObject < char >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Clear"] = new BSFunctionReference(
                new BSFunction(
                    "function Clear()",
                    a =>
                    {
                        m_InternalObject.Clear();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Copy"] = new BSFunctionReference(
                new BSFunction(
                    "function Copy()",
                    a => new BSWrapperObject_System_Security_SecureString( m_InternalObject.Copy() ),
                    0 ) );

            m_Properties["Dispose"] = new BSFunctionReference(
                new BSFunction(
                    "function Dispose()",
                    a =>
                    {
                        m_InternalObject.Dispose();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["InsertAt"] = new BSFunctionReference(
                new BSFunction(
                    "function InsertAt(index, c)",
                    a =>
                    {
                        m_InternalObject.InsertAt(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < char >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["IsReadOnly"] = new BSFunctionReference(
                new BSFunction(
                    "function IsReadOnly()",
                    a => m_InternalObject.IsReadOnly() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["MakeReadOnly"] = new BSFunctionReference(
                new BSFunction(
                    "function MakeReadOnly()",
                    a =>
                    {
                        m_InternalObject.MakeReadOnly();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["RemoveAt"] = new BSFunctionReference(
                new BSFunction(
                    "function RemoveAt(index)",
                    a =>
                    {
                        m_InternalObject.RemoveAt( WrapperHelper.UnwrapObject < int >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetAt"] = new BSFunctionReference(
                new BSFunction(
                    "function SetAt(index, c)",
                    a =>
                    {
                        m_InternalObject.SetAt(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < char >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Security_SecureString : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Security_SecureString() : base( typeof( SecureString ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Security_SecureString()
        {
            WrapperHelper.AddRecastWrapper < SecureString >(
                o => new BSWrapperObject_System_Security_SecureString( o ) );
        }

        #endregion
    }

    public class
        BSWrapperObject_System_Reflection_ICustomAttributeProvider : BSWrapperObject < ICustomAttributeProvider >

    {
        #region Public

        public BSWrapperObject_System_Reflection_ICustomAttributeProvider( ICustomAttributeProvider obj ) : base( obj )
        {

        }

        #endregion
    }

    public class BSStaticWrapperObject_System_Reflection_ICustomAttributeProvider : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_System_Reflection_ICustomAttributeProvider() : base(
            typeof( ICustomAttributeProvider ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_System_Reflection_ICustomAttributeProvider()
        {
            WrapperHelper.AddRecastWrapper < ICustomAttributeProvider >(
                o => new BSWrapperObject_System_Reflection_ICustomAttributeProvider( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_EventSystems_UIBehaviour : BSWrapperObject < UIBehaviour >

    {
        #region Public

        public BSWrapperObject_UnityEngine_EventSystems_UIBehaviour( UIBehaviour obj ) : base( obj )
        {
            m_Properties["useGUILayout"] = new BSReflectionReference(
                () => m_InternalObject.useGUILayout ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useGUILayout = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["runInEditMode"] = new BSReflectionReference(
                () => m_InternalObject.runInEditMode ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.runInEditMode = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isActiveAndEnabled"] = new BSReflectionReference(
                () => m_InternalObject.isActiveAndEnabled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["IsActive"] = new BSFunctionReference(
                new BSFunction(
                    "function IsActive()",
                    a => m_InternalObject.IsActive() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsDestroyed"] = new BSFunctionReference(
                new BSFunction(
                    "function IsDestroyed()",
                    a => m_InternalObject.IsDestroyed() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking()",
                    a => m_InternalObject.IsInvoking() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke()",
                    a =>
                    {
                        m_InternalObject.CancelInvoke();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Invoke"] = new BSFunctionReference(
                new BSFunction(
                    "function Invoke(methodName, time)",
                    a =>
                    {
                        m_InternalObject.Invoke(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["InvokeRepeating"] = new BSFunctionReference(
                new BSFunction(
                    "function InvokeRepeating(methodName, time, repeatRate)",
                    a =>
                    {
                        m_InternalObject.InvokeRepeating(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke(methodName)",
                    a =>
                    {
                        m_InternalObject.CancelInvoke( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking(methodName)",
                    a => m_InternalObject.IsInvoking( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName, value)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) ) ),
                    2 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine_Auto"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine_Auto(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine_Auto( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < Coroutine >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(methodName)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopAllCoroutines"] = new BSFunctionReference(
                new BSFunction(
                    "function StopAllCoroutines()",
                    a =>
                    {
                        m_InternalObject.StopAllCoroutines();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_EventSystems_UIBehaviour : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_EventSystems_UIBehaviour() : base( typeof( UIBehaviour ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_EventSystems_UIBehaviour()
        {
            WrapperHelper.AddRecastWrapper < UIBehaviour >(
                o => new BSWrapperObject_UnityEngine_EventSystems_UIBehaviour( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_UI_Image : BSWrapperObject < Image >

    {
        #region Public

        public BSWrapperObject_UnityEngine_UI_Image( Image obj ) : base( obj )
        {
            m_Properties["sprite"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Sprite( m_InternalObject.sprite ),
                x => m_InternalObject.sprite = WrapperHelper.UnwrapObject < Sprite >( x ) );

            m_Properties["overrideSprite"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Sprite( m_InternalObject.overrideSprite ),
                x => m_InternalObject.overrideSprite = WrapperHelper.UnwrapObject < Sprite >( x ) );

            m_Properties["preserveAspect"] = new BSReflectionReference(
                () => m_InternalObject.preserveAspect ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.preserveAspect = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["fillCenter"] = new BSReflectionReference(
                () => m_InternalObject.fillCenter ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.fillCenter = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["fillAmount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.fillAmount ),
                x => m_InternalObject.fillAmount = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["fillClockwise"] = new BSReflectionReference(
                () => m_InternalObject.fillClockwise ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.fillClockwise = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["fillOrigin"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.fillOrigin ),
                x => m_InternalObject.fillOrigin = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["eventAlphaThreshold"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.eventAlphaThreshold ),
                x => m_InternalObject.eventAlphaThreshold = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["alphaHitTestMinimumThreshold"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.alphaHitTestMinimumThreshold ),
                x => m_InternalObject.alphaHitTestMinimumThreshold = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["useSpriteMesh"] = new BSReflectionReference(
                () => m_InternalObject.useSpriteMesh ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useSpriteMesh = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["mainTexture"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Texture( m_InternalObject.mainTexture ),
                null );

            m_Properties["hasBorder"] = new BSReflectionReference(
                () => m_InternalObject.hasBorder ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["pixelsPerUnitMultiplier"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.pixelsPerUnitMultiplier ),
                x => m_InternalObject.pixelsPerUnitMultiplier = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["pixelsPerUnit"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.pixelsPerUnit ),
                null );

            m_Properties["material"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Material( m_InternalObject.material ),
                x => m_InternalObject.material = WrapperHelper.UnwrapObject < Material >( x ) );

            m_Properties["minWidth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.minWidth ),
                null );

            m_Properties["preferredWidth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.preferredWidth ),
                null );

            m_Properties["flexibleWidth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.flexibleWidth ),
                null );

            m_Properties["minHeight"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.minHeight ),
                null );

            m_Properties["preferredHeight"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.preferredHeight ),
                null );

            m_Properties["flexibleHeight"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.flexibleHeight ),
                null );

            m_Properties["layoutPriority"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.layoutPriority ),
                null );

            m_Properties["maskable"] = new BSReflectionReference(
                () => m_InternalObject.maskable ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.maskable = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isMaskingGraphic"] = new BSReflectionReference(
                () => m_InternalObject.isMaskingGraphic ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.isMaskingGraphic = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["color"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( m_InternalObject.color ),
                x => m_InternalObject.color = WrapperHelper.UnwrapObject < Color >( x ) );

            m_Properties["raycastTarget"] = new BSReflectionReference(
                () => m_InternalObject.raycastTarget ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.raycastTarget = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["raycastPadding"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector4( m_InternalObject.raycastPadding ),
                x => m_InternalObject.raycastPadding = WrapperHelper.UnwrapObject < Vector4 >( x ) );

            m_Properties["depth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.depth ),
                null );

            m_Properties["rectTransform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_RectTransform( m_InternalObject.rectTransform ),
                null );

            m_Properties["canvas"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Canvas( m_InternalObject.canvas ),
                null );

            m_Properties["canvasRenderer"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_CanvasRenderer( m_InternalObject.canvasRenderer ),
                null );

            m_Properties["defaultMaterial"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Material( m_InternalObject.defaultMaterial ),
                null );

            m_Properties["materialForRendering"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Material( m_InternalObject.materialForRendering ),
                null );

            m_Properties["useGUILayout"] = new BSReflectionReference(
                () => m_InternalObject.useGUILayout ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useGUILayout = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["runInEditMode"] = new BSReflectionReference(
                () => m_InternalObject.runInEditMode ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.runInEditMode = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isActiveAndEnabled"] = new BSReflectionReference(
                () => m_InternalObject.isActiveAndEnabled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["DisableSpriteOptimizations"] = new BSFunctionReference(
                new BSFunction(
                    "function DisableSpriteOptimizations()",
                    a =>
                    {
                        m_InternalObject.DisableSpriteOptimizations();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["OnBeforeSerialize"] = new BSFunctionReference(
                new BSFunction(
                    "function OnBeforeSerialize()",
                    a =>
                    {
                        m_InternalObject.OnBeforeSerialize();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["OnAfterDeserialize"] = new BSFunctionReference(
                new BSFunction(
                    "function OnAfterDeserialize()",
                    a =>
                    {
                        m_InternalObject.OnAfterDeserialize();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetNativeSize"] = new BSFunctionReference(
                new BSFunction(
                    "function SetNativeSize()",
                    a =>
                    {
                        m_InternalObject.SetNativeSize();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["CalculateLayoutInputHorizontal"] = new BSFunctionReference(
                new BSFunction(
                    "function CalculateLayoutInputHorizontal()",
                    a =>
                    {
                        m_InternalObject.CalculateLayoutInputHorizontal();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["CalculateLayoutInputVertical"] = new BSFunctionReference(
                new BSFunction(
                    "function CalculateLayoutInputVertical()",
                    a =>
                    {
                        m_InternalObject.CalculateLayoutInputVertical();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["IsRaycastLocationValid"] = new BSFunctionReference(
                new BSFunction(
                    "function IsRaycastLocationValid(screenPoint, eventCamera)",
                    a => m_InternalObject.IsRaycastLocationValid(
                        WrapperHelper.UnwrapObject < Vector2 >( a[0] ),
                        WrapperHelper.UnwrapObject < Camera >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_Properties["GetModifiedMaterial"] = new BSFunctionReference(
                new BSFunction(
                    "function GetModifiedMaterial(baseMaterial)",
                    a => new BSWrapperObject_UnityEngine_Material(
                        m_InternalObject.GetModifiedMaterial( WrapperHelper.UnwrapObject < Material >( a[0] ) ) ),
                    1 ) );

            m_Properties["Cull"] = new BSFunctionReference(
                new BSFunction(
                    "function Cull(clipRect, validRect)",
                    a =>
                    {
                        m_InternalObject.Cull(
                            WrapperHelper.UnwrapObject < Rect >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetClipRect"] = new BSFunctionReference(
                new BSFunction(
                    "function SetClipRect(clipRect, validRect)",
                    a =>
                    {
                        m_InternalObject.SetClipRect(
                            WrapperHelper.UnwrapObject < Rect >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetClipSoftness"] = new BSFunctionReference(
                new BSFunction(
                    "function SetClipSoftness(clipSoftness)",
                    a =>
                    {
                        m_InternalObject.SetClipSoftness( WrapperHelper.UnwrapObject < Vector2 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["RecalculateClipping"] = new BSFunctionReference(
                new BSFunction(
                    "function RecalculateClipping()",
                    a =>
                    {
                        m_InternalObject.RecalculateClipping();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["RecalculateMasking"] = new BSFunctionReference(
                new BSFunction(
                    "function RecalculateMasking()",
                    a =>
                    {
                        m_InternalObject.RecalculateMasking();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetAllDirty"] = new BSFunctionReference(
                new BSFunction(
                    "function SetAllDirty()",
                    a =>
                    {
                        m_InternalObject.SetAllDirty();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetLayoutDirty"] = new BSFunctionReference(
                new BSFunction(
                    "function SetLayoutDirty()",
                    a =>
                    {
                        m_InternalObject.SetLayoutDirty();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetVerticesDirty"] = new BSFunctionReference(
                new BSFunction(
                    "function SetVerticesDirty()",
                    a =>
                    {
                        m_InternalObject.SetVerticesDirty();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetMaterialDirty"] = new BSFunctionReference(
                new BSFunction(
                    "function SetMaterialDirty()",
                    a =>
                    {
                        m_InternalObject.SetMaterialDirty();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["OnCullingChanged"] = new BSFunctionReference(
                new BSFunction(
                    "function OnCullingChanged()",
                    a =>
                    {
                        m_InternalObject.OnCullingChanged();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["LayoutComplete"] = new BSFunctionReference(
                new BSFunction(
                    "function LayoutComplete()",
                    a =>
                    {
                        m_InternalObject.LayoutComplete();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GraphicUpdateComplete"] = new BSFunctionReference(
                new BSFunction(
                    "function GraphicUpdateComplete()",
                    a =>
                    {
                        m_InternalObject.GraphicUpdateComplete();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["OnRebuildRequested"] = new BSFunctionReference(
                new BSFunction(
                    "function OnRebuildRequested()",
                    a =>
                    {
                        m_InternalObject.OnRebuildRequested();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Raycast"] = new BSFunctionReference(
                new BSFunction(
                    "function Raycast(sp, eventCamera)",
                    a => m_InternalObject.Raycast(
                        WrapperHelper.UnwrapObject < Vector2 >( a[0] ),
                        WrapperHelper.UnwrapObject < Camera >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_Properties["PixelAdjustPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function PixelAdjustPoint(point)",
                    a => new BSWrapperObject_UnityEngine_Vector2(
                        m_InternalObject.PixelAdjustPoint( WrapperHelper.UnwrapObject < Vector2 >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetPixelAdjustedRect"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPixelAdjustedRect()",
                    a => new BSWrapperObject_UnityEngine_Rect( m_InternalObject.GetPixelAdjustedRect() ),
                    0 ) );

            m_Properties["CrossFadeColor"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFadeColor(targetColor, duration, ignoreTimeScale, useAlpha)",
                    a =>
                    {
                        m_InternalObject.CrossFadeColor(
                            WrapperHelper.UnwrapObject < Color >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < bool >( a[2] ),
                            WrapperHelper.UnwrapObject < bool >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["CrossFadeColor"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFadeColor(targetColor, duration, ignoreTimeScale, useAlpha, useRGB)",
                    a =>
                    {
                        m_InternalObject.CrossFadeColor(
                            WrapperHelper.UnwrapObject < Color >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < bool >( a[2] ),
                            WrapperHelper.UnwrapObject < bool >( a[3] ),
                            WrapperHelper.UnwrapObject < bool >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["CrossFadeAlpha"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFadeAlpha(alpha, duration, ignoreTimeScale)",
                    a =>
                    {
                        m_InternalObject.CrossFadeAlpha(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < bool >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["RegisterDirtyLayoutCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function RegisterDirtyLayoutCallback(action)",
                    a =>
                    {
                        m_InternalObject.RegisterDirtyLayoutCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["UnregisterDirtyLayoutCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function UnregisterDirtyLayoutCallback(action)",
                    a =>
                    {
                        m_InternalObject.UnregisterDirtyLayoutCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["RegisterDirtyVerticesCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function RegisterDirtyVerticesCallback(action)",
                    a =>
                    {
                        m_InternalObject.RegisterDirtyVerticesCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["UnregisterDirtyVerticesCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function UnregisterDirtyVerticesCallback(action)",
                    a =>
                    {
                        m_InternalObject.UnregisterDirtyVerticesCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["RegisterDirtyMaterialCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function RegisterDirtyMaterialCallback(action)",
                    a =>
                    {
                        m_InternalObject.RegisterDirtyMaterialCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["UnregisterDirtyMaterialCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function UnregisterDirtyMaterialCallback(action)",
                    a =>
                    {
                        m_InternalObject.UnregisterDirtyMaterialCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsActive"] = new BSFunctionReference(
                new BSFunction(
                    "function IsActive()",
                    a => m_InternalObject.IsActive() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsDestroyed"] = new BSFunctionReference(
                new BSFunction(
                    "function IsDestroyed()",
                    a => m_InternalObject.IsDestroyed() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking()",
                    a => m_InternalObject.IsInvoking() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke()",
                    a =>
                    {
                        m_InternalObject.CancelInvoke();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Invoke"] = new BSFunctionReference(
                new BSFunction(
                    "function Invoke(methodName, time)",
                    a =>
                    {
                        m_InternalObject.Invoke(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["InvokeRepeating"] = new BSFunctionReference(
                new BSFunction(
                    "function InvokeRepeating(methodName, time, repeatRate)",
                    a =>
                    {
                        m_InternalObject.InvokeRepeating(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke(methodName)",
                    a =>
                    {
                        m_InternalObject.CancelInvoke( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking(methodName)",
                    a => m_InternalObject.IsInvoking( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName, value)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) ) ),
                    2 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine_Auto"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine_Auto(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine_Auto( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < Coroutine >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(methodName)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopAllCoroutines"] = new BSFunctionReference(
                new BSFunction(
                    "function StopAllCoroutines()",
                    a =>
                    {
                        m_InternalObject.StopAllCoroutines();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_UI_Image : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_UI_Image() : base( typeof( Image ) )
        {
            m_StaticProperties["defaultETC1GraphicMaterial"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Material( Image.defaultETC1GraphicMaterial ),
                null );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_UI_Image()
        {
            WrapperHelper.AddRecastWrapper < Image >( o => new BSWrapperObject_UnityEngine_UI_Image( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_UI_MaskableGraphic : BSWrapperObject < MaskableGraphic >

    {
        #region Public

        public BSWrapperObject_UnityEngine_UI_MaskableGraphic( MaskableGraphic obj ) : base( obj )
        {
            m_Properties["maskable"] = new BSReflectionReference(
                () => m_InternalObject.maskable ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.maskable = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isMaskingGraphic"] = new BSReflectionReference(
                () => m_InternalObject.isMaskingGraphic ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.isMaskingGraphic = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["color"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( m_InternalObject.color ),
                x => m_InternalObject.color = WrapperHelper.UnwrapObject < Color >( x ) );

            m_Properties["raycastTarget"] = new BSReflectionReference(
                () => m_InternalObject.raycastTarget ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.raycastTarget = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["raycastPadding"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector4( m_InternalObject.raycastPadding ),
                x => m_InternalObject.raycastPadding = WrapperHelper.UnwrapObject < Vector4 >( x ) );

            m_Properties["depth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.depth ),
                null );

            m_Properties["rectTransform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_RectTransform( m_InternalObject.rectTransform ),
                null );

            m_Properties["canvas"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Canvas( m_InternalObject.canvas ),
                null );

            m_Properties["canvasRenderer"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_CanvasRenderer( m_InternalObject.canvasRenderer ),
                null );

            m_Properties["defaultMaterial"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Material( m_InternalObject.defaultMaterial ),
                null );

            m_Properties["material"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Material( m_InternalObject.material ),
                x => m_InternalObject.material = WrapperHelper.UnwrapObject < Material >( x ) );

            m_Properties["materialForRendering"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Material( m_InternalObject.materialForRendering ),
                null );

            m_Properties["mainTexture"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Texture( m_InternalObject.mainTexture ),
                null );

            m_Properties["useGUILayout"] = new BSReflectionReference(
                () => m_InternalObject.useGUILayout ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useGUILayout = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["runInEditMode"] = new BSReflectionReference(
                () => m_InternalObject.runInEditMode ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.runInEditMode = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isActiveAndEnabled"] = new BSReflectionReference(
                () => m_InternalObject.isActiveAndEnabled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["GetModifiedMaterial"] = new BSFunctionReference(
                new BSFunction(
                    "function GetModifiedMaterial(baseMaterial)",
                    a => new BSWrapperObject_UnityEngine_Material(
                        m_InternalObject.GetModifiedMaterial( WrapperHelper.UnwrapObject < Material >( a[0] ) ) ),
                    1 ) );

            m_Properties["Cull"] = new BSFunctionReference(
                new BSFunction(
                    "function Cull(clipRect, validRect)",
                    a =>
                    {
                        m_InternalObject.Cull(
                            WrapperHelper.UnwrapObject < Rect >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetClipRect"] = new BSFunctionReference(
                new BSFunction(
                    "function SetClipRect(clipRect, validRect)",
                    a =>
                    {
                        m_InternalObject.SetClipRect(
                            WrapperHelper.UnwrapObject < Rect >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetClipSoftness"] = new BSFunctionReference(
                new BSFunction(
                    "function SetClipSoftness(clipSoftness)",
                    a =>
                    {
                        m_InternalObject.SetClipSoftness( WrapperHelper.UnwrapObject < Vector2 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["RecalculateClipping"] = new BSFunctionReference(
                new BSFunction(
                    "function RecalculateClipping()",
                    a =>
                    {
                        m_InternalObject.RecalculateClipping();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["RecalculateMasking"] = new BSFunctionReference(
                new BSFunction(
                    "function RecalculateMasking()",
                    a =>
                    {
                        m_InternalObject.RecalculateMasking();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetAllDirty"] = new BSFunctionReference(
                new BSFunction(
                    "function SetAllDirty()",
                    a =>
                    {
                        m_InternalObject.SetAllDirty();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetLayoutDirty"] = new BSFunctionReference(
                new BSFunction(
                    "function SetLayoutDirty()",
                    a =>
                    {
                        m_InternalObject.SetLayoutDirty();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetVerticesDirty"] = new BSFunctionReference(
                new BSFunction(
                    "function SetVerticesDirty()",
                    a =>
                    {
                        m_InternalObject.SetVerticesDirty();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetMaterialDirty"] = new BSFunctionReference(
                new BSFunction(
                    "function SetMaterialDirty()",
                    a =>
                    {
                        m_InternalObject.SetMaterialDirty();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["OnCullingChanged"] = new BSFunctionReference(
                new BSFunction(
                    "function OnCullingChanged()",
                    a =>
                    {
                        m_InternalObject.OnCullingChanged();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["LayoutComplete"] = new BSFunctionReference(
                new BSFunction(
                    "function LayoutComplete()",
                    a =>
                    {
                        m_InternalObject.LayoutComplete();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GraphicUpdateComplete"] = new BSFunctionReference(
                new BSFunction(
                    "function GraphicUpdateComplete()",
                    a =>
                    {
                        m_InternalObject.GraphicUpdateComplete();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["OnRebuildRequested"] = new BSFunctionReference(
                new BSFunction(
                    "function OnRebuildRequested()",
                    a =>
                    {
                        m_InternalObject.OnRebuildRequested();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetNativeSize"] = new BSFunctionReference(
                new BSFunction(
                    "function SetNativeSize()",
                    a =>
                    {
                        m_InternalObject.SetNativeSize();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Raycast"] = new BSFunctionReference(
                new BSFunction(
                    "function Raycast(sp, eventCamera)",
                    a => m_InternalObject.Raycast(
                        WrapperHelper.UnwrapObject < Vector2 >( a[0] ),
                        WrapperHelper.UnwrapObject < Camera >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_Properties["PixelAdjustPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function PixelAdjustPoint(point)",
                    a => new BSWrapperObject_UnityEngine_Vector2(
                        m_InternalObject.PixelAdjustPoint( WrapperHelper.UnwrapObject < Vector2 >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetPixelAdjustedRect"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPixelAdjustedRect()",
                    a => new BSWrapperObject_UnityEngine_Rect( m_InternalObject.GetPixelAdjustedRect() ),
                    0 ) );

            m_Properties["CrossFadeColor"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFadeColor(targetColor, duration, ignoreTimeScale, useAlpha)",
                    a =>
                    {
                        m_InternalObject.CrossFadeColor(
                            WrapperHelper.UnwrapObject < Color >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < bool >( a[2] ),
                            WrapperHelper.UnwrapObject < bool >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["CrossFadeColor"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFadeColor(targetColor, duration, ignoreTimeScale, useAlpha, useRGB)",
                    a =>
                    {
                        m_InternalObject.CrossFadeColor(
                            WrapperHelper.UnwrapObject < Color >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < bool >( a[2] ),
                            WrapperHelper.UnwrapObject < bool >( a[3] ),
                            WrapperHelper.UnwrapObject < bool >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["CrossFadeAlpha"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFadeAlpha(alpha, duration, ignoreTimeScale)",
                    a =>
                    {
                        m_InternalObject.CrossFadeAlpha(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < bool >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["RegisterDirtyLayoutCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function RegisterDirtyLayoutCallback(action)",
                    a =>
                    {
                        m_InternalObject.RegisterDirtyLayoutCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["UnregisterDirtyLayoutCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function UnregisterDirtyLayoutCallback(action)",
                    a =>
                    {
                        m_InternalObject.UnregisterDirtyLayoutCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["RegisterDirtyVerticesCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function RegisterDirtyVerticesCallback(action)",
                    a =>
                    {
                        m_InternalObject.RegisterDirtyVerticesCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["UnregisterDirtyVerticesCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function UnregisterDirtyVerticesCallback(action)",
                    a =>
                    {
                        m_InternalObject.UnregisterDirtyVerticesCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["RegisterDirtyMaterialCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function RegisterDirtyMaterialCallback(action)",
                    a =>
                    {
                        m_InternalObject.RegisterDirtyMaterialCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["UnregisterDirtyMaterialCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function UnregisterDirtyMaterialCallback(action)",
                    a =>
                    {
                        m_InternalObject.UnregisterDirtyMaterialCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsActive"] = new BSFunctionReference(
                new BSFunction(
                    "function IsActive()",
                    a => m_InternalObject.IsActive() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsDestroyed"] = new BSFunctionReference(
                new BSFunction(
                    "function IsDestroyed()",
                    a => m_InternalObject.IsDestroyed() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking()",
                    a => m_InternalObject.IsInvoking() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke()",
                    a =>
                    {
                        m_InternalObject.CancelInvoke();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Invoke"] = new BSFunctionReference(
                new BSFunction(
                    "function Invoke(methodName, time)",
                    a =>
                    {
                        m_InternalObject.Invoke(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["InvokeRepeating"] = new BSFunctionReference(
                new BSFunction(
                    "function InvokeRepeating(methodName, time, repeatRate)",
                    a =>
                    {
                        m_InternalObject.InvokeRepeating(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke(methodName)",
                    a =>
                    {
                        m_InternalObject.CancelInvoke( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking(methodName)",
                    a => m_InternalObject.IsInvoking( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName, value)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) ) ),
                    2 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine_Auto"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine_Auto(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine_Auto( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < Coroutine >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(methodName)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopAllCoroutines"] = new BSFunctionReference(
                new BSFunction(
                    "function StopAllCoroutines()",
                    a =>
                    {
                        m_InternalObject.StopAllCoroutines();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_UI_MaskableGraphic : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_UI_MaskableGraphic() : base( typeof( MaskableGraphic ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_UI_MaskableGraphic()
        {
            WrapperHelper.AddRecastWrapper < MaskableGraphic >(
                o => new BSWrapperObject_UnityEngine_UI_MaskableGraphic( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Animator : BSWrapperObject < Animator >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Animator( Animator obj ) : base( obj )
        {
            m_Properties["isOptimizable"] = new BSReflectionReference(
                () => m_InternalObject.isOptimizable ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["isHuman"] = new BSReflectionReference(
                () => m_InternalObject.isHuman ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["hasRootMotion"] = new BSReflectionReference(
                () => m_InternalObject.hasRootMotion ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["humanScale"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.humanScale ),
                null );

            m_Properties["isInitialized"] = new BSReflectionReference(
                () => m_InternalObject.isInitialized ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["deltaPosition"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.deltaPosition ),
                null );

            m_Properties["deltaRotation"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Quaternion( m_InternalObject.deltaRotation ),
                null );

            m_Properties["velocity"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.velocity ),
                null );

            m_Properties["angularVelocity"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.angularVelocity ),
                null );

            m_Properties["rootPosition"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.rootPosition ),
                x => m_InternalObject.rootPosition = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["rootRotation"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Quaternion( m_InternalObject.rootRotation ),
                x => m_InternalObject.rootRotation = WrapperHelper.UnwrapObject < Quaternion >( x ) );

            m_Properties["applyRootMotion"] = new BSReflectionReference(
                () => m_InternalObject.applyRootMotion ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.applyRootMotion = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["linearVelocityBlending"] = new BSReflectionReference(
                () => m_InternalObject.linearVelocityBlending ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.linearVelocityBlending = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["animatePhysics"] = new BSReflectionReference(
                () => m_InternalObject.animatePhysics ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.animatePhysics = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["hasTransformHierarchy"] = new BSReflectionReference(
                () => m_InternalObject.hasTransformHierarchy ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["gravityWeight"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.gravityWeight ),
                null );

            m_Properties["bodyPosition"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.bodyPosition ),
                x => m_InternalObject.bodyPosition = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["bodyRotation"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Quaternion( m_InternalObject.bodyRotation ),
                x => m_InternalObject.bodyRotation = WrapperHelper.UnwrapObject < Quaternion >( x ) );

            m_Properties["stabilizeFeet"] = new BSReflectionReference(
                () => m_InternalObject.stabilizeFeet ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.stabilizeFeet = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["layerCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.layerCount ),
                null );

            m_Properties["parameterCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.parameterCount ),
                null );

            m_Properties["feetPivotActive"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.feetPivotActive ),
                x => m_InternalObject.feetPivotActive = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["pivotWeight"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.pivotWeight ),
                null );

            m_Properties["pivotPosition"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.pivotPosition ),
                null );

            m_Properties["isMatchingTarget"] = new BSReflectionReference(
                () => m_InternalObject.isMatchingTarget ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["speed"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.speed ),
                x => m_InternalObject.speed = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["targetPosition"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.targetPosition ),
                null );

            m_Properties["targetRotation"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Quaternion( m_InternalObject.targetRotation ),
                null );

            m_Properties["playbackTime"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.playbackTime ),
                x => m_InternalObject.playbackTime = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["recorderStartTime"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.recorderStartTime ),
                x => m_InternalObject.recorderStartTime = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["recorderStopTime"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.recorderStopTime ),
                x => m_InternalObject.recorderStopTime = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["runtimeAnimatorController"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_RuntimeAnimatorController(
                    m_InternalObject.runtimeAnimatorController ),
                x => m_InternalObject.runtimeAnimatorController =
                    WrapperHelper.UnwrapObject < RuntimeAnimatorController >( x ) );

            m_Properties["hasBoundPlayables"] = new BSReflectionReference(
                () => m_InternalObject.hasBoundPlayables ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["avatar"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Avatar( m_InternalObject.avatar ),
                x => m_InternalObject.avatar = WrapperHelper.UnwrapObject < Avatar >( x ) );

            m_Properties["playableGraph"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Playables_PlayableGraph( m_InternalObject.playableGraph ),
                null );

            m_Properties["layersAffectMassCenter"] = new BSReflectionReference(
                () => m_InternalObject.layersAffectMassCenter ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.layersAffectMassCenter = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["leftFeetBottomHeight"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.leftFeetBottomHeight ),
                null );

            m_Properties["rightFeetBottomHeight"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.rightFeetBottomHeight ),
                null );

            m_Properties["logWarnings"] = new BSReflectionReference(
                () => m_InternalObject.logWarnings ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.logWarnings = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["fireEvents"] = new BSReflectionReference(
                () => m_InternalObject.fireEvents ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.fireEvents = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["keepAnimatorControllerStateOnDisable"] = new BSReflectionReference(
                () => m_InternalObject.keepAnimatorControllerStateOnDisable ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.keepAnimatorControllerStateOnDisable = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isActiveAndEnabled"] = new BSReflectionReference(
                () => m_InternalObject.isActiveAndEnabled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["GetFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function GetFloat(name)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetFloat( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function GetFloat(id)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetFloat( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["SetFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function SetFloat(name, value)",
                    a =>
                    {
                        m_InternalObject.SetFloat(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function SetFloat(name, value, dampTime, deltaTime)",
                    a =>
                    {
                        m_InternalObject.SetFloat(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function SetFloat(id, value)",
                    a =>
                    {
                        m_InternalObject.SetFloat(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function SetFloat(id, value, dampTime, deltaTime)",
                    a =>
                    {
                        m_InternalObject.SetFloat(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["GetBool"] = new BSFunctionReference(
                new BSFunction(
                    "function GetBool(name)",
                    a => m_InternalObject.GetBool( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetBool"] = new BSFunctionReference(
                new BSFunction(
                    "function GetBool(id)",
                    a => m_InternalObject.GetBool( WrapperHelper.UnwrapObject < int >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SetBool"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBool(name, value)",
                    a =>
                    {
                        m_InternalObject.SetBool(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetBool"] = new BSFunctionReference(
                new BSFunction(
                    "function SetBool(id, value)",
                    a =>
                    {
                        m_InternalObject.SetBool(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetInteger"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInteger(name)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetInteger( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetInteger"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInteger(id)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetInteger( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["SetInteger"] = new BSFunctionReference(
                new BSFunction(
                    "function SetInteger(name, value)",
                    a =>
                    {
                        m_InternalObject.SetInteger(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetInteger"] = new BSFunctionReference(
                new BSFunction(
                    "function SetInteger(id, value)",
                    a =>
                    {
                        m_InternalObject.SetInteger(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetTrigger"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTrigger(name)",
                    a =>
                    {
                        m_InternalObject.SetTrigger( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetTrigger"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTrigger(id)",
                    a =>
                    {
                        m_InternalObject.SetTrigger( WrapperHelper.UnwrapObject < int >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["ResetTrigger"] = new BSFunctionReference(
                new BSFunction(
                    "function ResetTrigger(name)",
                    a =>
                    {
                        m_InternalObject.ResetTrigger( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["ResetTrigger"] = new BSFunctionReference(
                new BSFunction(
                    "function ResetTrigger(id)",
                    a =>
                    {
                        m_InternalObject.ResetTrigger( WrapperHelper.UnwrapObject < int >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsParameterControlledByCurve"] = new BSFunctionReference(
                new BSFunction(
                    "function IsParameterControlledByCurve(name)",
                    a => m_InternalObject.IsParameterControlledByCurve( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["IsParameterControlledByCurve"] = new BSFunctionReference(
                new BSFunction(
                    "function IsParameterControlledByCurve(id)",
                    a => m_InternalObject.IsParameterControlledByCurve( WrapperHelper.UnwrapObject < int >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SetLookAtPosition"] = new BSFunctionReference(
                new BSFunction(
                    "function SetLookAtPosition(lookAtPosition)",
                    a =>
                    {
                        m_InternalObject.SetLookAtPosition( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetLookAtWeight"] = new BSFunctionReference(
                new BSFunction(
                    "function SetLookAtWeight(weight)",
                    a =>
                    {
                        m_InternalObject.SetLookAtWeight( WrapperHelper.UnwrapObject < float >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetLookAtWeight"] = new BSFunctionReference(
                new BSFunction(
                    "function SetLookAtWeight(weight, bodyWeight)",
                    a =>
                    {
                        m_InternalObject.SetLookAtWeight(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetLookAtWeight"] = new BSFunctionReference(
                new BSFunction(
                    "function SetLookAtWeight(weight, bodyWeight, headWeight)",
                    a =>
                    {
                        m_InternalObject.SetLookAtWeight(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["SetLookAtWeight"] = new BSFunctionReference(
                new BSFunction(
                    "function SetLookAtWeight(weight, bodyWeight, headWeight, eyesWeight)",
                    a =>
                    {
                        m_InternalObject.SetLookAtWeight(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["SetLookAtWeight"] = new BSFunctionReference(
                new BSFunction(
                    "function SetLookAtWeight(weight, bodyWeight, headWeight, eyesWeight, clampWeight)",
                    a =>
                    {
                        m_InternalObject.SetLookAtWeight(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ),
                            WrapperHelper.UnwrapObject < float >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["GetLayerName"] = new BSFunctionReference(
                new BSFunction(
                    "function GetLayerName(layerIndex)",
                    a => new BSObject( m_InternalObject.GetLayerName( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetLayerIndex"] = new BSFunctionReference(
                new BSFunction(
                    "function GetLayerIndex(layerName)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetLayerIndex( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetLayerWeight"] = new BSFunctionReference(
                new BSFunction(
                    "function GetLayerWeight(layerIndex)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetLayerWeight( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["SetLayerWeight"] = new BSFunctionReference(
                new BSFunction(
                    "function SetLayerWeight(layerIndex, weight)",
                    a =>
                    {
                        m_InternalObject.SetLayerWeight(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetCurrentAnimatorStateInfo"] = new BSFunctionReference(
                new BSFunction(
                    "function GetCurrentAnimatorStateInfo(layerIndex)",
                    a => new BSWrapperObject_UnityEngine_AnimatorStateInfo(
                        m_InternalObject.GetCurrentAnimatorStateInfo( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetNextAnimatorStateInfo"] = new BSFunctionReference(
                new BSFunction(
                    "function GetNextAnimatorStateInfo(layerIndex)",
                    a => new BSWrapperObject_UnityEngine_AnimatorStateInfo(
                        m_InternalObject.GetNextAnimatorStateInfo( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetAnimatorTransitionInfo"] = new BSFunctionReference(
                new BSFunction(
                    "function GetAnimatorTransitionInfo(layerIndex)",
                    a => new BSWrapperObject_UnityEngine_AnimatorTransitionInfo(
                        m_InternalObject.GetAnimatorTransitionInfo( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetCurrentAnimatorClipInfoCount"] = new BSFunctionReference(
                new BSFunction(
                    "function GetCurrentAnimatorClipInfoCount(layerIndex)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetCurrentAnimatorClipInfoCount(
                            WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetNextAnimatorClipInfoCount"] = new BSFunctionReference(
                new BSFunction(
                    "function GetNextAnimatorClipInfoCount(layerIndex)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetNextAnimatorClipInfoCount(
                            WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["IsInTransition"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInTransition(layerIndex)",
                    a => m_InternalObject.IsInTransition( WrapperHelper.UnwrapObject < int >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetParameter"] = new BSFunctionReference(
                new BSFunction(
                    "function GetParameter(index)",
                    a => new BSWrapperObject_UnityEngine_AnimatorControllerParameter(
                        m_InternalObject.GetParameter( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["InterruptMatchTarget"] = new BSFunctionReference(
                new BSFunction(
                    "function InterruptMatchTarget()",
                    a =>
                    {
                        m_InternalObject.InterruptMatchTarget();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["InterruptMatchTarget"] = new BSFunctionReference(
                new BSFunction(
                    "function InterruptMatchTarget(completeMatch)",
                    a =>
                    {
                        m_InternalObject.InterruptMatchTarget( WrapperHelper.UnwrapObject < bool >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["ForceStateNormalizedTime"] = new BSFunctionReference(
                new BSFunction(
                    "function ForceStateNormalizedTime(normalizedTime)",
                    a =>
                    {
                        m_InternalObject.ForceStateNormalizedTime( WrapperHelper.UnwrapObject < float >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["CrossFadeInFixedTime"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFadeInFixedTime(stateName, fixedTransitionDuration)",
                    a =>
                    {
                        m_InternalObject.CrossFadeInFixedTime(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["CrossFadeInFixedTime"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFadeInFixedTime(stateName, fixedTransitionDuration, layer)",
                    a =>
                    {
                        m_InternalObject.CrossFadeInFixedTime(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["CrossFadeInFixedTime"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFadeInFixedTime(stateName, fixedTransitionDuration, layer, fixedTimeOffset)",
                    a =>
                    {
                        m_InternalObject.CrossFadeInFixedTime(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["CrossFadeInFixedTime"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFadeInFixedTime(stateName, fixedTransitionDuration, layer, fixedTimeOffset, normalizedTransitionTime)",
                    a =>
                    {
                        m_InternalObject.CrossFadeInFixedTime(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ),
                            WrapperHelper.UnwrapObject < float >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["CrossFadeInFixedTime"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFadeInFixedTime(stateHashName, fixedTransitionDuration, layer, fixedTimeOffset)",
                    a =>
                    {
                        m_InternalObject.CrossFadeInFixedTime(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["CrossFadeInFixedTime"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFadeInFixedTime(stateHashName, fixedTransitionDuration, layer)",
                    a =>
                    {
                        m_InternalObject.CrossFadeInFixedTime(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["CrossFadeInFixedTime"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFadeInFixedTime(stateHashName, fixedTransitionDuration)",
                    a =>
                    {
                        m_InternalObject.CrossFadeInFixedTime(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["CrossFadeInFixedTime"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFadeInFixedTime(stateHashName, fixedTransitionDuration, layer, fixedTimeOffset, normalizedTransitionTime)",
                    a =>
                    {
                        m_InternalObject.CrossFadeInFixedTime(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ),
                            WrapperHelper.UnwrapObject < float >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["WriteDefaultValues"] = new BSFunctionReference(
                new BSFunction(
                    "function WriteDefaultValues()",
                    a =>
                    {
                        m_InternalObject.WriteDefaultValues();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["CrossFade"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFade(stateName, normalizedTransitionDuration, layer, normalizedTimeOffset)",
                    a =>
                    {
                        m_InternalObject.CrossFade(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["CrossFade"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFade(stateName, normalizedTransitionDuration, layer)",
                    a =>
                    {
                        m_InternalObject.CrossFade(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["CrossFade"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFade(stateName, normalizedTransitionDuration)",
                    a =>
                    {
                        m_InternalObject.CrossFade(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["CrossFade"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFade(stateName, normalizedTransitionDuration, layer, normalizedTimeOffset, normalizedTransitionTime)",
                    a =>
                    {
                        m_InternalObject.CrossFade(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ),
                            WrapperHelper.UnwrapObject < float >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["CrossFade"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFade(stateHashName, normalizedTransitionDuration, layer, normalizedTimeOffset, normalizedTransitionTime)",
                    a =>
                    {
                        m_InternalObject.CrossFade(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ),
                            WrapperHelper.UnwrapObject < float >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["CrossFade"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFade(stateHashName, normalizedTransitionDuration, layer, normalizedTimeOffset)",
                    a =>
                    {
                        m_InternalObject.CrossFade(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["CrossFade"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFade(stateHashName, normalizedTransitionDuration, layer)",
                    a =>
                    {
                        m_InternalObject.CrossFade(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["CrossFade"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFade(stateHashName, normalizedTransitionDuration)",
                    a =>
                    {
                        m_InternalObject.CrossFade(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["PlayInFixedTime"] = new BSFunctionReference(
                new BSFunction(
                    "function PlayInFixedTime(stateName, layer)",
                    a =>
                    {
                        m_InternalObject.PlayInFixedTime(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["PlayInFixedTime"] = new BSFunctionReference(
                new BSFunction(
                    "function PlayInFixedTime(stateName)",
                    a =>
                    {
                        m_InternalObject.PlayInFixedTime( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["PlayInFixedTime"] = new BSFunctionReference(
                new BSFunction(
                    "function PlayInFixedTime(stateName, layer, fixedTime)",
                    a =>
                    {
                        m_InternalObject.PlayInFixedTime(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["PlayInFixedTime"] = new BSFunctionReference(
                new BSFunction(
                    "function PlayInFixedTime(stateNameHash, layer, fixedTime)",
                    a =>
                    {
                        m_InternalObject.PlayInFixedTime(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["PlayInFixedTime"] = new BSFunctionReference(
                new BSFunction(
                    "function PlayInFixedTime(stateNameHash, layer)",
                    a =>
                    {
                        m_InternalObject.PlayInFixedTime(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["PlayInFixedTime"] = new BSFunctionReference(
                new BSFunction(
                    "function PlayInFixedTime(stateNameHash)",
                    a =>
                    {
                        m_InternalObject.PlayInFixedTime( WrapperHelper.UnwrapObject < int >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Play"] = new BSFunctionReference(
                new BSFunction(
                    "function Play(stateName, layer)",
                    a =>
                    {
                        m_InternalObject.Play(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Play"] = new BSFunctionReference(
                new BSFunction(
                    "function Play(stateName)",
                    a =>
                    {
                        m_InternalObject.Play( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Play"] = new BSFunctionReference(
                new BSFunction(
                    "function Play(stateName, layer, normalizedTime)",
                    a =>
                    {
                        m_InternalObject.Play(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["Play"] = new BSFunctionReference(
                new BSFunction(
                    "function Play(stateNameHash, layer, normalizedTime)",
                    a =>
                    {
                        m_InternalObject.Play(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["Play"] = new BSFunctionReference(
                new BSFunction(
                    "function Play(stateNameHash, layer)",
                    a =>
                    {
                        m_InternalObject.Play(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Play"] = new BSFunctionReference(
                new BSFunction(
                    "function Play(stateNameHash)",
                    a =>
                    {
                        m_InternalObject.Play( WrapperHelper.UnwrapObject < int >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StartPlayback"] = new BSFunctionReference(
                new BSFunction(
                    "function StartPlayback()",
                    a =>
                    {
                        m_InternalObject.StartPlayback();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["StopPlayback"] = new BSFunctionReference(
                new BSFunction(
                    "function StopPlayback()",
                    a =>
                    {
                        m_InternalObject.StopPlayback();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["StartRecording"] = new BSFunctionReference(
                new BSFunction(
                    "function StartRecording(frameCount)",
                    a =>
                    {
                        m_InternalObject.StartRecording( WrapperHelper.UnwrapObject < int >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopRecording"] = new BSFunctionReference(
                new BSFunction(
                    "function StopRecording()",
                    a =>
                    {
                        m_InternalObject.StopRecording();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["HasState"] = new BSFunctionReference(
                new BSFunction(
                    "function HasState(layerIndex, stateID)",
                    a => m_InternalObject.HasState(
                        WrapperHelper.UnwrapObject < int >( a[0] ),
                        WrapperHelper.UnwrapObject < int >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_Properties["Update"] = new BSFunctionReference(
                new BSFunction(
                    "function Update(deltaTime)",
                    a =>
                    {
                        m_InternalObject.Update( WrapperHelper.UnwrapObject < float >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Rebind"] = new BSFunctionReference(
                new BSFunction(
                    "function Rebind()",
                    a =>
                    {
                        m_InternalObject.Rebind();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["ApplyBuiltinRootMotion"] = new BSFunctionReference(
                new BSFunction(
                    "function ApplyBuiltinRootMotion()",
                    a =>
                    {
                        m_InternalObject.ApplyBuiltinRootMotion();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetVector"] = new BSFunctionReference(
                new BSFunction(
                    "function GetVector(name)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.GetVector( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetVector"] = new BSFunctionReference(
                new BSFunction(
                    "function GetVector(id)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.GetVector( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["SetVector"] = new BSFunctionReference(
                new BSFunction(
                    "function SetVector(name, value)",
                    a =>
                    {
                        m_InternalObject.SetVector(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetVector"] = new BSFunctionReference(
                new BSFunction(
                    "function SetVector(id, value)",
                    a =>
                    {
                        m_InternalObject.SetVector(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetQuaternion"] = new BSFunctionReference(
                new BSFunction(
                    "function GetQuaternion(name)",
                    a => new BSWrapperObject_UnityEngine_Quaternion(
                        m_InternalObject.GetQuaternion( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetQuaternion"] = new BSFunctionReference(
                new BSFunction(
                    "function GetQuaternion(id)",
                    a => new BSWrapperObject_UnityEngine_Quaternion(
                        m_InternalObject.GetQuaternion( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["SetQuaternion"] = new BSFunctionReference(
                new BSFunction(
                    "function SetQuaternion(name, value)",
                    a =>
                    {
                        m_InternalObject.SetQuaternion(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < Quaternion >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetQuaternion"] = new BSFunctionReference(
                new BSFunction(
                    "function SetQuaternion(id, value)",
                    a =>
                    {
                        m_InternalObject.SetQuaternion(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < Quaternion >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Animator : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Animator() : base( typeof( Animator ) )
        {
            m_StaticProperties["StringToHash"] = new BSFunctionReference(
                new BSFunction(
                    "function StringToHash(name)",
                    a => new BSObject(
                        ( decimal ) Animator.StringToHash( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Animator()
        {
            WrapperHelper.AddRecastWrapper < Animator >( o => new BSWrapperObject_UnityEngine_Animator( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_RuntimeAnimatorController : BSWrapperObject < RuntimeAnimatorController >

    {
        #region Public

        public BSWrapperObject_UnityEngine_RuntimeAnimatorController( RuntimeAnimatorController obj ) : base( obj )
        {
            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_RuntimeAnimatorController : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_RuntimeAnimatorController() : base(
            typeof( RuntimeAnimatorController ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_RuntimeAnimatorController()
        {
            WrapperHelper.AddRecastWrapper < RuntimeAnimatorController >(
                o => new BSWrapperObject_UnityEngine_RuntimeAnimatorController( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Avatar : BSWrapperObject < Avatar >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Avatar( Avatar obj ) : base( obj )
        {
            m_Properties["isValid"] = new BSReflectionReference(
                () => m_InternalObject.isValid ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["isHuman"] = new BSReflectionReference(
                () => m_InternalObject.isHuman ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["humanDescription"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_HumanDescription( m_InternalObject.humanDescription ),
                null );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Avatar : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Avatar() : base( typeof( Avatar ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Avatar()
        {
            WrapperHelper.AddRecastWrapper < Avatar >( o => new BSWrapperObject_UnityEngine_Avatar( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_HumanDescription : BSWrapperObject < HumanDescription >

    {
        #region Public

        public BSWrapperObject_UnityEngine_HumanDescription( HumanDescription obj ) : base( obj )
        {
            m_Properties["upperArmTwist"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.upperArmTwist ),
                x => m_InternalObject.upperArmTwist = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["lowerArmTwist"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.lowerArmTwist ),
                x => m_InternalObject.lowerArmTwist = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["upperLegTwist"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.upperLegTwist ),
                x => m_InternalObject.upperLegTwist = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["lowerLegTwist"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.lowerLegTwist ),
                x => m_InternalObject.lowerLegTwist = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["armStretch"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.armStretch ),
                x => m_InternalObject.armStretch = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["legStretch"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.legStretch ),
                x => m_InternalObject.legStretch = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["feetSpacing"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.feetSpacing ),
                x => m_InternalObject.feetSpacing = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["hasTranslationDoF"] = new BSReflectionReference(
                () => m_InternalObject.hasTranslationDoF ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.hasTranslationDoF = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_HumanDescription : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_HumanDescription() : base( typeof( HumanDescription ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_HumanDescription()
        {
            WrapperHelper.AddRecastWrapper < HumanDescription >(
                o => new BSWrapperObject_UnityEngine_HumanDescription( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Playables_PlayableGraph : BSWrapperObject < PlayableGraph >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Playables_PlayableGraph( PlayableGraph obj ) : base( obj )
        {
            m_Properties["GetRootPlayable"] = new BSFunctionReference(
                new BSFunction(
                    "function GetRootPlayable(index)",
                    a => new BSWrapperObject_UnityEngine_Playables_Playable(
                        m_InternalObject.GetRootPlayable( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetOutput"] = new BSFunctionReference(
                new BSFunction(
                    "function GetOutput(index)",
                    a => new BSWrapperObject_UnityEngine_Playables_PlayableOutput(
                        m_InternalObject.GetOutput( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["Evaluate"] = new BSFunctionReference(
                new BSFunction(
                    "function Evaluate()",
                    a =>
                    {
                        m_InternalObject.Evaluate();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Destroy"] = new BSFunctionReference(
                new BSFunction(
                    "function Destroy()",
                    a =>
                    {
                        m_InternalObject.Destroy();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["IsValid"] = new BSFunctionReference(
                new BSFunction(
                    "function IsValid()",
                    a => m_InternalObject.IsValid() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsPlaying"] = new BSFunctionReference(
                new BSFunction(
                    "function IsPlaying()",
                    a => m_InternalObject.IsPlaying() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsDone"] = new BSFunctionReference(
                new BSFunction(
                    "function IsDone()",
                    a => m_InternalObject.IsDone() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["Play"] = new BSFunctionReference(
                new BSFunction(
                    "function Play()",
                    a =>
                    {
                        m_InternalObject.Play();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Stop"] = new BSFunctionReference(
                new BSFunction(
                    "function Stop()",
                    a =>
                    {
                        m_InternalObject.Stop();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Evaluate"] = new BSFunctionReference(
                new BSFunction(
                    "function Evaluate(deltaTime)",
                    a =>
                    {
                        m_InternalObject.Evaluate( WrapperHelper.UnwrapObject < float >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetResolver"] = new BSFunctionReference(
                new BSFunction(
                    "function GetResolver()",
                    a => new BSWrapperObject_UnityEngine_IExposedPropertyTable( m_InternalObject.GetResolver() ),
                    0 ) );

            m_Properties["SetResolver"] = new BSFunctionReference(
                new BSFunction(
                    "function SetResolver(value)",
                    a =>
                    {
                        m_InternalObject.SetResolver( WrapperHelper.UnwrapObject < IExposedPropertyTable >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetPlayableCount"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPlayableCount()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetPlayableCount() ),
                    0 ) );

            m_Properties["GetRootPlayableCount"] = new BSFunctionReference(
                new BSFunction(
                    "function GetRootPlayableCount()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetRootPlayableCount() ),
                    0 ) );

            m_Properties["GetOutputCount"] = new BSFunctionReference(
                new BSFunction(
                    "function GetOutputCount()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetOutputCount() ),
                    0 ) );

            m_Properties["GetEditorName"] = new BSFunctionReference(
                new BSFunction(
                    "function GetEditorName()",
                    a => new BSObject( m_InternalObject.GetEditorName() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Playables_PlayableGraph : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Playables_PlayableGraph() : base( typeof( PlayableGraph ) )
        {
            m_StaticProperties["Create"] = new BSFunctionReference(
                new BSFunction(
                    "function Create()",
                    a => new BSWrapperObject_UnityEngine_Playables_PlayableGraph( PlayableGraph.Create() ),
                    0 ) );

            m_StaticProperties["Create"] = new BSFunctionReference(
                new BSFunction(
                    "function Create(name)",
                    a => new BSWrapperObject_UnityEngine_Playables_PlayableGraph(
                        PlayableGraph.Create( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Playables_PlayableGraph()
        {
            WrapperHelper.AddRecastWrapper < PlayableGraph >(
                o => new BSWrapperObject_UnityEngine_Playables_PlayableGraph( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Playables_Playable : BSWrapperObject < Playable >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Playables_Playable( Playable obj ) : base( obj )
        {
            m_Properties["GetHandle"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHandle()",
                    a => new BSWrapperObject_UnityEngine_Playables_PlayableHandle( m_InternalObject.GetHandle() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < Playable >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Playables_Playable : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Playables_Playable() : base( typeof( Playable ) )
        {
            m_StaticProperties["Null"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Playables_Playable( Playable.Null ),
                null );

            m_StaticProperties["Create"] = new BSFunctionReference(
                new BSFunction(
                    "function Create(graph, inputCount)",
                    a => new BSWrapperObject_UnityEngine_Playables_Playable(
                        Playable.Create(
                            WrapperHelper.UnwrapObject < PlayableGraph >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Playables_Playable()
        {
            WrapperHelper.AddRecastWrapper < Playable >( o => new BSWrapperObject_UnityEngine_Playables_Playable( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Playables_PlayableHandle : BSWrapperObject < PlayableHandle >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Playables_PlayableHandle( PlayableHandle obj ) : base( obj )
        {
            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(p)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < PlayableHandle >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Playables_PlayableHandle : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Playables_PlayableHandle() : base( typeof( PlayableHandle ) )
        {
            m_StaticProperties["Null"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Playables_PlayableHandle( PlayableHandle.Null ),
                null );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Playables_PlayableHandle()
        {
            WrapperHelper.AddRecastWrapper < PlayableHandle >(
                o => new BSWrapperObject_UnityEngine_Playables_PlayableHandle( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Playables_PlayableOutput : BSWrapperObject < PlayableOutput >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Playables_PlayableOutput( PlayableOutput obj ) : base( obj )
        {
            m_Properties["GetHandle"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHandle()",
                    a => new BSWrapperObject_UnityEngine_Playables_PlayableOutputHandle( m_InternalObject.GetHandle() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < PlayableOutput >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Playables_PlayableOutput : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Playables_PlayableOutput() : base( typeof( PlayableOutput ) )
        {
            m_StaticProperties["Null"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Playables_PlayableOutput( PlayableOutput.Null ),
                null );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Playables_PlayableOutput()
        {
            WrapperHelper.AddRecastWrapper < PlayableOutput >(
                o => new BSWrapperObject_UnityEngine_Playables_PlayableOutput( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Playables_PlayableOutputHandle : BSWrapperObject < PlayableOutputHandle >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Playables_PlayableOutputHandle( PlayableOutputHandle obj ) : base( obj )
        {
            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(p)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < PlayableOutputHandle >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Playables_PlayableOutputHandle : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Playables_PlayableOutputHandle() : base(
            typeof( PlayableOutputHandle ) )
        {
            m_StaticProperties["Null"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Playables_PlayableOutputHandle( PlayableOutputHandle.Null ),
                null );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Playables_PlayableOutputHandle()
        {
            WrapperHelper.AddRecastWrapper < PlayableOutputHandle >(
                o => new BSWrapperObject_UnityEngine_Playables_PlayableOutputHandle( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_IExposedPropertyTable : BSWrapperObject < IExposedPropertyTable >

    {
        #region Public

        public BSWrapperObject_UnityEngine_IExposedPropertyTable( IExposedPropertyTable obj ) : base( obj )
        {
            m_Properties["SetReferenceValue"] = new BSFunctionReference(
                new BSFunction(
                    "function SetReferenceValue(id, value)",
                    a =>
                    {
                        m_InternalObject.SetReferenceValue(
                            WrapperHelper.UnwrapObject < PropertyName >( a[0] ),
                            WrapperHelper.UnwrapObject < Object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["ClearReferenceValue"] = new BSFunctionReference(
                new BSFunction(
                    "function ClearReferenceValue(id)",
                    a =>
                    {
                        m_InternalObject.ClearReferenceValue( WrapperHelper.UnwrapObject < PropertyName >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_IExposedPropertyTable : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_IExposedPropertyTable() : base( typeof( IExposedPropertyTable ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_IExposedPropertyTable()
        {
            WrapperHelper.AddRecastWrapper < IExposedPropertyTable >(
                o => new BSWrapperObject_UnityEngine_IExposedPropertyTable( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_PropertyName : BSWrapperObject < PropertyName >

    {
        #region Public

        public BSWrapperObject_UnityEngine_PropertyName( PropertyName obj ) : base( obj )
        {
            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < PropertyName >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_PropertyName : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_PropertyName() : base( typeof( PropertyName ) )
        {
            m_StaticProperties["IsNullOrEmpty"] = new BSFunctionReference(
                new BSFunction(
                    "function IsNullOrEmpty(prop)",
                    a => PropertyName.IsNullOrEmpty( WrapperHelper.UnwrapObject < PropertyName >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_PropertyName()
        {
            WrapperHelper.AddRecastWrapper < PropertyName >( o => new BSWrapperObject_UnityEngine_PropertyName( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_AnimatorStateInfo : BSWrapperObject < AnimatorStateInfo >

    {
        #region Public

        public BSWrapperObject_UnityEngine_AnimatorStateInfo( AnimatorStateInfo obj ) : base( obj )
        {
            m_Properties["fullPathHash"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.fullPathHash ),
                null );

            m_Properties["nameHash"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.nameHash ),
                null );

            m_Properties["shortNameHash"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.shortNameHash ),
                null );

            m_Properties["normalizedTime"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.normalizedTime ),
                null );

            m_Properties["length"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.length ),
                null );

            m_Properties["speed"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.speed ),
                null );

            m_Properties["speedMultiplier"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.speedMultiplier ),
                null );

            m_Properties["tagHash"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.tagHash ),
                null );

            m_Properties["loop"] = new BSReflectionReference(
                () => m_InternalObject.loop ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsName"] = new BSFunctionReference(
                new BSFunction(
                    "function IsName(name)",
                    a => m_InternalObject.IsName( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["IsTag"] = new BSFunctionReference(
                new BSFunction(
                    "function IsTag(tag)",
                    a => m_InternalObject.IsTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_AnimatorStateInfo : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_AnimatorStateInfo() : base( typeof( AnimatorStateInfo ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_AnimatorStateInfo()
        {
            WrapperHelper.AddRecastWrapper < AnimatorStateInfo >(
                o => new BSWrapperObject_UnityEngine_AnimatorStateInfo( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_AnimatorTransitionInfo : BSWrapperObject < AnimatorTransitionInfo >

    {
        #region Public

        public BSWrapperObject_UnityEngine_AnimatorTransitionInfo( AnimatorTransitionInfo obj ) : base( obj )
        {
            m_Properties["fullPathHash"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.fullPathHash ),
                null );

            m_Properties["nameHash"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.nameHash ),
                null );

            m_Properties["userNameHash"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.userNameHash ),
                null );

            m_Properties["duration"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.duration ),
                null );

            m_Properties["normalizedTime"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.normalizedTime ),
                null );

            m_Properties["anyState"] = new BSReflectionReference(
                () => m_InternalObject.anyState ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsName"] = new BSFunctionReference(
                new BSFunction(
                    "function IsName(name)",
                    a => m_InternalObject.IsName( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["IsUserName"] = new BSFunctionReference(
                new BSFunction(
                    "function IsUserName(name)",
                    a => m_InternalObject.IsUserName( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_AnimatorTransitionInfo : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_AnimatorTransitionInfo() : base( typeof( AnimatorTransitionInfo ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_AnimatorTransitionInfo()
        {
            WrapperHelper.AddRecastWrapper < AnimatorTransitionInfo >(
                o => new BSWrapperObject_UnityEngine_AnimatorTransitionInfo( o ) );
        }

        #endregion
    }

    public class
        BSWrapperObject_UnityEngine_AnimatorControllerParameter : BSWrapperObject < AnimatorControllerParameter >

    {
        #region Public

        public BSWrapperObject_UnityEngine_AnimatorControllerParameter( AnimatorControllerParameter obj ) : base( obj )
        {
            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["nameHash"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.nameHash ),
                null );

            m_Properties["defaultFloat"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.defaultFloat ),
                x => m_InternalObject.defaultFloat = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["defaultInt"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.defaultInt ),
                x => m_InternalObject.defaultInt = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["defaultBool"] = new BSReflectionReference(
                () => m_InternalObject.defaultBool ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.defaultBool = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(o)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_AnimatorControllerParameter : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_AnimatorControllerParameter() : base(
            typeof( AnimatorControllerParameter ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_AnimatorControllerParameter()
        {
            WrapperHelper.AddRecastWrapper < AnimatorControllerParameter >(
                o => new BSWrapperObject_UnityEngine_AnimatorControllerParameter( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_MatchTargetWeightMask : BSWrapperObject < MatchTargetWeightMask >

    {
        #region Public

        public BSWrapperObject_UnityEngine_MatchTargetWeightMask( MatchTargetWeightMask obj ) : base( obj )
        {
            m_Properties["positionXYZWeight"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.positionXYZWeight ),
                x => m_InternalObject.positionXYZWeight = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["rotationWeight"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.rotationWeight ),
                x => m_InternalObject.rotationWeight = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_MatchTargetWeightMask : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_MatchTargetWeightMask() : base( typeof( MatchTargetWeightMask ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_MatchTargetWeightMask()
        {
            WrapperHelper.AddRecastWrapper < MatchTargetWeightMask >(
                o => new BSWrapperObject_UnityEngine_MatchTargetWeightMask( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_EventSystems_AxisEventData : BSWrapperObject < AxisEventData >

    {
        #region Public

        public BSWrapperObject_UnityEngine_EventSystems_AxisEventData( AxisEventData obj ) : base( obj )
        {
            m_Properties["moveVector"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.moveVector ),
                x => m_InternalObject.moveVector = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["currentInputModule"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_EventSystems_BaseInputModule(
                    m_InternalObject.currentInputModule ),
                null );

            m_Properties["selectedObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.selectedObject ),
                x => m_InternalObject.selectedObject = WrapperHelper.UnwrapObject < GameObject >( x ) );

            m_Properties["used"] = new BSReflectionReference(
                () => m_InternalObject.used ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["Reset"] = new BSFunctionReference(
                new BSFunction(
                    "function Reset()",
                    a =>
                    {
                        m_InternalObject.Reset();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Use"] = new BSFunctionReference(
                new BSFunction(
                    "function Use()",
                    a =>
                    {
                        m_InternalObject.Use();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_EventSystems_AxisEventData : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_EventSystems_AxisEventData() : base( typeof( AxisEventData ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_EventSystems_AxisEventData()
        {
            WrapperHelper.AddRecastWrapper < AxisEventData >(
                o => new BSWrapperObject_UnityEngine_EventSystems_AxisEventData( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_EventSystems_BaseInputModule : BSWrapperObject < BaseInputModule >

    {
        #region Public

        public BSWrapperObject_UnityEngine_EventSystems_BaseInputModule( BaseInputModule obj ) : base( obj )
        {
            m_Properties["input"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_EventSystems_BaseInput( m_InternalObject.input ),
                null );

            m_Properties["inputOverride"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_EventSystems_BaseInput( m_InternalObject.inputOverride ),
                x => m_InternalObject.inputOverride = WrapperHelper.UnwrapObject < BaseInput >( x ) );

            m_Properties["useGUILayout"] = new BSReflectionReference(
                () => m_InternalObject.useGUILayout ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useGUILayout = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["runInEditMode"] = new BSReflectionReference(
                () => m_InternalObject.runInEditMode ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.runInEditMode = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isActiveAndEnabled"] = new BSReflectionReference(
                () => m_InternalObject.isActiveAndEnabled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["Process"] = new BSFunctionReference(
                new BSFunction(
                    "function Process()",
                    a =>
                    {
                        m_InternalObject.Process();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["IsPointerOverGameObject"] = new BSFunctionReference(
                new BSFunction(
                    "function IsPointerOverGameObject(pointerId)",
                    a => m_InternalObject.IsPointerOverGameObject( WrapperHelper.UnwrapObject < int >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ShouldActivateModule"] = new BSFunctionReference(
                new BSFunction(
                    "function ShouldActivateModule()",
                    a => m_InternalObject.ShouldActivateModule() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["DeactivateModule"] = new BSFunctionReference(
                new BSFunction(
                    "function DeactivateModule()",
                    a =>
                    {
                        m_InternalObject.DeactivateModule();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["ActivateModule"] = new BSFunctionReference(
                new BSFunction(
                    "function ActivateModule()",
                    a =>
                    {
                        m_InternalObject.ActivateModule();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["UpdateModule"] = new BSFunctionReference(
                new BSFunction(
                    "function UpdateModule()",
                    a =>
                    {
                        m_InternalObject.UpdateModule();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["IsModuleSupported"] = new BSFunctionReference(
                new BSFunction(
                    "function IsModuleSupported()",
                    a => m_InternalObject.IsModuleSupported() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsActive"] = new BSFunctionReference(
                new BSFunction(
                    "function IsActive()",
                    a => m_InternalObject.IsActive() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsDestroyed"] = new BSFunctionReference(
                new BSFunction(
                    "function IsDestroyed()",
                    a => m_InternalObject.IsDestroyed() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking()",
                    a => m_InternalObject.IsInvoking() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke()",
                    a =>
                    {
                        m_InternalObject.CancelInvoke();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Invoke"] = new BSFunctionReference(
                new BSFunction(
                    "function Invoke(methodName, time)",
                    a =>
                    {
                        m_InternalObject.Invoke(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["InvokeRepeating"] = new BSFunctionReference(
                new BSFunction(
                    "function InvokeRepeating(methodName, time, repeatRate)",
                    a =>
                    {
                        m_InternalObject.InvokeRepeating(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke(methodName)",
                    a =>
                    {
                        m_InternalObject.CancelInvoke( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking(methodName)",
                    a => m_InternalObject.IsInvoking( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName, value)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) ) ),
                    2 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine_Auto"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine_Auto(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine_Auto( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < Coroutine >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(methodName)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopAllCoroutines"] = new BSFunctionReference(
                new BSFunction(
                    "function StopAllCoroutines()",
                    a =>
                    {
                        m_InternalObject.StopAllCoroutines();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_EventSystems_BaseInputModule : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_EventSystems_BaseInputModule() : base( typeof( BaseInputModule ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_EventSystems_BaseInputModule()
        {
            WrapperHelper.AddRecastWrapper < BaseInputModule >(
                o => new BSWrapperObject_UnityEngine_EventSystems_BaseInputModule( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_EventSystems_BaseInput : BSWrapperObject < BaseInput >

    {
        #region Public

        public BSWrapperObject_UnityEngine_EventSystems_BaseInput( BaseInput obj ) : base( obj )
        {
            m_Properties["compositionString"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.compositionString ),
                null );

            m_Properties["compositionCursorPos"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.compositionCursorPos ),
                x => m_InternalObject.compositionCursorPos = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["mousePresent"] = new BSReflectionReference(
                () => m_InternalObject.mousePresent ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["mousePosition"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.mousePosition ),
                null );

            m_Properties["mouseScrollDelta"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.mouseScrollDelta ),
                null );

            m_Properties["touchSupported"] = new BSReflectionReference(
                () => m_InternalObject.touchSupported ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["touchCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.touchCount ),
                null );

            m_Properties["useGUILayout"] = new BSReflectionReference(
                () => m_InternalObject.useGUILayout ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useGUILayout = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["runInEditMode"] = new BSReflectionReference(
                () => m_InternalObject.runInEditMode ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.runInEditMode = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isActiveAndEnabled"] = new BSReflectionReference(
                () => m_InternalObject.isActiveAndEnabled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["GetMouseButtonDown"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMouseButtonDown(button)",
                    a => m_InternalObject.GetMouseButtonDown( WrapperHelper.UnwrapObject < int >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetMouseButtonUp"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMouseButtonUp(button)",
                    a => m_InternalObject.GetMouseButtonUp( WrapperHelper.UnwrapObject < int >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetMouseButton"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMouseButton(button)",
                    a => m_InternalObject.GetMouseButton( WrapperHelper.UnwrapObject < int >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetTouch"] = new BSFunctionReference(
                new BSFunction(
                    "function GetTouch(index)",
                    a => new BSWrapperObject_UnityEngine_Touch(
                        m_InternalObject.GetTouch( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetAxisRaw"] = new BSFunctionReference(
                new BSFunction(
                    "function GetAxisRaw(axisName)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetAxisRaw( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetButtonDown"] = new BSFunctionReference(
                new BSFunction(
                    "function GetButtonDown(buttonName)",
                    a => m_InternalObject.GetButtonDown( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["IsActive"] = new BSFunctionReference(
                new BSFunction(
                    "function IsActive()",
                    a => m_InternalObject.IsActive() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsDestroyed"] = new BSFunctionReference(
                new BSFunction(
                    "function IsDestroyed()",
                    a => m_InternalObject.IsDestroyed() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking()",
                    a => m_InternalObject.IsInvoking() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke()",
                    a =>
                    {
                        m_InternalObject.CancelInvoke();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Invoke"] = new BSFunctionReference(
                new BSFunction(
                    "function Invoke(methodName, time)",
                    a =>
                    {
                        m_InternalObject.Invoke(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["InvokeRepeating"] = new BSFunctionReference(
                new BSFunction(
                    "function InvokeRepeating(methodName, time, repeatRate)",
                    a =>
                    {
                        m_InternalObject.InvokeRepeating(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke(methodName)",
                    a =>
                    {
                        m_InternalObject.CancelInvoke( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking(methodName)",
                    a => m_InternalObject.IsInvoking( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName, value)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) ) ),
                    2 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine_Auto"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine_Auto(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine_Auto( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < Coroutine >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(methodName)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopAllCoroutines"] = new BSFunctionReference(
                new BSFunction(
                    "function StopAllCoroutines()",
                    a =>
                    {
                        m_InternalObject.StopAllCoroutines();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_EventSystems_BaseInput : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_EventSystems_BaseInput() : base( typeof( BaseInput ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_EventSystems_BaseInput()
        {
            WrapperHelper.AddRecastWrapper < BaseInput >(
                o => new BSWrapperObject_UnityEngine_EventSystems_BaseInput( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_EventSystems_BaseEventData : BSWrapperObject < BaseEventData >

    {
        #region Public

        public BSWrapperObject_UnityEngine_EventSystems_BaseEventData( BaseEventData obj ) : base( obj )
        {
            m_Properties["currentInputModule"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_EventSystems_BaseInputModule(
                    m_InternalObject.currentInputModule ),
                null );

            m_Properties["selectedObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.selectedObject ),
                x => m_InternalObject.selectedObject = WrapperHelper.UnwrapObject < GameObject >( x ) );

            m_Properties["used"] = new BSReflectionReference(
                () => m_InternalObject.used ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["Reset"] = new BSFunctionReference(
                new BSFunction(
                    "function Reset()",
                    a =>
                    {
                        m_InternalObject.Reset();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Use"] = new BSFunctionReference(
                new BSFunction(
                    "function Use()",
                    a =>
                    {
                        m_InternalObject.Use();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_EventSystems_BaseEventData : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_EventSystems_BaseEventData() : base( typeof( BaseEventData ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_EventSystems_BaseEventData()
        {
            WrapperHelper.AddRecastWrapper < BaseEventData >(
                o => new BSWrapperObject_UnityEngine_EventSystems_BaseEventData( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_EventSystems_AbstractEventData : BSWrapperObject < AbstractEventData >

    {
        #region Public

        public BSWrapperObject_UnityEngine_EventSystems_AbstractEventData( AbstractEventData obj ) : base( obj )
        {
            m_Properties["used"] = new BSReflectionReference(
                () => m_InternalObject.used ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["Reset"] = new BSFunctionReference(
                new BSFunction(
                    "function Reset()",
                    a =>
                    {
                        m_InternalObject.Reset();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Use"] = new BSFunctionReference(
                new BSFunction(
                    "function Use()",
                    a =>
                    {
                        m_InternalObject.Use();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_EventSystems_AbstractEventData : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_EventSystems_AbstractEventData() : base( typeof( AbstractEventData ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_EventSystems_AbstractEventData()
        {
            WrapperHelper.AddRecastWrapper < AbstractEventData >(
                o => new BSWrapperObject_UnityEngine_EventSystems_AbstractEventData( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_EventSystems_PointerEventData : BSWrapperObject < PointerEventData >

    {
        #region Public

        public BSWrapperObject_UnityEngine_EventSystems_PointerEventData( PointerEventData obj ) : base( obj )
        {
            m_Properties["pointerEnter"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.pointerEnter ),
                x => m_InternalObject.pointerEnter = WrapperHelper.UnwrapObject < GameObject >( x ) );

            m_Properties["lastPress"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.lastPress ),
                null );

            m_Properties["rawPointerPress"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.rawPointerPress ),
                x => m_InternalObject.rawPointerPress = WrapperHelper.UnwrapObject < GameObject >( x ) );

            m_Properties["pointerDrag"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.pointerDrag ),
                x => m_InternalObject.pointerDrag = WrapperHelper.UnwrapObject < GameObject >( x ) );

            m_Properties["pointerClick"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.pointerClick ),
                x => m_InternalObject.pointerClick = WrapperHelper.UnwrapObject < GameObject >( x ) );

            m_Properties["pointerCurrentRaycast"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_EventSystems_RaycastResult(
                    m_InternalObject.pointerCurrentRaycast ),
                x => m_InternalObject.pointerCurrentRaycast = WrapperHelper.UnwrapObject < RaycastResult >( x ) );

            m_Properties["pointerPressRaycast"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_EventSystems_RaycastResult(
                    m_InternalObject.pointerPressRaycast ),
                x => m_InternalObject.pointerPressRaycast = WrapperHelper.UnwrapObject < RaycastResult >( x ) );

            m_Properties["eligibleForClick"] = new BSReflectionReference(
                () => m_InternalObject.eligibleForClick ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.eligibleForClick = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["pointerId"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.pointerId ),
                x => m_InternalObject.pointerId = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["position"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.position ),
                x => m_InternalObject.position = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["delta"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.delta ),
                x => m_InternalObject.delta = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["pressPosition"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.pressPosition ),
                x => m_InternalObject.pressPosition = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["worldPosition"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.worldPosition ),
                x => m_InternalObject.worldPosition = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["worldNormal"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.worldNormal ),
                x => m_InternalObject.worldNormal = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["clickTime"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.clickTime ),
                x => m_InternalObject.clickTime = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["clickCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.clickCount ),
                x => m_InternalObject.clickCount = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["scrollDelta"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.scrollDelta ),
                x => m_InternalObject.scrollDelta = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["useDragThreshold"] = new BSReflectionReference(
                () => m_InternalObject.useDragThreshold ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useDragThreshold = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["dragging"] = new BSReflectionReference(
                () => m_InternalObject.dragging ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.dragging = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["enterEventCamera"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Camera( m_InternalObject.enterEventCamera ),
                null );

            m_Properties["pressEventCamera"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Camera( m_InternalObject.pressEventCamera ),
                null );

            m_Properties["pointerPress"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.pointerPress ),
                x => m_InternalObject.pointerPress = WrapperHelper.UnwrapObject < GameObject >( x ) );

            m_Properties["currentInputModule"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_EventSystems_BaseInputModule(
                    m_InternalObject.currentInputModule ),
                null );

            m_Properties["selectedObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.selectedObject ),
                x => m_InternalObject.selectedObject = WrapperHelper.UnwrapObject < GameObject >( x ) );

            m_Properties["used"] = new BSReflectionReference(
                () => m_InternalObject.used ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["IsPointerMoving"] = new BSFunctionReference(
                new BSFunction(
                    "function IsPointerMoving()",
                    a => m_InternalObject.IsPointerMoving() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsScrolling"] = new BSFunctionReference(
                new BSFunction(
                    "function IsScrolling()",
                    a => m_InternalObject.IsScrolling() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["Reset"] = new BSFunctionReference(
                new BSFunction(
                    "function Reset()",
                    a =>
                    {
                        m_InternalObject.Reset();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Use"] = new BSFunctionReference(
                new BSFunction(
                    "function Use()",
                    a =>
                    {
                        m_InternalObject.Use();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_EventSystems_PointerEventData : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_EventSystems_PointerEventData() : base( typeof( PointerEventData ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_EventSystems_PointerEventData()
        {
            WrapperHelper.AddRecastWrapper < PointerEventData >(
                o => new BSWrapperObject_UnityEngine_EventSystems_PointerEventData( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_EventSystems_RaycastResult : BSWrapperObject < RaycastResult >

    {
        #region Public

        public BSWrapperObject_UnityEngine_EventSystems_RaycastResult( RaycastResult obj ) : base( obj )
        {
            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                x => m_InternalObject.gameObject = WrapperHelper.UnwrapObject < GameObject >( x ) );

            m_Properties["isValid"] = new BSReflectionReference(
                () => m_InternalObject.isValid ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["module"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_EventSystems_BaseRaycaster( m_InternalObject.module ),
                x => m_InternalObject.module = WrapperHelper.UnwrapObject < BaseRaycaster >( x ) );

            m_Properties["distance"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.distance ),
                x => m_InternalObject.distance = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["index"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.index ),
                x => m_InternalObject.index = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["depth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.depth ),
                x => m_InternalObject.depth = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["sortingLayer"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.sortingLayer ),
                x => m_InternalObject.sortingLayer = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["sortingOrder"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.sortingOrder ),
                x => m_InternalObject.sortingOrder = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["worldPosition"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.worldPosition ),
                x => m_InternalObject.worldPosition = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["worldNormal"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.worldNormal ),
                x => m_InternalObject.worldNormal = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["screenPosition"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.screenPosition ),
                x => m_InternalObject.screenPosition = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["displayIndex"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.displayIndex ),
                x => m_InternalObject.displayIndex = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["Clear"] = new BSFunctionReference(
                new BSFunction(
                    "function Clear()",
                    a =>
                    {
                        m_InternalObject.Clear();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_EventSystems_RaycastResult : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_EventSystems_RaycastResult() : base( typeof( RaycastResult ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_EventSystems_RaycastResult()
        {
            WrapperHelper.AddRecastWrapper < RaycastResult >(
                o => new BSWrapperObject_UnityEngine_EventSystems_RaycastResult( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_EventSystems_BaseRaycaster : BSWrapperObject < BaseRaycaster >

    {
        #region Public

        public BSWrapperObject_UnityEngine_EventSystems_BaseRaycaster( BaseRaycaster obj ) : base( obj )
        {
            m_Properties["eventCamera"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Camera( m_InternalObject.eventCamera ),
                null );

            m_Properties["priority"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.priority ),
                null );

            m_Properties["sortOrderPriority"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.sortOrderPriority ),
                null );

            m_Properties["renderOrderPriority"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.renderOrderPriority ),
                null );

            m_Properties["rootRaycaster"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_EventSystems_BaseRaycaster( m_InternalObject.rootRaycaster ),
                null );

            m_Properties["useGUILayout"] = new BSReflectionReference(
                () => m_InternalObject.useGUILayout ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useGUILayout = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["runInEditMode"] = new BSReflectionReference(
                () => m_InternalObject.runInEditMode ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.runInEditMode = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isActiveAndEnabled"] = new BSReflectionReference(
                () => m_InternalObject.isActiveAndEnabled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["IsActive"] = new BSFunctionReference(
                new BSFunction(
                    "function IsActive()",
                    a => m_InternalObject.IsActive() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsDestroyed"] = new BSFunctionReference(
                new BSFunction(
                    "function IsDestroyed()",
                    a => m_InternalObject.IsDestroyed() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking()",
                    a => m_InternalObject.IsInvoking() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke()",
                    a =>
                    {
                        m_InternalObject.CancelInvoke();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Invoke"] = new BSFunctionReference(
                new BSFunction(
                    "function Invoke(methodName, time)",
                    a =>
                    {
                        m_InternalObject.Invoke(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["InvokeRepeating"] = new BSFunctionReference(
                new BSFunction(
                    "function InvokeRepeating(methodName, time, repeatRate)",
                    a =>
                    {
                        m_InternalObject.InvokeRepeating(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke(methodName)",
                    a =>
                    {
                        m_InternalObject.CancelInvoke( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking(methodName)",
                    a => m_InternalObject.IsInvoking( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName, value)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) ) ),
                    2 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine_Auto"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine_Auto(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine_Auto( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < Coroutine >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(methodName)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopAllCoroutines"] = new BSFunctionReference(
                new BSFunction(
                    "function StopAllCoroutines()",
                    a =>
                    {
                        m_InternalObject.StopAllCoroutines();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_EventSystems_BaseRaycaster : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_EventSystems_BaseRaycaster() : base( typeof( BaseRaycaster ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_EventSystems_BaseRaycaster()
        {
            WrapperHelper.AddRecastWrapper < BaseRaycaster >(
                o => new BSWrapperObject_UnityEngine_EventSystems_BaseRaycaster( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_UI_Button : BSWrapperObject < Button >

    {
        #region Public

        public BSWrapperObject_UnityEngine_UI_Button( Button obj ) : base( obj )
        {
            m_Properties["navigation"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_Navigation( m_InternalObject.navigation ),
                x => m_InternalObject.navigation = WrapperHelper.UnwrapObject < Navigation >( x ) );

            m_Properties["colors"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_ColorBlock( m_InternalObject.colors ),
                x => m_InternalObject.colors = WrapperHelper.UnwrapObject < ColorBlock >( x ) );

            m_Properties["spriteState"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_SpriteState( m_InternalObject.spriteState ),
                x => m_InternalObject.spriteState = WrapperHelper.UnwrapObject < SpriteState >( x ) );

            m_Properties["animationTriggers"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_AnimationTriggers( m_InternalObject.animationTriggers ),
                x => m_InternalObject.animationTriggers = WrapperHelper.UnwrapObject < AnimationTriggers >( x ) );

            m_Properties["targetGraphic"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_Graphic( m_InternalObject.targetGraphic ),
                x => m_InternalObject.targetGraphic = WrapperHelper.UnwrapObject < Graphic >( x ) );

            m_Properties["interactable"] = new BSReflectionReference(
                () => m_InternalObject.interactable ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.interactable = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["image"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_Image( m_InternalObject.image ),
                x => m_InternalObject.image = WrapperHelper.UnwrapObject < Image >( x ) );

            m_Properties["animator"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Animator( m_InternalObject.animator ),
                null );

            m_Properties["useGUILayout"] = new BSReflectionReference(
                () => m_InternalObject.useGUILayout ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useGUILayout = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["runInEditMode"] = new BSReflectionReference(
                () => m_InternalObject.runInEditMode ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.runInEditMode = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isActiveAndEnabled"] = new BSReflectionReference(
                () => m_InternalObject.isActiveAndEnabled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["OnPointerClick"] = new BSFunctionReference(
                new BSFunction(
                    "function OnPointerClick(eventData)",
                    a =>
                    {
                        m_InternalObject.OnPointerClick( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnSubmit"] = new BSFunctionReference(
                new BSFunction(
                    "function OnSubmit(eventData)",
                    a =>
                    {
                        m_InternalObject.OnSubmit( WrapperHelper.UnwrapObject < BaseEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsInteractable"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInteractable()",
                    a => m_InternalObject.IsInteractable() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["FindSelectable"] = new BSFunctionReference(
                new BSFunction(
                    "function FindSelectable(dir)",
                    a => new BSWrapperObject_UnityEngine_UI_Selectable(
                        m_InternalObject.FindSelectable( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["FindSelectableOnLeft"] = new BSFunctionReference(
                new BSFunction(
                    "function FindSelectableOnLeft()",
                    a => new BSWrapperObject_UnityEngine_UI_Selectable( m_InternalObject.FindSelectableOnLeft() ),
                    0 ) );

            m_Properties["FindSelectableOnRight"] = new BSFunctionReference(
                new BSFunction(
                    "function FindSelectableOnRight()",
                    a => new BSWrapperObject_UnityEngine_UI_Selectable( m_InternalObject.FindSelectableOnRight() ),
                    0 ) );

            m_Properties["FindSelectableOnUp"] = new BSFunctionReference(
                new BSFunction(
                    "function FindSelectableOnUp()",
                    a => new BSWrapperObject_UnityEngine_UI_Selectable( m_InternalObject.FindSelectableOnUp() ),
                    0 ) );

            m_Properties["FindSelectableOnDown"] = new BSFunctionReference(
                new BSFunction(
                    "function FindSelectableOnDown()",
                    a => new BSWrapperObject_UnityEngine_UI_Selectable( m_InternalObject.FindSelectableOnDown() ),
                    0 ) );

            m_Properties["OnMove"] = new BSFunctionReference(
                new BSFunction(
                    "function OnMove(eventData)",
                    a =>
                    {
                        m_InternalObject.OnMove( WrapperHelper.UnwrapObject < AxisEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnPointerDown"] = new BSFunctionReference(
                new BSFunction(
                    "function OnPointerDown(eventData)",
                    a =>
                    {
                        m_InternalObject.OnPointerDown( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnPointerUp"] = new BSFunctionReference(
                new BSFunction(
                    "function OnPointerUp(eventData)",
                    a =>
                    {
                        m_InternalObject.OnPointerUp( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnPointerEnter"] = new BSFunctionReference(
                new BSFunction(
                    "function OnPointerEnter(eventData)",
                    a =>
                    {
                        m_InternalObject.OnPointerEnter( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnPointerExit"] = new BSFunctionReference(
                new BSFunction(
                    "function OnPointerExit(eventData)",
                    a =>
                    {
                        m_InternalObject.OnPointerExit( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnSelect"] = new BSFunctionReference(
                new BSFunction(
                    "function OnSelect(eventData)",
                    a =>
                    {
                        m_InternalObject.OnSelect( WrapperHelper.UnwrapObject < BaseEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnDeselect"] = new BSFunctionReference(
                new BSFunction(
                    "function OnDeselect(eventData)",
                    a =>
                    {
                        m_InternalObject.OnDeselect( WrapperHelper.UnwrapObject < BaseEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Select"] = new BSFunctionReference(
                new BSFunction(
                    "function Select()",
                    a =>
                    {
                        m_InternalObject.Select();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["IsActive"] = new BSFunctionReference(
                new BSFunction(
                    "function IsActive()",
                    a => m_InternalObject.IsActive() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsDestroyed"] = new BSFunctionReference(
                new BSFunction(
                    "function IsDestroyed()",
                    a => m_InternalObject.IsDestroyed() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking()",
                    a => m_InternalObject.IsInvoking() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke()",
                    a =>
                    {
                        m_InternalObject.CancelInvoke();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Invoke"] = new BSFunctionReference(
                new BSFunction(
                    "function Invoke(methodName, time)",
                    a =>
                    {
                        m_InternalObject.Invoke(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["InvokeRepeating"] = new BSFunctionReference(
                new BSFunction(
                    "function InvokeRepeating(methodName, time, repeatRate)",
                    a =>
                    {
                        m_InternalObject.InvokeRepeating(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke(methodName)",
                    a =>
                    {
                        m_InternalObject.CancelInvoke( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking(methodName)",
                    a => m_InternalObject.IsInvoking( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName, value)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) ) ),
                    2 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine_Auto"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine_Auto(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine_Auto( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < Coroutine >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(methodName)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopAllCoroutines"] = new BSFunctionReference(
                new BSFunction(
                    "function StopAllCoroutines()",
                    a =>
                    {
                        m_InternalObject.StopAllCoroutines();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_UI_Button : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_UI_Button() : base( typeof( Button ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_UI_Button()
        {
            WrapperHelper.AddRecastWrapper < Button >( o => new BSWrapperObject_UnityEngine_UI_Button( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_UI_InputField : BSWrapperObject < InputField >

    {
        #region Public

        public BSWrapperObject_UnityEngine_UI_InputField( InputField obj ) : base( obj )
        {
            m_Properties["shouldHideMobileInput"] = new BSReflectionReference(
                () => m_InternalObject.shouldHideMobileInput ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.shouldHideMobileInput = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["shouldActivateOnSelect"] = new BSReflectionReference(
                () => m_InternalObject.shouldActivateOnSelect ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.shouldActivateOnSelect = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["text"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.text ),
                x => m_InternalObject.text = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["isFocused"] = new BSReflectionReference(
                () => m_InternalObject.isFocused ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["caretBlinkRate"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.caretBlinkRate ),
                x => m_InternalObject.caretBlinkRate = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["caretWidth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.caretWidth ),
                x => m_InternalObject.caretWidth = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["textComponent"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_Text( m_InternalObject.textComponent ),
                x => m_InternalObject.textComponent = WrapperHelper.UnwrapObject < Text >( x ) );

            m_Properties["placeholder"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_Graphic( m_InternalObject.placeholder ),
                x => m_InternalObject.placeholder = WrapperHelper.UnwrapObject < Graphic >( x ) );

            m_Properties["caretColor"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( m_InternalObject.caretColor ),
                x => m_InternalObject.caretColor = WrapperHelper.UnwrapObject < Color >( x ) );

            m_Properties["customCaretColor"] = new BSReflectionReference(
                () => m_InternalObject.customCaretColor ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.customCaretColor = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["selectionColor"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( m_InternalObject.selectionColor ),
                x => m_InternalObject.selectionColor = WrapperHelper.UnwrapObject < Color >( x ) );

            m_Properties["characterLimit"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.characterLimit ),
                x => m_InternalObject.characterLimit = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["touchScreenKeyboard"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_TouchScreenKeyboard( m_InternalObject.touchScreenKeyboard ),
                null );

            m_Properties["readOnly"] = new BSReflectionReference(
                () => m_InternalObject.readOnly ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.readOnly = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["multiLine"] = new BSReflectionReference(
                () => m_InternalObject.multiLine ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["asteriskChar"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Char( m_InternalObject.asteriskChar ),
                x => m_InternalObject.asteriskChar = WrapperHelper.UnwrapObject < char >( x ) );

            m_Properties["wasCanceled"] = new BSReflectionReference(
                () => m_InternalObject.wasCanceled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["caretPosition"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.caretPosition ),
                x => m_InternalObject.caretPosition = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["selectionAnchorPosition"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.selectionAnchorPosition ),
                x => m_InternalObject.selectionAnchorPosition = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["selectionFocusPosition"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.selectionFocusPosition ),
                x => m_InternalObject.selectionFocusPosition = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["minWidth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.minWidth ),
                null );

            m_Properties["preferredWidth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.preferredWidth ),
                null );

            m_Properties["flexibleWidth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.flexibleWidth ),
                null );

            m_Properties["minHeight"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.minHeight ),
                null );

            m_Properties["preferredHeight"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.preferredHeight ),
                null );

            m_Properties["flexibleHeight"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.flexibleHeight ),
                null );

            m_Properties["layoutPriority"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.layoutPriority ),
                null );

            m_Properties["navigation"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_Navigation( m_InternalObject.navigation ),
                x => m_InternalObject.navigation = WrapperHelper.UnwrapObject < Navigation >( x ) );

            m_Properties["colors"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_ColorBlock( m_InternalObject.colors ),
                x => m_InternalObject.colors = WrapperHelper.UnwrapObject < ColorBlock >( x ) );

            m_Properties["spriteState"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_SpriteState( m_InternalObject.spriteState ),
                x => m_InternalObject.spriteState = WrapperHelper.UnwrapObject < SpriteState >( x ) );

            m_Properties["animationTriggers"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_AnimationTriggers( m_InternalObject.animationTriggers ),
                x => m_InternalObject.animationTriggers = WrapperHelper.UnwrapObject < AnimationTriggers >( x ) );

            m_Properties["targetGraphic"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_Graphic( m_InternalObject.targetGraphic ),
                x => m_InternalObject.targetGraphic = WrapperHelper.UnwrapObject < Graphic >( x ) );

            m_Properties["interactable"] = new BSReflectionReference(
                () => m_InternalObject.interactable ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.interactable = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["image"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_UI_Image( m_InternalObject.image ),
                x => m_InternalObject.image = WrapperHelper.UnwrapObject < Image >( x ) );

            m_Properties["animator"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Animator( m_InternalObject.animator ),
                null );

            m_Properties["useGUILayout"] = new BSReflectionReference(
                () => m_InternalObject.useGUILayout ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useGUILayout = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["runInEditMode"] = new BSReflectionReference(
                () => m_InternalObject.runInEditMode ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.runInEditMode = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isActiveAndEnabled"] = new BSReflectionReference(
                () => m_InternalObject.isActiveAndEnabled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["SetTextWithoutNotify"] = new BSFunctionReference(
                new BSFunction(
                    "function SetTextWithoutNotify(input)",
                    a =>
                    {
                        m_InternalObject.SetTextWithoutNotify( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["MoveTextEnd"] = new BSFunctionReference(
                new BSFunction(
                    "function MoveTextEnd(shift)",
                    a =>
                    {
                        m_InternalObject.MoveTextEnd( WrapperHelper.UnwrapObject < bool >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["MoveTextStart"] = new BSFunctionReference(
                new BSFunction(
                    "function MoveTextStart(shift)",
                    a =>
                    {
                        m_InternalObject.MoveTextStart( WrapperHelper.UnwrapObject < bool >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["ScreenToLocal"] = new BSFunctionReference(
                new BSFunction(
                    "function ScreenToLocal(screen)",
                    a => new BSWrapperObject_UnityEngine_Vector2(
                        m_InternalObject.ScreenToLocal( WrapperHelper.UnwrapObject < Vector2 >( a[0] ) ) ),
                    1 ) );

            m_Properties["OnBeginDrag"] = new BSFunctionReference(
                new BSFunction(
                    "function OnBeginDrag(eventData)",
                    a =>
                    {
                        m_InternalObject.OnBeginDrag( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnDrag"] = new BSFunctionReference(
                new BSFunction(
                    "function OnDrag(eventData)",
                    a =>
                    {
                        m_InternalObject.OnDrag( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnEndDrag"] = new BSFunctionReference(
                new BSFunction(
                    "function OnEndDrag(eventData)",
                    a =>
                    {
                        m_InternalObject.OnEndDrag( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnPointerDown"] = new BSFunctionReference(
                new BSFunction(
                    "function OnPointerDown(eventData)",
                    a =>
                    {
                        m_InternalObject.OnPointerDown( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["ProcessEvent"] = new BSFunctionReference(
                new BSFunction(
                    "function ProcessEvent(e)",
                    a =>
                    {
                        m_InternalObject.ProcessEvent( WrapperHelper.UnwrapObject < Event >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnUpdateSelected"] = new BSFunctionReference(
                new BSFunction(
                    "function OnUpdateSelected(eventData)",
                    a =>
                    {
                        m_InternalObject.OnUpdateSelected( WrapperHelper.UnwrapObject < BaseEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["ForceLabelUpdate"] = new BSFunctionReference(
                new BSFunction(
                    "function ForceLabelUpdate()",
                    a =>
                    {
                        m_InternalObject.ForceLabelUpdate();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["LayoutComplete"] = new BSFunctionReference(
                new BSFunction(
                    "function LayoutComplete()",
                    a =>
                    {
                        m_InternalObject.LayoutComplete();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GraphicUpdateComplete"] = new BSFunctionReference(
                new BSFunction(
                    "function GraphicUpdateComplete()",
                    a =>
                    {
                        m_InternalObject.GraphicUpdateComplete();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["ActivateInputField"] = new BSFunctionReference(
                new BSFunction(
                    "function ActivateInputField()",
                    a =>
                    {
                        m_InternalObject.ActivateInputField();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["OnSelect"] = new BSFunctionReference(
                new BSFunction(
                    "function OnSelect(eventData)",
                    a =>
                    {
                        m_InternalObject.OnSelect( WrapperHelper.UnwrapObject < BaseEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnPointerClick"] = new BSFunctionReference(
                new BSFunction(
                    "function OnPointerClick(eventData)",
                    a =>
                    {
                        m_InternalObject.OnPointerClick( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["DeactivateInputField"] = new BSFunctionReference(
                new BSFunction(
                    "function DeactivateInputField()",
                    a =>
                    {
                        m_InternalObject.DeactivateInputField();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["OnDeselect"] = new BSFunctionReference(
                new BSFunction(
                    "function OnDeselect(eventData)",
                    a =>
                    {
                        m_InternalObject.OnDeselect( WrapperHelper.UnwrapObject < BaseEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnSubmit"] = new BSFunctionReference(
                new BSFunction(
                    "function OnSubmit(eventData)",
                    a =>
                    {
                        m_InternalObject.OnSubmit( WrapperHelper.UnwrapObject < BaseEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["CalculateLayoutInputHorizontal"] = new BSFunctionReference(
                new BSFunction(
                    "function CalculateLayoutInputHorizontal()",
                    a =>
                    {
                        m_InternalObject.CalculateLayoutInputHorizontal();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["CalculateLayoutInputVertical"] = new BSFunctionReference(
                new BSFunction(
                    "function CalculateLayoutInputVertical()",
                    a =>
                    {
                        m_InternalObject.CalculateLayoutInputVertical();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["IsInteractable"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInteractable()",
                    a => m_InternalObject.IsInteractable() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["FindSelectable"] = new BSFunctionReference(
                new BSFunction(
                    "function FindSelectable(dir)",
                    a => new BSWrapperObject_UnityEngine_UI_Selectable(
                        m_InternalObject.FindSelectable( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["FindSelectableOnLeft"] = new BSFunctionReference(
                new BSFunction(
                    "function FindSelectableOnLeft()",
                    a => new BSWrapperObject_UnityEngine_UI_Selectable( m_InternalObject.FindSelectableOnLeft() ),
                    0 ) );

            m_Properties["FindSelectableOnRight"] = new BSFunctionReference(
                new BSFunction(
                    "function FindSelectableOnRight()",
                    a => new BSWrapperObject_UnityEngine_UI_Selectable( m_InternalObject.FindSelectableOnRight() ),
                    0 ) );

            m_Properties["FindSelectableOnUp"] = new BSFunctionReference(
                new BSFunction(
                    "function FindSelectableOnUp()",
                    a => new BSWrapperObject_UnityEngine_UI_Selectable( m_InternalObject.FindSelectableOnUp() ),
                    0 ) );

            m_Properties["FindSelectableOnDown"] = new BSFunctionReference(
                new BSFunction(
                    "function FindSelectableOnDown()",
                    a => new BSWrapperObject_UnityEngine_UI_Selectable( m_InternalObject.FindSelectableOnDown() ),
                    0 ) );

            m_Properties["OnMove"] = new BSFunctionReference(
                new BSFunction(
                    "function OnMove(eventData)",
                    a =>
                    {
                        m_InternalObject.OnMove( WrapperHelper.UnwrapObject < AxisEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnPointerUp"] = new BSFunctionReference(
                new BSFunction(
                    "function OnPointerUp(eventData)",
                    a =>
                    {
                        m_InternalObject.OnPointerUp( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnPointerEnter"] = new BSFunctionReference(
                new BSFunction(
                    "function OnPointerEnter(eventData)",
                    a =>
                    {
                        m_InternalObject.OnPointerEnter( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["OnPointerExit"] = new BSFunctionReference(
                new BSFunction(
                    "function OnPointerExit(eventData)",
                    a =>
                    {
                        m_InternalObject.OnPointerExit( WrapperHelper.UnwrapObject < PointerEventData >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Select"] = new BSFunctionReference(
                new BSFunction(
                    "function Select()",
                    a =>
                    {
                        m_InternalObject.Select();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["IsActive"] = new BSFunctionReference(
                new BSFunction(
                    "function IsActive()",
                    a => m_InternalObject.IsActive() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsDestroyed"] = new BSFunctionReference(
                new BSFunction(
                    "function IsDestroyed()",
                    a => m_InternalObject.IsDestroyed() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking()",
                    a => m_InternalObject.IsInvoking() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke()",
                    a =>
                    {
                        m_InternalObject.CancelInvoke();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Invoke"] = new BSFunctionReference(
                new BSFunction(
                    "function Invoke(methodName, time)",
                    a =>
                    {
                        m_InternalObject.Invoke(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["InvokeRepeating"] = new BSFunctionReference(
                new BSFunction(
                    "function InvokeRepeating(methodName, time, repeatRate)",
                    a =>
                    {
                        m_InternalObject.InvokeRepeating(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke(methodName)",
                    a =>
                    {
                        m_InternalObject.CancelInvoke( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking(methodName)",
                    a => m_InternalObject.IsInvoking( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName, value)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) ) ),
                    2 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine_Auto"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine_Auto(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine_Auto( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < Coroutine >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(methodName)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopAllCoroutines"] = new BSFunctionReference(
                new BSFunction(
                    "function StopAllCoroutines()",
                    a =>
                    {
                        m_InternalObject.StopAllCoroutines();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_UI_InputField : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_UI_InputField() : base( typeof( InputField ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_UI_InputField()
        {
            WrapperHelper.AddRecastWrapper < InputField >( o => new BSWrapperObject_UnityEngine_UI_InputField( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_UI_Text : BSWrapperObject < Text >

    {
        #region Public

        public BSWrapperObject_UnityEngine_UI_Text( Text obj ) : base( obj )
        {
            m_Properties["cachedTextGenerator"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_TextGenerator( m_InternalObject.cachedTextGenerator ),
                null );

            m_Properties["cachedTextGeneratorForLayout"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_TextGenerator( m_InternalObject.cachedTextGeneratorForLayout ),
                null );

            m_Properties["mainTexture"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Texture( m_InternalObject.mainTexture ),
                null );

            m_Properties["font"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Font( m_InternalObject.font ),
                x => m_InternalObject.font = WrapperHelper.UnwrapObject < Font >( x ) );

            m_Properties["text"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.text ),
                x => m_InternalObject.text = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["supportRichText"] = new BSReflectionReference(
                () => m_InternalObject.supportRichText ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.supportRichText = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["resizeTextForBestFit"] = new BSReflectionReference(
                () => m_InternalObject.resizeTextForBestFit ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.resizeTextForBestFit = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["resizeTextMinSize"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.resizeTextMinSize ),
                x => m_InternalObject.resizeTextMinSize = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["resizeTextMaxSize"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.resizeTextMaxSize ),
                x => m_InternalObject.resizeTextMaxSize = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["alignByGeometry"] = new BSReflectionReference(
                () => m_InternalObject.alignByGeometry ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.alignByGeometry = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["fontSize"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.fontSize ),
                x => m_InternalObject.fontSize = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["lineSpacing"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.lineSpacing ),
                x => m_InternalObject.lineSpacing = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["pixelsPerUnit"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.pixelsPerUnit ),
                null );

            m_Properties["minWidth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.minWidth ),
                null );

            m_Properties["preferredWidth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.preferredWidth ),
                null );

            m_Properties["flexibleWidth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.flexibleWidth ),
                null );

            m_Properties["minHeight"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.minHeight ),
                null );

            m_Properties["preferredHeight"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.preferredHeight ),
                null );

            m_Properties["flexibleHeight"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.flexibleHeight ),
                null );

            m_Properties["layoutPriority"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.layoutPriority ),
                null );

            m_Properties["maskable"] = new BSReflectionReference(
                () => m_InternalObject.maskable ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.maskable = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isMaskingGraphic"] = new BSReflectionReference(
                () => m_InternalObject.isMaskingGraphic ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.isMaskingGraphic = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["color"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( m_InternalObject.color ),
                x => m_InternalObject.color = WrapperHelper.UnwrapObject < Color >( x ) );

            m_Properties["raycastTarget"] = new BSReflectionReference(
                () => m_InternalObject.raycastTarget ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.raycastTarget = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["raycastPadding"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector4( m_InternalObject.raycastPadding ),
                x => m_InternalObject.raycastPadding = WrapperHelper.UnwrapObject < Vector4 >( x ) );

            m_Properties["depth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.depth ),
                null );

            m_Properties["rectTransform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_RectTransform( m_InternalObject.rectTransform ),
                null );

            m_Properties["canvas"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Canvas( m_InternalObject.canvas ),
                null );

            m_Properties["canvasRenderer"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_CanvasRenderer( m_InternalObject.canvasRenderer ),
                null );

            m_Properties["defaultMaterial"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Material( m_InternalObject.defaultMaterial ),
                null );

            m_Properties["material"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Material( m_InternalObject.material ),
                x => m_InternalObject.material = WrapperHelper.UnwrapObject < Material >( x ) );

            m_Properties["materialForRendering"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Material( m_InternalObject.materialForRendering ),
                null );

            m_Properties["useGUILayout"] = new BSReflectionReference(
                () => m_InternalObject.useGUILayout ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useGUILayout = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["runInEditMode"] = new BSReflectionReference(
                () => m_InternalObject.runInEditMode ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.runInEditMode = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isActiveAndEnabled"] = new BSReflectionReference(
                () => m_InternalObject.isActiveAndEnabled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["FontTextureChanged"] = new BSFunctionReference(
                new BSFunction(
                    "function FontTextureChanged()",
                    a =>
                    {
                        m_InternalObject.FontTextureChanged();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetGenerationSettings"] = new BSFunctionReference(
                new BSFunction(
                    "function GetGenerationSettings(extents)",
                    a => new BSWrapperObject_UnityEngine_TextGenerationSettings(
                        m_InternalObject.GetGenerationSettings( WrapperHelper.UnwrapObject < Vector2 >( a[0] ) ) ),
                    1 ) );

            m_Properties["CalculateLayoutInputHorizontal"] = new BSFunctionReference(
                new BSFunction(
                    "function CalculateLayoutInputHorizontal()",
                    a =>
                    {
                        m_InternalObject.CalculateLayoutInputHorizontal();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["CalculateLayoutInputVertical"] = new BSFunctionReference(
                new BSFunction(
                    "function CalculateLayoutInputVertical()",
                    a =>
                    {
                        m_InternalObject.CalculateLayoutInputVertical();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["OnRebuildRequested"] = new BSFunctionReference(
                new BSFunction(
                    "function OnRebuildRequested()",
                    a =>
                    {
                        m_InternalObject.OnRebuildRequested();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetModifiedMaterial"] = new BSFunctionReference(
                new BSFunction(
                    "function GetModifiedMaterial(baseMaterial)",
                    a => new BSWrapperObject_UnityEngine_Material(
                        m_InternalObject.GetModifiedMaterial( WrapperHelper.UnwrapObject < Material >( a[0] ) ) ),
                    1 ) );

            m_Properties["Cull"] = new BSFunctionReference(
                new BSFunction(
                    "function Cull(clipRect, validRect)",
                    a =>
                    {
                        m_InternalObject.Cull(
                            WrapperHelper.UnwrapObject < Rect >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetClipRect"] = new BSFunctionReference(
                new BSFunction(
                    "function SetClipRect(clipRect, validRect)",
                    a =>
                    {
                        m_InternalObject.SetClipRect(
                            WrapperHelper.UnwrapObject < Rect >( a[0] ),
                            WrapperHelper.UnwrapObject < bool >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SetClipSoftness"] = new BSFunctionReference(
                new BSFunction(
                    "function SetClipSoftness(clipSoftness)",
                    a =>
                    {
                        m_InternalObject.SetClipSoftness( WrapperHelper.UnwrapObject < Vector2 >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["RecalculateClipping"] = new BSFunctionReference(
                new BSFunction(
                    "function RecalculateClipping()",
                    a =>
                    {
                        m_InternalObject.RecalculateClipping();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["RecalculateMasking"] = new BSFunctionReference(
                new BSFunction(
                    "function RecalculateMasking()",
                    a =>
                    {
                        m_InternalObject.RecalculateMasking();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetAllDirty"] = new BSFunctionReference(
                new BSFunction(
                    "function SetAllDirty()",
                    a =>
                    {
                        m_InternalObject.SetAllDirty();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetLayoutDirty"] = new BSFunctionReference(
                new BSFunction(
                    "function SetLayoutDirty()",
                    a =>
                    {
                        m_InternalObject.SetLayoutDirty();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetVerticesDirty"] = new BSFunctionReference(
                new BSFunction(
                    "function SetVerticesDirty()",
                    a =>
                    {
                        m_InternalObject.SetVerticesDirty();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetMaterialDirty"] = new BSFunctionReference(
                new BSFunction(
                    "function SetMaterialDirty()",
                    a =>
                    {
                        m_InternalObject.SetMaterialDirty();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["OnCullingChanged"] = new BSFunctionReference(
                new BSFunction(
                    "function OnCullingChanged()",
                    a =>
                    {
                        m_InternalObject.OnCullingChanged();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["LayoutComplete"] = new BSFunctionReference(
                new BSFunction(
                    "function LayoutComplete()",
                    a =>
                    {
                        m_InternalObject.LayoutComplete();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GraphicUpdateComplete"] = new BSFunctionReference(
                new BSFunction(
                    "function GraphicUpdateComplete()",
                    a =>
                    {
                        m_InternalObject.GraphicUpdateComplete();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["SetNativeSize"] = new BSFunctionReference(
                new BSFunction(
                    "function SetNativeSize()",
                    a =>
                    {
                        m_InternalObject.SetNativeSize();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Raycast"] = new BSFunctionReference(
                new BSFunction(
                    "function Raycast(sp, eventCamera)",
                    a => m_InternalObject.Raycast(
                        WrapperHelper.UnwrapObject < Vector2 >( a[0] ),
                        WrapperHelper.UnwrapObject < Camera >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_Properties["PixelAdjustPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function PixelAdjustPoint(point)",
                    a => new BSWrapperObject_UnityEngine_Vector2(
                        m_InternalObject.PixelAdjustPoint( WrapperHelper.UnwrapObject < Vector2 >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetPixelAdjustedRect"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPixelAdjustedRect()",
                    a => new BSWrapperObject_UnityEngine_Rect( m_InternalObject.GetPixelAdjustedRect() ),
                    0 ) );

            m_Properties["CrossFadeColor"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFadeColor(targetColor, duration, ignoreTimeScale, useAlpha)",
                    a =>
                    {
                        m_InternalObject.CrossFadeColor(
                            WrapperHelper.UnwrapObject < Color >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < bool >( a[2] ),
                            WrapperHelper.UnwrapObject < bool >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_Properties["CrossFadeColor"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFadeColor(targetColor, duration, ignoreTimeScale, useAlpha, useRGB)",
                    a =>
                    {
                        m_InternalObject.CrossFadeColor(
                            WrapperHelper.UnwrapObject < Color >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < bool >( a[2] ),
                            WrapperHelper.UnwrapObject < bool >( a[3] ),
                            WrapperHelper.UnwrapObject < bool >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_Properties["CrossFadeAlpha"] = new BSFunctionReference(
                new BSFunction(
                    "function CrossFadeAlpha(alpha, duration, ignoreTimeScale)",
                    a =>
                    {
                        m_InternalObject.CrossFadeAlpha(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < bool >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["RegisterDirtyLayoutCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function RegisterDirtyLayoutCallback(action)",
                    a =>
                    {
                        m_InternalObject.RegisterDirtyLayoutCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["UnregisterDirtyLayoutCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function UnregisterDirtyLayoutCallback(action)",
                    a =>
                    {
                        m_InternalObject.UnregisterDirtyLayoutCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["RegisterDirtyVerticesCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function RegisterDirtyVerticesCallback(action)",
                    a =>
                    {
                        m_InternalObject.RegisterDirtyVerticesCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["UnregisterDirtyVerticesCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function UnregisterDirtyVerticesCallback(action)",
                    a =>
                    {
                        m_InternalObject.UnregisterDirtyVerticesCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["RegisterDirtyMaterialCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function RegisterDirtyMaterialCallback(action)",
                    a =>
                    {
                        m_InternalObject.RegisterDirtyMaterialCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["UnregisterDirtyMaterialCallback"] = new BSFunctionReference(
                new BSFunction(
                    "function UnregisterDirtyMaterialCallback(action)",
                    a =>
                    {
                        m_InternalObject.UnregisterDirtyMaterialCallback(
                            WrapperHelper.UnwrapObject < UnityAction >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsActive"] = new BSFunctionReference(
                new BSFunction(
                    "function IsActive()",
                    a => m_InternalObject.IsActive() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsDestroyed"] = new BSFunctionReference(
                new BSFunction(
                    "function IsDestroyed()",
                    a => m_InternalObject.IsDestroyed() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking()",
                    a => m_InternalObject.IsInvoking() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke()",
                    a =>
                    {
                        m_InternalObject.CancelInvoke();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["Invoke"] = new BSFunctionReference(
                new BSFunction(
                    "function Invoke(methodName, time)",
                    a =>
                    {
                        m_InternalObject.Invoke(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["InvokeRepeating"] = new BSFunctionReference(
                new BSFunction(
                    "function InvokeRepeating(methodName, time, repeatRate)",
                    a =>
                    {
                        m_InternalObject.InvokeRepeating(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["CancelInvoke"] = new BSFunctionReference(
                new BSFunction(
                    "function CancelInvoke(methodName)",
                    a =>
                    {
                        m_InternalObject.CancelInvoke( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["IsInvoking"] = new BSFunctionReference(
                new BSFunction(
                    "function IsInvoking(methodName)",
                    a => m_InternalObject.IsInvoking( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(methodName, value)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) ) ),
                    2 ) );

            m_Properties["StartCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StartCoroutine_Auto"] = new BSFunctionReference(
                new BSFunction(
                    "function StartCoroutine_Auto(routine)",
                    a => new BSWrapperObject_UnityEngine_Coroutine(
                        m_InternalObject.StartCoroutine_Auto( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) ) ),
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < IEnumerator >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(routine)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < Coroutine >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopCoroutine"] = new BSFunctionReference(
                new BSFunction(
                    "function StopCoroutine(methodName)",
                    a =>
                    {
                        m_InternalObject.StopCoroutine( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["StopAllCoroutines"] = new BSFunctionReference(
                new BSFunction(
                    "function StopAllCoroutines()",
                    a =>
                    {
                        m_InternalObject.StopAllCoroutines();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_UI_Text : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_UI_Text() : base( typeof( Text ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_UI_Text()
        {
            WrapperHelper.AddRecastWrapper < Text >( o => new BSWrapperObject_UnityEngine_UI_Text( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_TextGenerator : BSWrapperObject < TextGenerator >

    {
        #region Public

        public BSWrapperObject_UnityEngine_TextGenerator( TextGenerator obj ) : base( obj )
        {
            m_Properties["characterCountVisible"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.characterCountVisible ),
                null );

            m_Properties["rectExtents"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Rect( m_InternalObject.rectExtents ),
                null );

            m_Properties["vertexCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.vertexCount ),
                null );

            m_Properties["characterCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.characterCount ),
                null );

            m_Properties["lineCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.lineCount ),
                null );

            m_Properties["fontSizeUsedForBestFit"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.fontSizeUsedForBestFit ),
                null );

            m_Properties["Invalidate"] = new BSFunctionReference(
                new BSFunction(
                    "function Invalidate()",
                    a =>
                    {
                        m_InternalObject.Invalidate();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetPreferredWidth"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPreferredWidth(str, settings)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetPreferredWidth(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < TextGenerationSettings >( a[1] ) ) ),
                    2 ) );

            m_Properties["GetPreferredHeight"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPreferredHeight(str, settings)",
                    a => new BSObject(
                        ( decimal ) m_InternalObject.GetPreferredHeight(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < TextGenerationSettings >( a[1] ) ) ),
                    2 ) );

            m_Properties["PopulateWithErrors"] = new BSFunctionReference(
                new BSFunction(
                    "function PopulateWithErrors(str, settings, context)",
                    a => m_InternalObject.PopulateWithErrors(
                        WrapperHelper.UnwrapObject < string >( a[0] ),
                        WrapperHelper.UnwrapObject < TextGenerationSettings >( a[1] ),
                        WrapperHelper.UnwrapObject < GameObject >( a[2] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    3 ) );

            m_Properties["Populate"] = new BSFunctionReference(
                new BSFunction(
                    "function Populate(str, settings)",
                    a => m_InternalObject.Populate(
                        WrapperHelper.UnwrapObject < string >( a[0] ),
                        WrapperHelper.UnwrapObject < TextGenerationSettings >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_TextGenerator : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_TextGenerator() : base( typeof( TextGenerator ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_TextGenerator()
        {
            WrapperHelper.AddRecastWrapper < TextGenerator >( o => new BSWrapperObject_UnityEngine_TextGenerator( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_TextGenerationSettings : BSWrapperObject < TextGenerationSettings >

    {
        #region Public

        public BSWrapperObject_UnityEngine_TextGenerationSettings( TextGenerationSettings obj ) : base( obj )
        {
            m_Properties["font"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Font( m_InternalObject.font ),
                x => m_InternalObject.font = WrapperHelper.UnwrapObject < Font >( x ) );

            m_Properties["color"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Color( m_InternalObject.color ),
                x => m_InternalObject.color = WrapperHelper.UnwrapObject < Color >( x ) );

            m_Properties["fontSize"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.fontSize ),
                x => m_InternalObject.fontSize = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["lineSpacing"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.lineSpacing ),
                x => m_InternalObject.lineSpacing = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["richText"] = new BSReflectionReference(
                () => m_InternalObject.richText ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.richText = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["scaleFactor"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.scaleFactor ),
                x => m_InternalObject.scaleFactor = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["alignByGeometry"] = new BSReflectionReference(
                () => m_InternalObject.alignByGeometry ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.alignByGeometry = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["resizeTextForBestFit"] = new BSReflectionReference(
                () => m_InternalObject.resizeTextForBestFit ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.resizeTextForBestFit = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["resizeTextMinSize"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.resizeTextMinSize ),
                x => m_InternalObject.resizeTextMinSize = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["resizeTextMaxSize"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.resizeTextMaxSize ),
                x => m_InternalObject.resizeTextMaxSize = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["updateBounds"] = new BSReflectionReference(
                () => m_InternalObject.updateBounds ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.updateBounds = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["generationExtents"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.generationExtents ),
                x => m_InternalObject.generationExtents = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["pivot"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.pivot ),
                x => m_InternalObject.pivot = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["generateOutOfBounds"] = new BSReflectionReference(
                () => m_InternalObject.generateOutOfBounds ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.generateOutOfBounds = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < TextGenerationSettings >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_TextGenerationSettings : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_TextGenerationSettings() : base( typeof( TextGenerationSettings ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_TextGenerationSettings()
        {
            WrapperHelper.AddRecastWrapper < TextGenerationSettings >(
                o => new BSWrapperObject_UnityEngine_TextGenerationSettings( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Font : BSWrapperObject < Font >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Font( Font obj ) : base( obj )
        {
            m_Properties["material"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Material( m_InternalObject.material ),
                x => m_InternalObject.material = WrapperHelper.UnwrapObject < Material >( x ) );

            m_Properties["dynamic"] = new BSReflectionReference(
                () => m_InternalObject.dynamic ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["ascent"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.ascent ),
                null );

            m_Properties["fontSize"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.fontSize ),
                null );

            m_Properties["lineHeight"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.lineHeight ),
                null );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["HasCharacter"] = new BSFunctionReference(
                new BSFunction(
                    "function HasCharacter(c)",
                    a => m_InternalObject.HasCharacter( WrapperHelper.UnwrapObject < char >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["RequestCharactersInTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function RequestCharactersInTexture(characters, size)",
                    a =>
                    {
                        m_InternalObject.RequestCharactersInTexture(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["RequestCharactersInTexture"] = new BSFunctionReference(
                new BSFunction(
                    "function RequestCharactersInTexture(characters)",
                    a =>
                    {
                        m_InternalObject.RequestCharactersInTexture( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Font : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Font() : base( typeof( Font ) )
        {
            m_StaticProperties["CreateDynamicFontFromOSFont"] = new BSFunctionReference(
                new BSFunction(
                    "function CreateDynamicFontFromOSFont(fontname, size)",
                    a => new BSWrapperObject_UnityEngine_Font(
                        Font.CreateDynamicFontFromOSFont(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["GetMaxVertsForString"] = new BSFunctionReference(
                new BSFunction(
                    "function GetMaxVertsForString(str)",
                    a => new BSObject(
                        ( decimal ) Font.GetMaxVertsForString( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Font()
        {
            WrapperHelper.AddRecastWrapper < Font >( o => new BSWrapperObject_UnityEngine_Font( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_TouchScreenKeyboard : BSWrapperObject < TouchScreenKeyboard >

    {
        #region Public

        public BSWrapperObject_UnityEngine_TouchScreenKeyboard( TouchScreenKeyboard obj ) : base( obj )
        {
            m_Properties["text"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.text ),
                x => m_InternalObject.text = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["active"] = new BSReflectionReference(
                () => m_InternalObject.active ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.active = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["done"] = new BSReflectionReference(
                () => m_InternalObject.done ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["wasCanceled"] = new BSReflectionReference(
                () => m_InternalObject.wasCanceled ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["characterLimit"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.characterLimit ),
                x => m_InternalObject.characterLimit = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["canGetSelection"] = new BSReflectionReference(
                () => m_InternalObject.canGetSelection ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["canSetSelection"] = new BSReflectionReference(
                () => m_InternalObject.canSetSelection ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["selection"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_RangeInt( m_InternalObject.selection ),
                x => m_InternalObject.selection = WrapperHelper.UnwrapObject < RangeInt >( x ) );

            m_Properties["targetDisplay"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.targetDisplay ),
                x => m_InternalObject.targetDisplay = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_TouchScreenKeyboard : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_TouchScreenKeyboard() : base( typeof( TouchScreenKeyboard ) )
        {
            m_StaticProperties["isSupported"] = new BSReflectionReference(
                () => TouchScreenKeyboard.isSupported ? BSObject.One : BSObject.Zero,
                null );

            m_StaticProperties["isInPlaceEditingAllowed"] = new BSReflectionReference(
                () => TouchScreenKeyboard.isInPlaceEditingAllowed ? BSObject.One : BSObject.Zero,
                null );

            m_StaticProperties["hideInput"] = new BSReflectionReference(
                () => TouchScreenKeyboard.hideInput ? BSObject.One : BSObject.Zero,
                x => TouchScreenKeyboard.hideInput = WrapperHelper.UnwrapObject < bool >( x ) );

            m_StaticProperties["area"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Rect( TouchScreenKeyboard.area ),
                null );

            m_StaticProperties["visible"] = new BSReflectionReference(
                () => TouchScreenKeyboard.visible ? BSObject.One : BSObject.Zero,
                null );

            m_StaticProperties["Open"] = new BSFunctionReference(
                new BSFunction(
                    "function Open(text)",
                    a => new BSWrapperObject_UnityEngine_TouchScreenKeyboard(
                        TouchScreenKeyboard.Open( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_TouchScreenKeyboard()
        {
            WrapperHelper.AddRecastWrapper < TouchScreenKeyboard >(
                o => new BSWrapperObject_UnityEngine_TouchScreenKeyboard( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_RangeInt : BSWrapperObject < RangeInt >

    {
        #region Public

        public BSWrapperObject_UnityEngine_RangeInt( RangeInt obj ) : base( obj )
        {
            m_Properties["end"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.end ),
                null );

            m_Properties["start"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.start ),
                x => m_InternalObject.start = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["length"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.length ),
                x => m_InternalObject.length = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_RangeInt : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_RangeInt() : base( typeof( RangeInt ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_RangeInt()
        {
            WrapperHelper.AddRecastWrapper < RangeInt >( o => new BSWrapperObject_UnityEngine_RangeInt( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Event : BSWrapperObject < Event >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Event( Event obj ) : base( obj )
        {
            m_Properties["mousePosition"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.mousePosition ),
                x => m_InternalObject.mousePosition = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["delta"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( m_InternalObject.delta ),
                x => m_InternalObject.delta = WrapperHelper.UnwrapObject < Vector2 >( x ) );

            m_Properties["button"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.button ),
                x => m_InternalObject.button = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["pressure"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.pressure ),
                x => m_InternalObject.pressure = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["clickCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.clickCount ),
                x => m_InternalObject.clickCount = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["character"] = new BSReflectionReference(
                () => new BSWrapperObject_System_Char( m_InternalObject.character ),
                x => m_InternalObject.character = WrapperHelper.UnwrapObject < char >( x ) );

            m_Properties["displayIndex"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.displayIndex ),
                x => m_InternalObject.displayIndex = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["commandName"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.commandName ),
                x => m_InternalObject.commandName = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["shift"] = new BSReflectionReference(
                () => m_InternalObject.shift ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.shift = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["control"] = new BSReflectionReference(
                () => m_InternalObject.control ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.control = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["alt"] = new BSReflectionReference(
                () => m_InternalObject.alt ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.alt = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["command"] = new BSReflectionReference(
                () => m_InternalObject.command ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.command = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["capsLock"] = new BSReflectionReference(
                () => m_InternalObject.capsLock ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.capsLock = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["numeric"] = new BSReflectionReference(
                () => m_InternalObject.numeric ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.numeric = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["functionKey"] = new BSReflectionReference(
                () => m_InternalObject.functionKey ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["isKey"] = new BSReflectionReference(
                () => m_InternalObject.isKey ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["isMouse"] = new BSReflectionReference(
                () => m_InternalObject.isMouse ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["isScrollWheel"] = new BSReflectionReference(
                () => m_InternalObject.isScrollWheel ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

            m_Properties["Use"] = new BSFunctionReference(
                new BSFunction(
                    "function Use()",
                    a =>
                    {
                        m_InternalObject.Use();

                        return new BSObject( null );
                    },
                    0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Event : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Event() : base( typeof( Event ) )
        {
            m_StaticProperties["current"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Event( Event.current ),
                x => Event.current = WrapperHelper.UnwrapObject < Event >( x ) );

            m_StaticProperties["PopEvent"] = new BSFunctionReference(
                new BSFunction(
                    "function PopEvent(outEvent)",
                    a => Event.PopEvent( WrapperHelper.UnwrapObject < Event >( a[0] ) ) ? BSObject.One : BSObject.Zero,
                    1 ) );

            m_StaticProperties["GetEventCount"] = new BSFunctionReference(
                new BSFunction(
                    "function GetEventCount()",
                    a => new BSObject( ( decimal ) Event.GetEventCount() ),
                    0 ) );

            m_StaticProperties["KeyboardEvent"] = new BSFunctionReference(
                new BSFunction(
                    "function KeyboardEvent(key)",
                    a => new BSWrapperObject_UnityEngine_Event(
                        Event.KeyboardEvent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Event()
        {
            WrapperHelper.AddRecastWrapper < Event >( o => new BSWrapperObject_UnityEngine_Event( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_MeshFilter : BSWrapperObject < MeshFilter >

    {
        #region Public

        public BSWrapperObject_UnityEngine_MeshFilter( MeshFilter obj ) : base( obj )
        {
            m_Properties["sharedMesh"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Mesh( m_InternalObject.sharedMesh ),
                x => m_InternalObject.sharedMesh = WrapperHelper.UnwrapObject < Mesh >( x ) );

            m_Properties["mesh"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Mesh( m_InternalObject.mesh ),
                x => m_InternalObject.mesh = WrapperHelper.UnwrapObject < Mesh >( x ) );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_MeshFilter : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_MeshFilter() : base( typeof( MeshFilter ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_MeshFilter()
        {
            WrapperHelper.AddRecastWrapper < MeshFilter >( o => new BSWrapperObject_UnityEngine_MeshFilter( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_MeshRenderer : BSWrapperObject < MeshRenderer >

    {
        #region Public

        public BSWrapperObject_UnityEngine_MeshRenderer( MeshRenderer obj ) : base( obj )
        {
            m_Properties["additionalVertexStreams"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Mesh( m_InternalObject.additionalVertexStreams ),
                x => m_InternalObject.additionalVertexStreams = WrapperHelper.UnwrapObject < Mesh >( x ) );

            m_Properties["enlightenVertexStream"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Mesh( m_InternalObject.enlightenVertexStream ),
                x => m_InternalObject.enlightenVertexStream = WrapperHelper.UnwrapObject < Mesh >( x ) );

            m_Properties["subMeshStartIndex"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.subMeshStartIndex ),
                null );

            m_Properties["scaleInLightmap"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.scaleInLightmap ),
                x => m_InternalObject.scaleInLightmap = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["stitchLightmapSeams"] = new BSReflectionReference(
                () => m_InternalObject.stitchLightmapSeams ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.stitchLightmapSeams = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["castShadows"] = new BSReflectionReference(
                () => m_InternalObject.castShadows ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.castShadows = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["motionVectors"] = new BSReflectionReference(
                () => m_InternalObject.motionVectors ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.motionVectors = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["useLightProbes"] = new BSReflectionReference(
                () => m_InternalObject.useLightProbes ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.useLightProbes = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["bounds"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Bounds( m_InternalObject.bounds ),
                null );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isVisible"] = new BSReflectionReference(
                () => m_InternalObject.isVisible ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["receiveShadows"] = new BSReflectionReference(
                () => m_InternalObject.receiveShadows ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.receiveShadows = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["forceRenderingOff"] = new BSReflectionReference(
                () => m_InternalObject.forceRenderingOff ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.forceRenderingOff = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["renderingLayerMask"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.renderingLayerMask ),
                x => m_InternalObject.renderingLayerMask = WrapperHelper.UnwrapObject < uint >( x ) );

            m_Properties["rendererPriority"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.rendererPriority ),
                x => m_InternalObject.rendererPriority = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["sortingLayerName"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.sortingLayerName ),
                x => m_InternalObject.sortingLayerName = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["sortingLayerID"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.sortingLayerID ),
                x => m_InternalObject.sortingLayerID = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["sortingOrder"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.sortingOrder ),
                x => m_InternalObject.sortingOrder = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["allowOcclusionWhenDynamic"] = new BSReflectionReference(
                () => m_InternalObject.allowOcclusionWhenDynamic ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.allowOcclusionWhenDynamic = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["isPartOfStaticBatch"] = new BSReflectionReference(
                () => m_InternalObject.isPartOfStaticBatch ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["worldToLocalMatrix"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Matrix4x4( m_InternalObject.worldToLocalMatrix ),
                null );

            m_Properties["localToWorldMatrix"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Matrix4x4( m_InternalObject.localToWorldMatrix ),
                null );

            m_Properties["lightProbeProxyVolumeOverride"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.lightProbeProxyVolumeOverride ),
                x => m_InternalObject.lightProbeProxyVolumeOverride = WrapperHelper.UnwrapObject < GameObject >( x ) );

            m_Properties["probeAnchor"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.probeAnchor ),
                x => m_InternalObject.probeAnchor = WrapperHelper.UnwrapObject < Transform >( x ) );

            m_Properties["lightmapIndex"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.lightmapIndex ),
                x => m_InternalObject.lightmapIndex = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["realtimeLightmapIndex"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.realtimeLightmapIndex ),
                x => m_InternalObject.realtimeLightmapIndex = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["lightmapScaleOffset"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector4( m_InternalObject.lightmapScaleOffset ),
                x => m_InternalObject.lightmapScaleOffset = WrapperHelper.UnwrapObject < Vector4 >( x ) );

            m_Properties["realtimeLightmapScaleOffset"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector4( m_InternalObject.realtimeLightmapScaleOffset ),
                x => m_InternalObject.realtimeLightmapScaleOffset = WrapperHelper.UnwrapObject < Vector4 >( x ) );

            m_Properties["material"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Material( m_InternalObject.material ),
                x => m_InternalObject.material = WrapperHelper.UnwrapObject < Material >( x ) );

            m_Properties["sharedMaterial"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Material( m_InternalObject.sharedMaterial ),
                x => m_InternalObject.sharedMaterial = WrapperHelper.UnwrapObject < Material >( x ) );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["HasPropertyBlock"] = new BSFunctionReference(
                new BSFunction(
                    "function HasPropertyBlock()",
                    a => m_InternalObject.HasPropertyBlock() ? BSObject.One : BSObject.Zero,
                    0 ) );

            m_Properties["SetPropertyBlock"] = new BSFunctionReference(
                new BSFunction(
                    "function SetPropertyBlock(properties)",
                    a =>
                    {
                        m_InternalObject.SetPropertyBlock(
                            WrapperHelper.UnwrapObject < MaterialPropertyBlock >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SetPropertyBlock"] = new BSFunctionReference(
                new BSFunction(
                    "function SetPropertyBlock(properties, materialIndex)",
                    a =>
                    {
                        m_InternalObject.SetPropertyBlock(
                            WrapperHelper.UnwrapObject < MaterialPropertyBlock >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetPropertyBlock"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPropertyBlock(properties)",
                    a =>
                    {
                        m_InternalObject.GetPropertyBlock(
                            WrapperHelper.UnwrapObject < MaterialPropertyBlock >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetPropertyBlock"] = new BSFunctionReference(
                new BSFunction(
                    "function GetPropertyBlock(properties, materialIndex)",
                    a =>
                    {
                        m_InternalObject.GetPropertyBlock(
                            WrapperHelper.UnwrapObject < MaterialPropertyBlock >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_MeshRenderer : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_MeshRenderer() : base( typeof( MeshRenderer ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_MeshRenderer()
        {
            WrapperHelper.AddRecastWrapper < MeshRenderer >( o => new BSWrapperObject_UnityEngine_MeshRenderer( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Resources : BSWrapperObject < Resources >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Resources( Resources obj ) : base( obj )
        {
            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Resources : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Resources() : base( typeof( Resources ) )
        {
            m_StaticProperties["Load"] = new BSFunctionReference(
                new BSFunction(
                    "function Load(path)",
                    a => new BSWrapperObject_UnityEngine_Object(
                        Resources.Load( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["LoadAsync"] = new BSFunctionReference(
                new BSFunction(
                    "function LoadAsync(path)",
                    a => new BSWrapperObject_UnityEngine_ResourceRequest(
                        Resources.LoadAsync( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["LoadAsync"] = new BSFunctionReference(
                new BSFunction(
                    "function LoadAsync(path)",
                    a => new BSWrapperObject_UnityEngine_ResourceRequest(
                        Resources.LoadAsync( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["UnloadAsset"] = new BSFunctionReference(
                new BSFunction(
                    "function UnloadAsset(assetToUnload)",
                    a =>
                    {
                        Resources.UnloadAsset( WrapperHelper.UnwrapObject < Object >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_StaticProperties["UnloadUnusedAssets"] = new BSFunctionReference(
                new BSFunction(
                    "function UnloadUnusedAssets()",
                    a => new BSWrapperObject_UnityEngine_AsyncOperation( Resources.UnloadUnusedAssets() ),
                    0 ) );

            m_StaticProperties["InstanceIDToObject"] = new BSFunctionReference(
                new BSFunction(
                    "function InstanceIDToObject(instanceID)",
                    a => new BSWrapperObject_UnityEngine_Object(
                        Resources.InstanceIDToObject( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Resources()
        {
            WrapperHelper.AddRecastWrapper < Resources >( o => new BSWrapperObject_UnityEngine_Resources( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_ResourceRequest : BSWrapperObject < ResourceRequest >

    {
        #region Public

        public BSWrapperObject_UnityEngine_ResourceRequest( ResourceRequest obj ) : base( obj )
        {
            m_Properties["asset"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Object( m_InternalObject.asset ),
                null );

            m_Properties["isDone"] = new BSReflectionReference(
                () => m_InternalObject.isDone ? BSObject.One : BSObject.Zero,
                null );

            m_Properties["progress"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.progress ),
                null );

            m_Properties["priority"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.priority ),
                x => m_InternalObject.priority = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["allowSceneActivation"] = new BSReflectionReference(
                () => m_InternalObject.allowSceneActivation ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.allowSceneActivation = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_ResourceRequest : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_ResourceRequest() : base( typeof( ResourceRequest ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_ResourceRequest()
        {
            WrapperHelper.AddRecastWrapper < ResourceRequest >(
                o => new BSWrapperObject_UnityEngine_ResourceRequest( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_MeshCollider : BSWrapperObject < MeshCollider >

    {
        #region Public

        public BSWrapperObject_UnityEngine_MeshCollider( MeshCollider obj ) : base( obj )
        {
            m_Properties["sharedMesh"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Mesh( m_InternalObject.sharedMesh ),
                x => m_InternalObject.sharedMesh = WrapperHelper.UnwrapObject < Mesh >( x ) );

            m_Properties["convex"] = new BSReflectionReference(
                () => m_InternalObject.convex ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.convex = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["inflateMesh"] = new BSReflectionReference(
                () => m_InternalObject.inflateMesh ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.inflateMesh = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["skinWidth"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.skinWidth ),
                x => m_InternalObject.skinWidth = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["smoothSphereCollisions"] = new BSReflectionReference(
                () => m_InternalObject.smoothSphereCollisions ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.smoothSphereCollisions = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["attachedRigidbody"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Rigidbody( m_InternalObject.attachedRigidbody ),
                null );

            m_Properties["attachedArticulationBody"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_ArticulationBody( m_InternalObject.attachedArticulationBody ),
                null );

            m_Properties["isTrigger"] = new BSReflectionReference(
                () => m_InternalObject.isTrigger ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.isTrigger = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["contactOffset"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.contactOffset ),
                x => m_InternalObject.contactOffset = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["bounds"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Bounds( m_InternalObject.bounds ),
                null );

            m_Properties["sharedMaterial"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_PhysicMaterial( m_InternalObject.sharedMaterial ),
                x => m_InternalObject.sharedMaterial = WrapperHelper.UnwrapObject < PhysicMaterial >( x ) );

            m_Properties["material"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_PhysicMaterial( m_InternalObject.material ),
                x => m_InternalObject.material = WrapperHelper.UnwrapObject < PhysicMaterial >( x ) );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["ClosestPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function ClosestPoint(position)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.ClosestPoint( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["ClosestPointOnBounds"] = new BSFunctionReference(
                new BSFunction(
                    "function ClosestPointOnBounds(position)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.ClosestPointOnBounds( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_MeshCollider : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_MeshCollider() : base( typeof( MeshCollider ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_MeshCollider()
        {
            WrapperHelper.AddRecastWrapper < MeshCollider >( o => new BSWrapperObject_UnityEngine_MeshCollider( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_SphereCollider : BSWrapperObject < SphereCollider >

    {
        #region Public

        public BSWrapperObject_UnityEngine_SphereCollider( SphereCollider obj ) : base( obj )
        {
            m_Properties["center"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.center ),
                x => m_InternalObject.center = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["radius"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.radius ),
                x => m_InternalObject.radius = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["attachedRigidbody"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Rigidbody( m_InternalObject.attachedRigidbody ),
                null );

            m_Properties["attachedArticulationBody"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_ArticulationBody( m_InternalObject.attachedArticulationBody ),
                null );

            m_Properties["isTrigger"] = new BSReflectionReference(
                () => m_InternalObject.isTrigger ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.isTrigger = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["contactOffset"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.contactOffset ),
                x => m_InternalObject.contactOffset = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["bounds"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Bounds( m_InternalObject.bounds ),
                null );

            m_Properties["sharedMaterial"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_PhysicMaterial( m_InternalObject.sharedMaterial ),
                x => m_InternalObject.sharedMaterial = WrapperHelper.UnwrapObject < PhysicMaterial >( x ) );

            m_Properties["material"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_PhysicMaterial( m_InternalObject.material ),
                x => m_InternalObject.material = WrapperHelper.UnwrapObject < PhysicMaterial >( x ) );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["ClosestPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function ClosestPoint(position)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.ClosestPoint( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["ClosestPointOnBounds"] = new BSFunctionReference(
                new BSFunction(
                    "function ClosestPointOnBounds(position)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.ClosestPointOnBounds( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_SphereCollider : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_SphereCollider() : base( typeof( SphereCollider ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_SphereCollider()
        {
            WrapperHelper.AddRecastWrapper < SphereCollider >(
                o => new BSWrapperObject_UnityEngine_SphereCollider( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_BoxCollider : BSWrapperObject < BoxCollider >

    {
        #region Public

        public BSWrapperObject_UnityEngine_BoxCollider( BoxCollider obj ) : base( obj )
        {
            m_Properties["center"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.center ),
                x => m_InternalObject.center = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["size"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.size ),
                x => m_InternalObject.size = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["extents"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.extents ),
                x => m_InternalObject.extents = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["attachedRigidbody"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Rigidbody( m_InternalObject.attachedRigidbody ),
                null );

            m_Properties["attachedArticulationBody"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_ArticulationBody( m_InternalObject.attachedArticulationBody ),
                null );

            m_Properties["isTrigger"] = new BSReflectionReference(
                () => m_InternalObject.isTrigger ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.isTrigger = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["contactOffset"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.contactOffset ),
                x => m_InternalObject.contactOffset = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["bounds"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Bounds( m_InternalObject.bounds ),
                null );

            m_Properties["sharedMaterial"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_PhysicMaterial( m_InternalObject.sharedMaterial ),
                x => m_InternalObject.sharedMaterial = WrapperHelper.UnwrapObject < PhysicMaterial >( x ) );

            m_Properties["material"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_PhysicMaterial( m_InternalObject.material ),
                x => m_InternalObject.material = WrapperHelper.UnwrapObject < PhysicMaterial >( x ) );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["ClosestPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function ClosestPoint(position)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.ClosestPoint( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["ClosestPointOnBounds"] = new BSFunctionReference(
                new BSFunction(
                    "function ClosestPointOnBounds(position)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.ClosestPointOnBounds( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_BoxCollider : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_BoxCollider() : base( typeof( BoxCollider ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_BoxCollider()
        {
            WrapperHelper.AddRecastWrapper < BoxCollider >( o => new BSWrapperObject_UnityEngine_BoxCollider( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_CapsuleCollider : BSWrapperObject < CapsuleCollider >

    {
        #region Public

        public BSWrapperObject_UnityEngine_CapsuleCollider( CapsuleCollider obj ) : base( obj )
        {
            m_Properties["center"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( m_InternalObject.center ),
                x => m_InternalObject.center = WrapperHelper.UnwrapObject < Vector3 >( x ) );

            m_Properties["radius"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.radius ),
                x => m_InternalObject.radius = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["height"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.height ),
                x => m_InternalObject.height = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["direction"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.direction ),
                x => m_InternalObject.direction = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["enabled"] = new BSReflectionReference(
                () => m_InternalObject.enabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.enabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["attachedRigidbody"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Rigidbody( m_InternalObject.attachedRigidbody ),
                null );

            m_Properties["attachedArticulationBody"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_ArticulationBody( m_InternalObject.attachedArticulationBody ),
                null );

            m_Properties["isTrigger"] = new BSReflectionReference(
                () => m_InternalObject.isTrigger ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.isTrigger = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["contactOffset"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.contactOffset ),
                x => m_InternalObject.contactOffset = WrapperHelper.UnwrapObject < float >( x ) );

            m_Properties["bounds"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Bounds( m_InternalObject.bounds ),
                null );

            m_Properties["sharedMaterial"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_PhysicMaterial( m_InternalObject.sharedMaterial ),
                x => m_InternalObject.sharedMaterial = WrapperHelper.UnwrapObject < PhysicMaterial >( x ) );

            m_Properties["material"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_PhysicMaterial( m_InternalObject.material ),
                x => m_InternalObject.material = WrapperHelper.UnwrapObject < PhysicMaterial >( x ) );

            m_Properties["transform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Transform( m_InternalObject.transform ),
                null );

            m_Properties["gameObject"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_GameObject( m_InternalObject.gameObject ),
                null );

            m_Properties["tag"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.tag ),
                x => m_InternalObject.tag = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["ClosestPoint"] = new BSFunctionReference(
                new BSFunction(
                    "function ClosestPoint(position)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.ClosestPoint( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["ClosestPointOnBounds"] = new BSFunctionReference(
                new BSFunction(
                    "function ClosestPointOnBounds(position)",
                    a => new BSWrapperObject_UnityEngine_Vector3(
                        m_InternalObject.ClosestPointOnBounds( WrapperHelper.UnwrapObject < Vector3 >( a[0] ) ) ),
                    1 ) );

            m_Properties["GetComponent"] = new BSFunctionReference(
                new BSFunction(
                    "function GetComponent(type)",
                    a => new BSWrapperObject_UnityEngine_Component(
                        m_InternalObject.GetComponent( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

            m_Properties["CompareTag"] = new BSFunctionReference(
                new BSFunction(
                    "function CompareTag(tag)",
                    a => m_InternalObject.CompareTag( WrapperHelper.UnwrapObject < string >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessageUpwards"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessageUpwards(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessageUpwards( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName, value)",
                    a =>
                    {
                        m_InternalObject.SendMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["SendMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function SendMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.SendMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName, parameter)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["BroadcastMessage"] = new BSFunctionReference(
                new BSFunction(
                    "function BroadcastMessage(methodName)",
                    a =>
                    {
                        m_InternalObject.BroadcastMessage( WrapperHelper.UnwrapObject < string >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_CapsuleCollider : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_CapsuleCollider() : base( typeof( CapsuleCollider ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_CapsuleCollider()
        {
            WrapperHelper.AddRecastWrapper < CapsuleCollider >(
                o => new BSWrapperObject_UnityEngine_CapsuleCollider( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_LayerMask : BSWrapperObject < LayerMask >

    {
        #region Public

        public BSWrapperObject_UnityEngine_LayerMask( LayerMask obj ) : base( obj )
        {
            m_Properties["value"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) m_InternalObject.value ),
                x => m_InternalObject.value = WrapperHelper.UnwrapObject < int >( x ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_LayerMask : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_LayerMask() : base( typeof( LayerMask ) )
        {
            m_StaticProperties["LayerToName"] = new BSFunctionReference(
                new BSFunction(
                    "function LayerToName(layer)",
                    a => new BSObject( LayerMask.LayerToName( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["NameToLayer"] = new BSFunctionReference(
                new BSFunction(
                    "function NameToLayer(layerName)",
                    a => new BSObject(
                        ( decimal ) LayerMask.NameToLayer( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_LayerMask()
        {
            WrapperHelper.AddRecastWrapper < LayerMask >( o => new BSWrapperObject_UnityEngine_LayerMask( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_ScriptableObject : BSWrapperObject < ScriptableObject >

    {
        #region Public

        public BSWrapperObject_UnityEngine_ScriptableObject( ScriptableObject obj ) : base( obj )
        {
            m_Properties["name"] = new BSReflectionReference(
                () => new BSObject( m_InternalObject.name ),
                x => m_InternalObject.name = WrapperHelper.UnwrapObject < string >( x ) );

            m_Properties["SetDirty"] = new BSFunctionReference(
                new BSFunction(
                    "function SetDirty()",
                    a =>
                    {
                        m_InternalObject.SetDirty();

                        return new BSObject( null );
                    },
                    0 ) );

            m_Properties["GetInstanceID"] = new BSFunctionReference(
                new BSFunction(
                    "function GetInstanceID()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetInstanceID() ),
                    0 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(other)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_ScriptableObject : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_ScriptableObject() : base( typeof( ScriptableObject ) )
        {
            m_StaticProperties["CreateInstance"] = new BSFunctionReference(
                new BSFunction(
                    "function CreateInstance(className)",
                    a => new BSWrapperObject_UnityEngine_ScriptableObject(
                        ScriptableObject.CreateInstance( WrapperHelper.UnwrapObject < string >( a[0] ) ) ),
                    1 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_ScriptableObject()
        {
            WrapperHelper.AddRecastWrapper < ScriptableObject >(
                o => new BSWrapperObject_UnityEngine_ScriptableObject( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Mathf : BSWrapperObject < Mathf >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Mathf( Mathf obj ) : base( obj )
        {
            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Mathf : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Mathf() : base( typeof( Mathf ) )
        {
            m_StaticProperties["PI"] = new BSReflectionReference( () => new BSObject( ( decimal ) Mathf.PI ), null );

            m_StaticProperties["Deg2Rad"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Mathf.Deg2Rad ),
                null );

            m_StaticProperties["Rad2Deg"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Mathf.Rad2Deg ),
                null );

            m_StaticProperties["Epsilon"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Mathf.Epsilon ),
                null );

            m_StaticProperties["ClosestPowerOfTwo"] = new BSFunctionReference(
                new BSFunction(
                    "function ClosestPowerOfTwo(value)",
                    a => new BSObject(
                        ( decimal ) Mathf.ClosestPowerOfTwo( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["IsPowerOfTwo"] = new BSFunctionReference(
                new BSFunction(
                    "function IsPowerOfTwo(value)",
                    a => Mathf.IsPowerOfTwo( WrapperHelper.UnwrapObject < int >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_StaticProperties["NextPowerOfTwo"] = new BSFunctionReference(
                new BSFunction(
                    "function NextPowerOfTwo(value)",
                    a => new BSObject( ( decimal ) Mathf.NextPowerOfTwo( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["GammaToLinearSpace"] = new BSFunctionReference(
                new BSFunction(
                    "function GammaToLinearSpace(value)",
                    a => new BSObject(
                        ( decimal ) Mathf.GammaToLinearSpace( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["LinearToGammaSpace"] = new BSFunctionReference(
                new BSFunction(
                    "function LinearToGammaSpace(value)",
                    a => new BSObject(
                        ( decimal ) Mathf.LinearToGammaSpace( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["CorrelatedColorTemperatureToRGB"] = new BSFunctionReference(
                new BSFunction(
                    "function CorrelatedColorTemperatureToRGB(kelvin)",
                    a => new BSWrapperObject_UnityEngine_Color(
                        Mathf.CorrelatedColorTemperatureToRGB( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["FloatToHalf"] = new BSFunctionReference(
                new BSFunction(
                    "function FloatToHalf(val)",
                    a => new BSObject( ( decimal ) Mathf.FloatToHalf( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["HalfToFloat"] = new BSFunctionReference(
                new BSFunction(
                    "function HalfToFloat(val)",
                    a => new BSObject( ( decimal ) Mathf.HalfToFloat( WrapperHelper.UnwrapObject < ushort >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["PerlinNoise"] = new BSFunctionReference(
                new BSFunction(
                    "function PerlinNoise(x, y)",
                    a => new BSObject(
                        ( decimal ) Mathf.PerlinNoise(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Sin"] = new BSFunctionReference(
                new BSFunction(
                    "function Sin(f)",
                    a => new BSObject( ( decimal ) Mathf.Sin( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Cos"] = new BSFunctionReference(
                new BSFunction(
                    "function Cos(f)",
                    a => new BSObject( ( decimal ) Mathf.Cos( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Tan"] = new BSFunctionReference(
                new BSFunction(
                    "function Tan(f)",
                    a => new BSObject( ( decimal ) Mathf.Tan( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Asin"] = new BSFunctionReference(
                new BSFunction(
                    "function Asin(f)",
                    a => new BSObject( ( decimal ) Mathf.Asin( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Acos"] = new BSFunctionReference(
                new BSFunction(
                    "function Acos(f)",
                    a => new BSObject( ( decimal ) Mathf.Acos( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Atan"] = new BSFunctionReference(
                new BSFunction(
                    "function Atan(f)",
                    a => new BSObject( ( decimal ) Mathf.Atan( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Atan2"] = new BSFunctionReference(
                new BSFunction(
                    "function Atan2(y, x)",
                    a => new BSObject(
                        ( decimal ) Mathf.Atan2(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Sqrt"] = new BSFunctionReference(
                new BSFunction(
                    "function Sqrt(f)",
                    a => new BSObject( ( decimal ) Mathf.Sqrt( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Abs"] = new BSFunctionReference(
                new BSFunction(
                    "function Abs(f)",
                    a => new BSObject( ( decimal ) Mathf.Abs( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Abs"] = new BSFunctionReference(
                new BSFunction(
                    "function Abs(value)",
                    a => new BSObject( ( decimal ) Mathf.Abs( WrapperHelper.UnwrapObject < int >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Min"] = new BSFunctionReference(
                new BSFunction(
                    "function Min(a, b)",
                    a => new BSObject(
                        ( decimal ) Mathf.Min(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Min"] = new BSFunctionReference(
                new BSFunction(
                    "function Min(a, b)",
                    a => new BSObject(
                        ( decimal ) Mathf.Min(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Max"] = new BSFunctionReference(
                new BSFunction(
                    "function Max(a, b)",
                    a => new BSObject(
                        ( decimal ) Mathf.Max(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Max"] = new BSFunctionReference(
                new BSFunction(
                    "function Max(a, b)",
                    a => new BSObject(
                        ( decimal ) Mathf.Max(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Pow"] = new BSFunctionReference(
                new BSFunction(
                    "function Pow(f, p)",
                    a => new BSObject(
                        ( decimal ) Mathf.Pow(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Exp"] = new BSFunctionReference(
                new BSFunction(
                    "function Exp(power)",
                    a => new BSObject( ( decimal ) Mathf.Exp( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Log"] = new BSFunctionReference(
                new BSFunction(
                    "function Log(f, p)",
                    a => new BSObject(
                        ( decimal ) Mathf.Log(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Log"] = new BSFunctionReference(
                new BSFunction(
                    "function Log(f)",
                    a => new BSObject( ( decimal ) Mathf.Log( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Log10"] = new BSFunctionReference(
                new BSFunction(
                    "function Log10(f)",
                    a => new BSObject( ( decimal ) Mathf.Log10( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Ceil"] = new BSFunctionReference(
                new BSFunction(
                    "function Ceil(f)",
                    a => new BSObject( ( decimal ) Mathf.Ceil( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Floor"] = new BSFunctionReference(
                new BSFunction(
                    "function Floor(f)",
                    a => new BSObject( ( decimal ) Mathf.Floor( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Round"] = new BSFunctionReference(
                new BSFunction(
                    "function Round(f)",
                    a => new BSObject( ( decimal ) Mathf.Round( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["CeilToInt"] = new BSFunctionReference(
                new BSFunction(
                    "function CeilToInt(f)",
                    a => new BSObject( ( decimal ) Mathf.CeilToInt( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["FloorToInt"] = new BSFunctionReference(
                new BSFunction(
                    "function FloorToInt(f)",
                    a => new BSObject( ( decimal ) Mathf.FloorToInt( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["RoundToInt"] = new BSFunctionReference(
                new BSFunction(
                    "function RoundToInt(f)",
                    a => new BSObject( ( decimal ) Mathf.RoundToInt( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Sign"] = new BSFunctionReference(
                new BSFunction(
                    "function Sign(f)",
                    a => new BSObject( ( decimal ) Mathf.Sign( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Clamp"] = new BSFunctionReference(
                new BSFunction(
                    "function Clamp(value, min, max)",
                    a => new BSObject(
                        ( decimal ) Mathf.Clamp(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["Clamp"] = new BSFunctionReference(
                new BSFunction(
                    "function Clamp(value, min, max)",
                    a => new BSObject(
                        ( decimal ) Mathf.Clamp(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ),
                            WrapperHelper.UnwrapObject < int >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["Clamp01"] = new BSFunctionReference(
                new BSFunction(
                    "function Clamp01(value)",
                    a => new BSObject( ( decimal ) Mathf.Clamp01( WrapperHelper.UnwrapObject < float >( a[0] ) ) ),
                    1 ) );

            m_StaticProperties["Lerp"] = new BSFunctionReference(
                new BSFunction(
                    "function Lerp(a, b, t)",
                    a => new BSObject(
                        ( decimal ) Mathf.Lerp(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["LerpUnclamped"] = new BSFunctionReference(
                new BSFunction(
                    "function LerpUnclamped(a, b, t)",
                    a => new BSObject(
                        ( decimal ) Mathf.LerpUnclamped(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["LerpAngle"] = new BSFunctionReference(
                new BSFunction(
                    "function LerpAngle(a, b, t)",
                    a => new BSObject(
                        ( decimal ) Mathf.LerpAngle(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["MoveTowards"] = new BSFunctionReference(
                new BSFunction(
                    "function MoveTowards(current, target, maxDelta)",
                    a => new BSObject(
                        ( decimal ) Mathf.MoveTowards(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["MoveTowardsAngle"] = new BSFunctionReference(
                new BSFunction(
                    "function MoveTowardsAngle(current, target, maxDelta)",
                    a => new BSObject(
                        ( decimal ) Mathf.MoveTowardsAngle(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["SmoothStep"] = new BSFunctionReference(
                new BSFunction(
                    "function SmoothStep(from, to, t)",
                    a => new BSObject(
                        ( decimal ) Mathf.SmoothStep(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["Gamma"] = new BSFunctionReference(
                new BSFunction(
                    "function Gamma(value, absmax, gamma)",
                    a => new BSObject(
                        ( decimal ) Mathf.Gamma(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["Approximately"] = new BSFunctionReference(
                new BSFunction(
                    "function Approximately(a, b)",
                    a => Mathf.Approximately(
                        WrapperHelper.UnwrapObject < float >( a[0] ),
                        WrapperHelper.UnwrapObject < float >( a[1] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    2 ) );

            m_StaticProperties["Repeat"] = new BSFunctionReference(
                new BSFunction(
                    "function Repeat(t, length)",
                    a => new BSObject(
                        ( decimal ) Mathf.Repeat(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["PingPong"] = new BSFunctionReference(
                new BSFunction(
                    "function PingPong(t, length)",
                    a => new BSObject(
                        ( decimal ) Mathf.PingPong(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["InverseLerp"] = new BSFunctionReference(
                new BSFunction(
                    "function InverseLerp(a, b, value)",
                    a => new BSObject(
                        ( decimal ) Mathf.InverseLerp(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ) ) ),
                    3 ) );

            m_StaticProperties["DeltaAngle"] = new BSFunctionReference(
                new BSFunction(
                    "function DeltaAngle(current, target)",
                    a => new BSObject(
                        ( decimal ) Mathf.DeltaAngle(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) ) ),
                    2 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Mathf()
        {
            WrapperHelper.AddRecastWrapper < Mathf >( o => new BSWrapperObject_UnityEngine_Mathf( o ) );
        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Random : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Random() : base( typeof( Random ) )
        {
            m_StaticProperties["value"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Random.value ),
                null );

            m_StaticProperties["insideUnitSphere"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( Random.insideUnitSphere ),
                null );

            m_StaticProperties["insideUnitCircle"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector2( Random.insideUnitCircle ),
                null );

            m_StaticProperties["onUnitSphere"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Vector3( Random.onUnitSphere ),
                null );

            m_StaticProperties["rotation"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Quaternion( Random.rotation ),
                null );

            m_StaticProperties["rotationUniform"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_Quaternion( Random.rotationUniform ),
                null );

            m_StaticProperties["seed"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Random.seed ),
                x => Random.seed = WrapperHelper.UnwrapObject < int >( x ) );

            m_StaticProperties["InitState"] = new BSFunctionReference(
                new BSFunction(
                    "function InitState(seed)",
                    a =>
                    {
                        Random.InitState( WrapperHelper.UnwrapObject < int >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_StaticProperties["Range"] = new BSFunctionReference(
                new BSFunction(
                    "function Range(minInclusive, maxInclusive)",
                    a => new BSObject(
                        ( decimal ) Random.Range(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["Range"] = new BSFunctionReference(
                new BSFunction(
                    "function Range(minInclusive, maxExclusive)",
                    a => new BSObject(
                        ( decimal ) Random.Range(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["RandomRange"] = new BSFunctionReference(
                new BSFunction(
                    "function RandomRange(min, max)",
                    a => new BSObject(
                        ( decimal ) Random.RandomRange(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["RandomRange"] = new BSFunctionReference(
                new BSFunction(
                    "function RandomRange(min, max)",
                    a => new BSObject(
                        ( decimal ) Random.RandomRange(
                            WrapperHelper.UnwrapObject < int >( a[0] ),
                            WrapperHelper.UnwrapObject < int >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["ColorHSV"] = new BSFunctionReference(
                new BSFunction(
                    "function ColorHSV()",
                    a => new BSWrapperObject_UnityEngine_Color( Random.ColorHSV() ),
                    0 ) );

            m_StaticProperties["ColorHSV"] = new BSFunctionReference(
                new BSFunction(
                    "function ColorHSV(hueMin, hueMax)",
                    a => new BSWrapperObject_UnityEngine_Color(
                        Random.ColorHSV(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ) ) ),
                    2 ) );

            m_StaticProperties["ColorHSV"] = new BSFunctionReference(
                new BSFunction(
                    "function ColorHSV(hueMin, hueMax, saturationMin, saturationMax)",
                    a => new BSWrapperObject_UnityEngine_Color(
                        Random.ColorHSV(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ) ) ),
                    4 ) );

            m_StaticProperties["ColorHSV"] = new BSFunctionReference(
                new BSFunction(
                    "function ColorHSV(hueMin, hueMax, saturationMin, saturationMax, valueMin, valueMax)",
                    a => new BSWrapperObject_UnityEngine_Color(
                        Random.ColorHSV(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ),
                            WrapperHelper.UnwrapObject < float >( a[4] ),
                            WrapperHelper.UnwrapObject < float >( a[5] ) ) ),
                    6 ) );

            m_StaticProperties["ColorHSV"] = new BSFunctionReference(
                new BSFunction(
                    "function ColorHSV(hueMin, hueMax, saturationMin, saturationMax, valueMin, valueMax, alphaMin, alphaMax)",
                    a => new BSWrapperObject_UnityEngine_Color(
                        Random.ColorHSV(
                            WrapperHelper.UnwrapObject < float >( a[0] ),
                            WrapperHelper.UnwrapObject < float >( a[1] ),
                            WrapperHelper.UnwrapObject < float >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ),
                            WrapperHelper.UnwrapObject < float >( a[4] ),
                            WrapperHelper.UnwrapObject < float >( a[5] ),
                            WrapperHelper.UnwrapObject < float >( a[6] ),
                            WrapperHelper.UnwrapObject < float >( a[7] ) ) ),
                    8 ) );

        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Debug : BSWrapperObject < Debug >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Debug( Debug obj ) : base( obj )
        {
            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Debug : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Debug() : base( typeof( Debug ) )
        {
            m_StaticProperties["unityLogger"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_ILogger( Debug.unityLogger ),
                null );

            m_StaticProperties["developerConsoleVisible"] = new BSReflectionReference(
                () => Debug.developerConsoleVisible ? BSObject.One : BSObject.Zero,
                x => Debug.developerConsoleVisible = WrapperHelper.UnwrapObject < bool >( x ) );

            m_StaticProperties["isDebugBuild"] = new BSReflectionReference(
                () => Debug.isDebugBuild ? BSObject.One : BSObject.Zero,
                null );

            m_StaticProperties["logger"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_ILogger( Debug.unityLogger ),
                null );

            m_StaticProperties["DrawLine"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawLine(start, end, color, duration)",
                    a =>
                    {
                        Debug.DrawLine(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                            WrapperHelper.UnwrapObject < Color >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_StaticProperties["DrawLine"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawLine(start, end, color)",
                    a =>
                    {
                        Debug.DrawLine(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                            WrapperHelper.UnwrapObject < Color >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_StaticProperties["DrawLine"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawLine(start, end)",
                    a =>
                    {
                        Debug.DrawLine(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["DrawLine"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawLine(start, end, color, duration, depthTest)",
                    a =>
                    {
                        Debug.DrawLine(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                            WrapperHelper.UnwrapObject < Color >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ),
                            WrapperHelper.UnwrapObject < bool >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_StaticProperties["DrawRay"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawRay(start, dir, color, duration)",
                    a =>
                    {
                        Debug.DrawRay(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                            WrapperHelper.UnwrapObject < Color >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ) );

                        return new BSObject( null );
                    },
                    4 ) );

            m_StaticProperties["DrawRay"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawRay(start, dir, color)",
                    a =>
                    {
                        Debug.DrawRay(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                            WrapperHelper.UnwrapObject < Color >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_StaticProperties["DrawRay"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawRay(start, dir)",
                    a =>
                    {
                        Debug.DrawRay(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["DrawRay"] = new BSFunctionReference(
                new BSFunction(
                    "function DrawRay(start, dir, color, duration, depthTest)",
                    a =>
                    {
                        Debug.DrawRay(
                            WrapperHelper.UnwrapObject < Vector3 >( a[0] ),
                            WrapperHelper.UnwrapObject < Vector3 >( a[1] ),
                            WrapperHelper.UnwrapObject < Color >( a[2] ),
                            WrapperHelper.UnwrapObject < float >( a[3] ),
                            WrapperHelper.UnwrapObject < bool >( a[4] ) );

                        return new BSObject( null );
                    },
                    5 ) );

            m_StaticProperties["Break"] = new BSFunctionReference(
                new BSFunction(
                    "function Break()",
                    a =>
                    {
                        Debug.Break();

                        return new BSObject( null );
                    },
                    0 ) );

            m_StaticProperties["DebugBreak"] = new BSFunctionReference(
                new BSFunction(
                    "function DebugBreak()",
                    a =>
                    {
                        Debug.DebugBreak();

                        return new BSObject( null );
                    },
                    0 ) );

            m_StaticProperties["Log"] = new BSFunctionReference(
                new BSFunction(
                    "function Log(message)",
                    a =>
                    {
                        Debug.Log( WrapperHelper.UnwrapObject < object >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_StaticProperties["Log"] = new BSFunctionReference(
                new BSFunction(
                    "function Log(message, context)",
                    a =>
                    {
                        Debug.Log(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < Object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["LogError"] = new BSFunctionReference(
                new BSFunction(
                    "function LogError(message)",
                    a =>
                    {
                        Debug.LogError( WrapperHelper.UnwrapObject < object >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_StaticProperties["LogError"] = new BSFunctionReference(
                new BSFunction(
                    "function LogError(message, context)",
                    a =>
                    {
                        Debug.LogError(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < Object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["ClearDeveloperConsole"] = new BSFunctionReference(
                new BSFunction(
                    "function ClearDeveloperConsole()",
                    a =>
                    {
                        Debug.ClearDeveloperConsole();

                        return new BSObject( null );
                    },
                    0 ) );

            m_StaticProperties["LogException"] = new BSFunctionReference(
                new BSFunction(
                    "function LogException(exception)",
                    a =>
                    {
                        Debug.LogException( WrapperHelper.UnwrapObject < Exception >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_StaticProperties["LogException"] = new BSFunctionReference(
                new BSFunction(
                    "function LogException(exception, context)",
                    a =>
                    {
                        Debug.LogException(
                            WrapperHelper.UnwrapObject < Exception >( a[0] ),
                            WrapperHelper.UnwrapObject < Object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["LogWarning"] = new BSFunctionReference(
                new BSFunction(
                    "function LogWarning(message)",
                    a =>
                    {
                        Debug.LogWarning( WrapperHelper.UnwrapObject < object >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_StaticProperties["LogWarning"] = new BSFunctionReference(
                new BSFunction(
                    "function LogWarning(message, context)",
                    a =>
                    {
                        Debug.LogWarning(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < Object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["Assert"] = new BSFunctionReference(
                new BSFunction(
                    "function Assert(condition)",
                    a =>
                    {
                        Debug.Assert( WrapperHelper.UnwrapObject < bool >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_StaticProperties["Assert"] = new BSFunctionReference(
                new BSFunction(
                    "function Assert(condition, context)",
                    a =>
                    {
                        Debug.Assert(
                            WrapperHelper.UnwrapObject < bool >( a[0] ),
                            WrapperHelper.UnwrapObject < Object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["Assert"] = new BSFunctionReference(
                new BSFunction(
                    "function Assert(condition, message)",
                    a =>
                    {
                        Debug.Assert(
                            WrapperHelper.UnwrapObject < bool >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["Assert"] = new BSFunctionReference(
                new BSFunction(
                    "function Assert(condition, message)",
                    a =>
                    {
                        Debug.Assert(
                            WrapperHelper.UnwrapObject < bool >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_StaticProperties["Assert"] = new BSFunctionReference(
                new BSFunction(
                    "function Assert(condition, message, context)",
                    a =>
                    {
                        Debug.Assert(
                            WrapperHelper.UnwrapObject < bool >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ),
                            WrapperHelper.UnwrapObject < Object >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_StaticProperties["Assert"] = new BSFunctionReference(
                new BSFunction(
                    "function Assert(condition, message, context)",
                    a =>
                    {
                        Debug.Assert(
                            WrapperHelper.UnwrapObject < bool >( a[0] ),
                            WrapperHelper.UnwrapObject < string >( a[1] ),
                            WrapperHelper.UnwrapObject < Object >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_StaticProperties["LogAssertion"] = new BSFunctionReference(
                new BSFunction(
                    "function LogAssertion(message)",
                    a =>
                    {
                        Debug.LogAssertion( WrapperHelper.UnwrapObject < object >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_StaticProperties["LogAssertion"] = new BSFunctionReference(
                new BSFunction(
                    "function LogAssertion(message, context)",
                    a =>
                    {
                        Debug.LogAssertion(
                            WrapperHelper.UnwrapObject < object >( a[0] ),
                            WrapperHelper.UnwrapObject < Object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Debug()
        {
            WrapperHelper.AddRecastWrapper < Debug >( o => new BSWrapperObject_UnityEngine_Debug( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_ILogger : BSWrapperObject < ILogger >

    {
        #region Public

        public BSWrapperObject_UnityEngine_ILogger( ILogger obj ) : base( obj )
        {
            m_Properties["logHandler"] = new BSReflectionReference(
                () => new BSWrapperObject_UnityEngine_ILogHandler( m_InternalObject.logHandler ),
                x => m_InternalObject.logHandler = WrapperHelper.UnwrapObject < ILogHandler >( x ) );

            m_Properties["logEnabled"] = new BSReflectionReference(
                () => m_InternalObject.logEnabled ? BSObject.One : BSObject.Zero,
                x => m_InternalObject.logEnabled = WrapperHelper.UnwrapObject < bool >( x ) );

            m_Properties["Log"] = new BSFunctionReference(
                new BSFunction(
                    "function Log(message)",
                    a =>
                    {
                        m_InternalObject.Log( WrapperHelper.UnwrapObject < object >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

            m_Properties["Log"] = new BSFunctionReference(
                new BSFunction(
                    "function Log(tag, message)",
                    a =>
                    {
                        m_InternalObject.Log(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["Log"] = new BSFunctionReference(
                new BSFunction(
                    "function Log(tag, message, context)",
                    a =>
                    {
                        m_InternalObject.Log(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ),
                            WrapperHelper.UnwrapObject < Object >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["LogWarning"] = new BSFunctionReference(
                new BSFunction(
                    "function LogWarning(tag, message)",
                    a =>
                    {
                        m_InternalObject.LogWarning(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["LogWarning"] = new BSFunctionReference(
                new BSFunction(
                    "function LogWarning(tag, message, context)",
                    a =>
                    {
                        m_InternalObject.LogWarning(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ),
                            WrapperHelper.UnwrapObject < Object >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["LogError"] = new BSFunctionReference(
                new BSFunction(
                    "function LogError(tag, message)",
                    a =>
                    {
                        m_InternalObject.LogError(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

            m_Properties["LogError"] = new BSFunctionReference(
                new BSFunction(
                    "function LogError(tag, message, context)",
                    a =>
                    {
                        m_InternalObject.LogError(
                            WrapperHelper.UnwrapObject < string >( a[0] ),
                            WrapperHelper.UnwrapObject < object >( a[1] ),
                            WrapperHelper.UnwrapObject < Object >( a[2] ) );

                        return new BSObject( null );
                    },
                    3 ) );

            m_Properties["LogException"] = new BSFunctionReference(
                new BSFunction(
                    "function LogException(exception)",
                    a =>
                    {
                        m_InternalObject.LogException( WrapperHelper.UnwrapObject < Exception >( a[0] ) );

                        return new BSObject( null );
                    },
                    1 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_ILogger : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_ILogger() : base( typeof( ILogger ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_ILogger()
        {
            WrapperHelper.AddRecastWrapper < ILogger >( o => new BSWrapperObject_UnityEngine_ILogger( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_ILogHandler : BSWrapperObject < ILogHandler >

    {
        #region Public

        public BSWrapperObject_UnityEngine_ILogHandler( ILogHandler obj ) : base( obj )
        {
            m_Properties["LogException"] = new BSFunctionReference(
                new BSFunction(
                    "function LogException(exception, context)",
                    a =>
                    {
                        m_InternalObject.LogException(
                            WrapperHelper.UnwrapObject < Exception >( a[0] ),
                            WrapperHelper.UnwrapObject < Object >( a[1] ) );

                        return new BSObject( null );
                    },
                    2 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_ILogHandler : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_ILogHandler() : base( typeof( ILogHandler ) )
        {

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_ILogHandler()
        {
            WrapperHelper.AddRecastWrapper < ILogHandler >( o => new BSWrapperObject_UnityEngine_ILogHandler( o ) );
        }

        #endregion
    }

    public class BSWrapperObject_UnityEngine_Time : BSWrapperObject < Time >

    {
        #region Public

        public BSWrapperObject_UnityEngine_Time( Time obj ) : base( obj )
        {
            m_Properties["Equals"] = new BSFunctionReference(
                new BSFunction(
                    "function Equals(obj)",
                    a => m_InternalObject.Equals( WrapperHelper.UnwrapObject < object >( a[0] ) )
                        ? BSObject.One
                        : BSObject.Zero,
                    1 ) );

            m_Properties["GetHashCode"] = new BSFunctionReference(
                new BSFunction(
                    "function GetHashCode()",
                    a => new BSObject( ( decimal ) m_InternalObject.GetHashCode() ),
                    0 ) );

            m_Properties["ToString"] = new BSFunctionReference(
                new BSFunction( "function ToString()", a => new BSObject( m_InternalObject.ToString() ), 0 ) );

        }

        #endregion
    }

    public class BSStaticWrapperObject_UnityEngine_Time : BSStaticWrapperObject

    {
        #region Public

        public BSStaticWrapperObject_UnityEngine_Time() : base( typeof( Time ) )
        {
            m_StaticProperties["time"] = new BSReflectionReference( () => new BSObject( ( decimal ) Time.time ), null );

            m_StaticProperties["timeAsDouble"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.timeAsDouble ),
                null );

            m_StaticProperties["timeSinceLevelLoad"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.timeSinceLevelLoad ),
                null );

            m_StaticProperties["timeSinceLevelLoadAsDouble"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.timeSinceLevelLoadAsDouble ),
                null );

            m_StaticProperties["deltaTime"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.deltaTime ),
                null );

            m_StaticProperties["fixedTime"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.fixedTime ),
                null );

            m_StaticProperties["fixedTimeAsDouble"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.fixedTimeAsDouble ),
                null );

            m_StaticProperties["unscaledTime"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.unscaledTime ),
                null );

            m_StaticProperties["unscaledTimeAsDouble"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.unscaledTimeAsDouble ),
                null );

            m_StaticProperties["fixedUnscaledTime"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.fixedUnscaledTime ),
                null );

            m_StaticProperties["fixedUnscaledTimeAsDouble"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.fixedUnscaledTimeAsDouble ),
                null );

            m_StaticProperties["unscaledDeltaTime"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.unscaledDeltaTime ),
                null );

            m_StaticProperties["fixedUnscaledDeltaTime"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.fixedUnscaledDeltaTime ),
                null );

            m_StaticProperties["fixedDeltaTime"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.fixedDeltaTime ),
                x => Time.fixedDeltaTime = WrapperHelper.UnwrapObject < float >( x ) );

            m_StaticProperties["maximumDeltaTime"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.maximumDeltaTime ),
                x => Time.maximumDeltaTime = WrapperHelper.UnwrapObject < float >( x ) );

            m_StaticProperties["smoothDeltaTime"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.smoothDeltaTime ),
                null );

            m_StaticProperties["maximumParticleDeltaTime"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.maximumParticleDeltaTime ),
                x => Time.maximumParticleDeltaTime = WrapperHelper.UnwrapObject < float >( x ) );

            m_StaticProperties["timeScale"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.timeScale ),
                x => Time.timeScale = WrapperHelper.UnwrapObject < float >( x ) );

            m_StaticProperties["frameCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.frameCount ),
                null );

            m_StaticProperties["renderedFrameCount"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.renderedFrameCount ),
                null );

            m_StaticProperties["realtimeSinceStartup"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.realtimeSinceStartup ),
                null );

            m_StaticProperties["realtimeSinceStartupAsDouble"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.realtimeSinceStartupAsDouble ),
                null );

            m_StaticProperties["captureDeltaTime"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.captureDeltaTime ),
                x => Time.captureDeltaTime = WrapperHelper.UnwrapObject < float >( x ) );

            m_StaticProperties["captureFramerate"] = new BSReflectionReference(
                () => new BSObject( ( decimal ) Time.captureFramerate ),
                x => Time.captureFramerate = WrapperHelper.UnwrapObject < int >( x ) );

            m_StaticProperties["inFixedTimeStep"] = new BSReflectionReference(
                () => Time.inFixedTimeStep ? BSObject.One : BSObject.Zero,
                null );

        }

        #endregion

        #region Private

        static BSStaticWrapperObject_UnityEngine_Time()
        {
            WrapperHelper.AddRecastWrapper < Time >( o => new BSWrapperObject_UnityEngine_Time( o ) );
        }

        #endregion
    }

}

namespace BadScript.Unity.Wrapper.Core
{

    public class UnityCoreCTorDB : IWrapperConstructorDataBase
    {
        private readonly Dictionary < Type, (IWrapperObjectCreator[], Func < object[], object >) > m_Creators;

        public Type[] Types => m_Creators.Keys.ToArray();

        #region Public

        public UnityCoreCTorDB()
        {
            m_Creators = new Dictionary < Type, (IWrapperObjectCreator[], Func < object[], object >) >
            {
                {
                    typeof( SceneManager ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_SceneManagement_SceneManager(
                          ( SceneManager ) m_Creators[typeof( SceneManager )].
                                           Item1.First( x => x.ArgCount == a.Length ).
                                           Create( a ) ) )
                },
                {
                    typeof( object ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Object(
                          ( object ) m_Creators[typeof( object )].
                                     Item1.First( x => x.ArgCount == a.Length ).
                                     Create( a ) ) )
                },
                {
                    typeof( Scene ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_SceneManagement_Scene(
                          ( Scene ) m_Creators[typeof( Scene )].
                                    Item1.First( x => x.ArgCount == a.Length ).
                                    Create( a ) ) )
                },
                {
                    typeof( ValueType ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_ValueType(
                          ( ValueType ) m_Creators[typeof( ValueType )].
                                        Item1.First( x => x.ArgCount == a.Length ).
                                        Create( a ) ) )
                },
                {
                    typeof( CreateSceneParameters ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_SceneManagement_CreateSceneParameters(
                          ( CreateSceneParameters ) m_Creators[typeof( CreateSceneParameters )].
                                                    Item1.First( x => x.ArgCount == a.Length ).
                                                    Create( a ) ) )
                },
                {
                    typeof( GameObject ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_GameObject(
                          ( GameObject ) m_Creators[typeof( GameObject )].
                                         Item1.First( x => x.ArgCount == a.Length ).
                                         Create( a ) ) )
                },
                {
                    typeof( Transform ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Transform(
                          ( Transform ) m_Creators[typeof( Transform )].
                                        Item1.First( x => x.ArgCount == a.Length ).
                                        Create( a ) ) )
                },
                {
                    typeof( Vector3 ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Vector3(
                          ( Vector3 ) m_Creators[typeof( Vector3 )].
                                      Item1.First( x => x.ArgCount == a.Length ).
                                      Create( a ) ) )
                },
                {
                    typeof( IFormatProvider ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_IFormatProvider(
                          ( IFormatProvider ) m_Creators[typeof( IFormatProvider )].
                                              Item1.First( x => x.ArgCount == a.Length ).
                                              Create( a ) ) )
                },
                {
                    typeof( Quaternion ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Quaternion(
                          ( Quaternion ) m_Creators[typeof( Quaternion )].
                                         Item1.First( x => x.ArgCount == a.Length ).
                                         Create( a ) ) )
                },
                {
                    typeof( Matrix4x4 ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Matrix4x4(
                          ( Matrix4x4 ) m_Creators[typeof( Matrix4x4 )].
                                        Item1.First( x => x.ArgCount == a.Length ).
                                        Create( a ) ) )
                },
                {
                    typeof( FrustumPlanes ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_FrustumPlanes(
                          ( FrustumPlanes ) m_Creators[typeof( FrustumPlanes )].
                                            Item1.First( x => x.ArgCount == a.Length ).
                                            Create( a ) ) )
                },
                {
                    typeof( Vector4 ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Vector4(
                          ( Vector4 ) m_Creators[typeof( Vector4 )].
                                      Item1.First( x => x.ArgCount == a.Length ).
                                      Create( a ) ) )
                },
                {
                    typeof( Plane ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Plane(
                          ( Plane ) m_Creators[typeof( Plane )].
                                    Item1.First( x => x.ArgCount == a.Length ).
                                    Create( a ) ) )
                },
                {
                    typeof( IEnumerator ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Collections_IEnumerator(
                          ( IEnumerator ) m_Creators[typeof( IEnumerator )].
                                          Item1.First( x => x.ArgCount == a.Length ).
                                          Create( a ) ) )
                },
                {
                    typeof( Component ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Component(
                          ( Component ) m_Creators[typeof( Component )].
                                        Item1.First( x => x.ArgCount == a.Length ).
                                        Create( a ) ) )
                },
                {
                    typeof( Object ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Object(
                          ( Object ) m_Creators[typeof( Object )].
                                     Item1.First( x => x.ArgCount == a.Length ).
                                     Create( a ) ) )
                },
                {
                    typeof( LoadSceneParameters ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_SceneManagement_LoadSceneParameters(
                          ( LoadSceneParameters ) m_Creators[typeof( LoadSceneParameters )].
                                                  Item1.First( x => x.ArgCount == a.Length ).
                                                  Create( a ) ) )
                },
                {
                    typeof( AsyncOperation ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_AsyncOperation(
                          ( AsyncOperation ) m_Creators[typeof( AsyncOperation )].
                                             Item1.First( x => x.ArgCount == a.Length ).
                                             Create( a ) ) )
                },
                {
                    typeof( YieldInstruction ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_YieldInstruction(
                          ( YieldInstruction ) m_Creators[typeof( YieldInstruction )].
                                               Item1.First( x => x.ArgCount == a.Length ).
                                               Create( a ) ) )
                },
                {
                    typeof( MonoBehaviour ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_MonoBehaviour(
                          ( MonoBehaviour ) m_Creators[typeof( MonoBehaviour )].
                                            Item1.First( x => x.ArgCount == a.Length ).
                                            Create( a ) ) )
                },
                {
                    typeof( Coroutine ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Coroutine(
                          ( Coroutine ) m_Creators[typeof( Coroutine )].
                                        Item1.First( x => x.ArgCount == a.Length ).
                                        Create( a ) ) )
                },
                {
                    typeof( Behaviour ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Behaviour(
                          ( Behaviour ) m_Creators[typeof( Behaviour )].
                                        Item1.First( x => x.ArgCount == a.Length ).
                                        Create( a ) ) )
                },
                {
                    typeof( Physics ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Physics(
                          ( Physics ) m_Creators[typeof( Physics )].
                                      Item1.First( x => x.ArgCount == a.Length ).
                                      Create( a ) ) )
                },
                {
                    typeof( PhysicsScene ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_PhysicsScene(
                          ( PhysicsScene ) m_Creators[typeof( PhysicsScene )].
                                           Item1.First( x => x.ArgCount == a.Length ).
                                           Create( a ) ) )
                },
                {
                    typeof( Collider ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Collider(
                          ( Collider ) m_Creators[typeof( Collider )].
                                       Item1.First( x => x.ArgCount == a.Length ).
                                       Create( a ) ) )
                },
                {
                    typeof( Rigidbody ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Rigidbody(
                          ( Rigidbody ) m_Creators[typeof( Rigidbody )].
                                        Item1.First( x => x.ArgCount == a.Length ).
                                        Create( a ) ) )
                },
                {
                    typeof( ArticulationBody ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_ArticulationBody(
                          ( ArticulationBody ) m_Creators[typeof( ArticulationBody )].
                                               Item1.First( x => x.ArgCount == a.Length ).
                                               Create( a ) ) )
                },
                {
                    typeof( ArticulationDrive ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_ArticulationDrive(
                          ( ArticulationDrive ) m_Creators[typeof( ArticulationDrive )].
                                                Item1.First( x => x.ArgCount == a.Length ).
                                                Create( a ) ) )
                },
                {
                    typeof( ArticulationReducedSpace ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_ArticulationReducedSpace(
                          ( ArticulationReducedSpace ) m_Creators[typeof( ArticulationReducedSpace )].
                                                       Item1.First( x => x.ArgCount == a.Length ).
                                                       Create( a ) ) )
                },
                {
                    typeof( Bounds ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Bounds(
                          ( Bounds ) m_Creators[typeof( Bounds )].
                                     Item1.First( x => x.ArgCount == a.Length ).
                                     Create( a ) ) )
                },
                {
                    typeof( Ray ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Ray(
                          ( Ray ) m_Creators[typeof( Ray )].Item1.First( x => x.ArgCount == a.Length ).Create( a ) ) )
                },
                {
                    typeof( PhysicMaterial ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_PhysicMaterial(
                          ( PhysicMaterial ) m_Creators[typeof( PhysicMaterial )].
                                             Item1.First( x => x.ArgCount == a.Length ).
                                             Create( a ) ) )
                },
                {
                    typeof( Input ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Input(
                          ( Input ) m_Creators[typeof( Input )].
                                    Item1.First( x => x.ArgCount == a.Length ).
                                    Create( a ) ) )
                },
                {
                    typeof( Vector2 ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Vector2(
                          ( Vector2 ) m_Creators[typeof( Vector2 )].
                                      Item1.First( x => x.ArgCount == a.Length ).
                                      Create( a ) ) )
                },
                {
                    typeof( LocationService ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_LocationService(
                          ( LocationService ) m_Creators[typeof( LocationService )].
                                              Item1.First( x => x.ArgCount == a.Length ).
                                              Create( a ) ) )
                },
                {
                    typeof( LocationInfo ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_LocationInfo(
                          ( LocationInfo ) m_Creators[typeof( LocationInfo )].
                                           Item1.First( x => x.ArgCount == a.Length ).
                                           Create( a ) ) )
                },
                {
                    typeof( Compass ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Compass(
                          ( Compass ) m_Creators[typeof( Compass )].
                                      Item1.First( x => x.ArgCount == a.Length ).
                                      Create( a ) ) )
                },
                {
                    typeof( Gyroscope ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Gyroscope(
                          ( Gyroscope ) m_Creators[typeof( Gyroscope )].
                                        Item1.First( x => x.ArgCount == a.Length ).
                                        Create( a ) ) )
                },
                {
                    typeof( Touch ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Touch(
                          ( Touch ) m_Creators[typeof( Touch )].
                                    Item1.First( x => x.ArgCount == a.Length ).
                                    Create( a ) ) )
                },
                {
                    typeof( AccelerationEvent ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_AccelerationEvent(
                          ( AccelerationEvent ) m_Creators[typeof( AccelerationEvent )].
                                                Item1.First( x => x.ArgCount == a.Length ).
                                                Create( a ) ) )
                },
                {
                    typeof( Slider ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_UI_Slider(
                          ( Slider ) m_Creators[typeof( Slider )].
                                     Item1.First( x => x.ArgCount == a.Length ).
                                     Create( a ) ) )
                },
                {
                    typeof( RectTransform ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_RectTransform(
                          ( RectTransform ) m_Creators[typeof( RectTransform )].
                                            Item1.First( x => x.ArgCount == a.Length ).
                                            Create( a ) ) )
                },
                {
                    typeof( Rect ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Rect(
                          ( Rect ) m_Creators[typeof( Rect )].Item1.First( x => x.ArgCount == a.Length ).Create( a ) ) )
                },
                {
                    typeof( Navigation ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_UI_Navigation(
                          ( Navigation ) m_Creators[typeof( Navigation )].
                                         Item1.First( x => x.ArgCount == a.Length ).
                                         Create( a ) ) )
                },
                {
                    typeof( Selectable ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_UI_Selectable(
                          ( Selectable ) m_Creators[typeof( Selectable )].
                                         Item1.First( x => x.ArgCount == a.Length ).
                                         Create( a ) ) )
                },
                {
                    typeof( ColorBlock ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_UI_ColorBlock(
                          ( ColorBlock ) m_Creators[typeof( ColorBlock )].
                                         Item1.First( x => x.ArgCount == a.Length ).
                                         Create( a ) ) )
                },
                {
                    typeof( Color ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Color(
                          ( Color ) m_Creators[typeof( Color )].
                                    Item1.First( x => x.ArgCount == a.Length ).
                                    Create( a ) ) )
                },
                {
                    typeof( SpriteState ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_UI_SpriteState(
                          ( SpriteState ) m_Creators[typeof( SpriteState )].
                                          Item1.First( x => x.ArgCount == a.Length ).
                                          Create( a ) ) )
                },
                {
                    typeof( Sprite ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Sprite(
                          ( Sprite ) m_Creators[typeof( Sprite )].
                                     Item1.First( x => x.ArgCount == a.Length ).
                                     Create( a ) ) )
                },
                {
                    typeof( Texture2D ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Texture2D(
                          ( Texture2D ) m_Creators[typeof( Texture2D )].
                                        Item1.First( x => x.ArgCount == a.Length ).
                                        Create( a ) ) )
                },
                {
                    typeof( Hash128 ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Hash128(
                          ( Hash128 ) m_Creators[typeof( Hash128 )].
                                      Item1.First( x => x.ArgCount == a.Length ).
                                      Create( a ) ) )
                },
                {
                    typeof( IntPtr ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_IntPtr(
                          ( IntPtr ) m_Creators[typeof( IntPtr )].
                                     Item1.First( x => x.ArgCount == a.Length ).
                                     Create( a ) ) )
                },
                {
                    typeof( Texture ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Texture(
                          ( Texture ) m_Creators[typeof( Texture )].
                                      Item1.First( x => x.ArgCount == a.Length ).
                                      Create( a ) ) )
                },
                {
                    typeof( AnimationTriggers ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_UI_AnimationTriggers(
                          ( AnimationTriggers ) m_Creators[typeof( AnimationTriggers )].
                                                Item1.First( x => x.ArgCount == a.Length ).
                                                Create( a ) ) )
                },
                {
                    typeof( Graphic ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_UI_Graphic(
                          ( Graphic ) m_Creators[typeof( Graphic )].
                                      Item1.First( x => x.ArgCount == a.Length ).
                                      Create( a ) ) )
                },
                {
                    typeof( Material ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Material(
                          ( Material ) m_Creators[typeof( Material )].
                                       Item1.First( x => x.ArgCount == a.Length ).
                                       Create( a ) ) )
                },
                {
                    typeof( Shader ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Shader(
                          ( Shader ) m_Creators[typeof( Shader )].
                                     Item1.First( x => x.ArgCount == a.Length ).
                                     Create( a ) ) )
                },
                {
                    typeof( ShaderTagId ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Rendering_ShaderTagId(
                          ( ShaderTagId ) m_Creators[typeof( ShaderTagId )].
                                          Item1.First( x => x.ArgCount == a.Length ).
                                          Create( a ) ) )
                },
                {
                    typeof( RenderTexture ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_RenderTexture(
                          ( RenderTexture ) m_Creators[typeof( RenderTexture )].
                                            Item1.First( x => x.ArgCount == a.Length ).
                                            Create( a ) ) )
                },
                {
                    typeof( RenderBuffer ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_RenderBuffer(
                          ( RenderBuffer ) m_Creators[typeof( RenderBuffer )].
                                           Item1.First( x => x.ArgCount == a.Length ).
                                           Create( a ) ) )
                },
                {
                    typeof( RenderTextureDescriptor ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_RenderTextureDescriptor(
                          ( RenderTextureDescriptor ) m_Creators[typeof( RenderTextureDescriptor )].
                                                      Item1.First( x => x.ArgCount == a.Length ).
                                                      Create( a ) ) )
                },
                {
                    typeof( ComputeBuffer ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_ComputeBuffer(
                          ( ComputeBuffer ) m_Creators[typeof( ComputeBuffer )].
                                            Item1.First( x => x.ArgCount == a.Length ).
                                            Create( a ) ) )
                },
                {
                    typeof( Array ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Array(
                          ( Array ) m_Creators[typeof( Array )].
                                    Item1.First( x => x.ArgCount == a.Length ).
                                    Create( a ) ) )
                },
                {
                    typeof( IComparer ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Collections_IComparer(
                          ( IComparer ) m_Creators[typeof( IComparer )].
                                        Item1.First( x => x.ArgCount == a.Length ).
                                        Create( a ) ) )
                },
                {
                    typeof( GraphicsBuffer ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_GraphicsBuffer(
                          ( GraphicsBuffer ) m_Creators[typeof( GraphicsBuffer )].
                                             Item1.First( x => x.ArgCount == a.Length ).
                                             Create( a ) ) )
                },
                {
                    typeof( Canvas ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Canvas(
                          ( Canvas ) m_Creators[typeof( Canvas )].
                                     Item1.First( x => x.ArgCount == a.Length ).
                                     Create( a ) ) )
                },
                {
                    typeof( Camera ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Camera(
                          ( Camera ) m_Creators[typeof( Camera )].
                                     Item1.First( x => x.ArgCount == a.Length ).
                                     Create( a ) ) )
                },
                {
                    typeof( Cubemap ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Cubemap(
                          ( Cubemap ) m_Creators[typeof( Cubemap )].
                                      Item1.First( x => x.ArgCount == a.Length ).
                                      Create( a ) ) )
                },
                {
                    typeof( CommandBuffer ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Rendering_CommandBuffer(
                          ( CommandBuffer ) m_Creators[typeof( CommandBuffer )].
                                            Item1.First( x => x.ArgCount == a.Length ).
                                            Create( a ) ) )
                },
                {
                    typeof( RenderTargetIdentifier ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Rendering_RenderTargetIdentifier(
                          ( RenderTargetIdentifier ) m_Creators[typeof( RenderTargetIdentifier )].
                                                     Item1.First( x => x.ArgCount == a.Length ).
                                                     Create( a ) ) )
                },
                {
                    typeof( ComputeShader ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_ComputeShader(
                          ( ComputeShader ) m_Creators[typeof( ComputeShader )].
                                            Item1.First( x => x.ArgCount == a.Length ).
                                            Create( a ) ) )
                },
                {
                    typeof( RayTracingShader ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Experimental_Rendering_RayTracingShader(
                          ( RayTracingShader ) m_Creators[typeof( RayTracingShader )].
                                               Item1.First( x => x.ArgCount == a.Length ).
                                               Create( a ) ) )
                },
                {
                    typeof( RayTracingAccelerationStructure ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Experimental_Rendering_RayTracingAccelerationStructure(
                          ( RayTracingAccelerationStructure ) m_Creators[typeof( RayTracingAccelerationStructure )].
                                                              Item1.First( x => x.ArgCount == a.Length ).
                                                              Create( a ) ) )
                },
                {
                    typeof( Renderer ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Renderer(
                          ( Renderer ) m_Creators[typeof( Renderer )].
                                       Item1.First( x => x.ArgCount == a.Length ).
                                       Create( a ) ) )
                },
                {
                    typeof( MaterialPropertyBlock ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_MaterialPropertyBlock(
                          ( MaterialPropertyBlock ) m_Creators[typeof( MaterialPropertyBlock )].
                                                    Item1.First( x => x.ArgCount == a.Length ).
                                                    Create( a ) ) )
                },
                {
                    typeof( CustomSampler ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Profiling_CustomSampler(
                          ( CustomSampler ) m_Creators[typeof( CustomSampler )].
                                            Item1.First( x => x.ArgCount == a.Length ).
                                            Create( a ) ) )
                },
                {
                    typeof( Recorder ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Profiling_Recorder(
                          ( Recorder ) m_Creators[typeof( Recorder )].
                                       Item1.First( x => x.ArgCount == a.Length ).
                                       Create( a ) ) )
                },
                {
                    typeof( Sampler ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Profiling_Sampler(
                          ( Sampler ) m_Creators[typeof( Sampler )].
                                      Item1.First( x => x.ArgCount == a.Length ).
                                      Create( a ) ) )
                },
                {
                    typeof( RenderTargetBinding ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Rendering_RenderTargetBinding(
                          ( RenderTargetBinding ) m_Creators[typeof( RenderTargetBinding )].
                                                  Item1.First( x => x.ArgCount == a.Length ).
                                                  Create( a ) ) )
                },
                {
                    typeof( GraphicsFence ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Rendering_GraphicsFence(
                          ( GraphicsFence ) m_Creators[typeof( GraphicsFence )].
                                            Item1.First( x => x.ArgCount == a.Length ).
                                            Create( a ) ) )
                },
                {
                    typeof( Mesh ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Mesh(
                          ( Mesh ) m_Creators[typeof( Mesh )].Item1.First( x => x.ArgCount == a.Length ).Create( a ) ) )
                },
                {
                    typeof( VertexAttributeDescriptor ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Rendering_VertexAttributeDescriptor(
                          ( VertexAttributeDescriptor ) m_Creators[typeof( VertexAttributeDescriptor )].
                                                        Item1.First( x => x.ArgCount == a.Length ).
                                                        Create( a ) ) )
                },
                {
                    typeof( SubMeshDescriptor ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Rendering_SubMeshDescriptor(
                          ( SubMeshDescriptor ) m_Creators[typeof( SubMeshDescriptor )].
                                                Item1.First( x => x.ArgCount == a.Length ).
                                                Create( a ) ) )
                },
                {
                    typeof( RectInt ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_RectInt(
                          ( RectInt ) m_Creators[typeof( RectInt )].
                                      Item1.First( x => x.ArgCount == a.Length ).
                                      Create( a ) ) )
                },
                {
                    typeof( Vector2Int ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Vector2Int(
                          ( Vector2Int ) m_Creators[typeof( Vector2Int )].
                                         Item1.First( x => x.ArgCount == a.Length ).
                                         Create( a ) ) )
                },
                {
                    typeof( CanvasRenderer ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_CanvasRenderer(
                          ( CanvasRenderer ) m_Creators[typeof( CanvasRenderer )].
                                             Item1.First( x => x.ArgCount == a.Length ).
                                             Create( a ) ) )
                },
                {
                    typeof( UnityAction ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Events_UnityAction(
                          ( UnityAction ) m_Creators[typeof( UnityAction )].
                                          Item1.First( x => x.ArgCount == a.Length ).
                                          Create( a ) ) )
                },
                {
                    typeof( MethodInfo ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Reflection_MethodInfo(
                          ( MethodInfo ) m_Creators[typeof( MethodInfo )].
                                         Item1.First( x => x.ArgCount == a.Length ).
                                         Create( a ) ) )
                },
                {
                    typeof( ParameterInfo ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Reflection_ParameterInfo(
                          ( ParameterInfo ) m_Creators[typeof( ParameterInfo )].
                                            Item1.First( x => x.ArgCount == a.Length ).
                                            Create( a ) ) )
                },
                {
                    typeof( MemberInfo ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Reflection_MemberInfo(
                          ( MemberInfo ) m_Creators[typeof( MemberInfo )].
                                         Item1.First( x => x.ArgCount == a.Length ).
                                         Create( a ) ) )
                },
                {
                    typeof( Module ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Reflection_Module(
                          ( Module ) m_Creators[typeof( Module )].
                                     Item1.First( x => x.ArgCount == a.Length ).
                                     Create( a ) ) )
                },
                {
                    typeof( ModuleHandle ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_ModuleHandle(
                          ( ModuleHandle ) m_Creators[typeof( ModuleHandle )].
                                           Item1.First( x => x.ArgCount == a.Length ).
                                           Create( a ) ) )
                },
                {
                    typeof( RuntimeFieldHandle ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_RuntimeFieldHandle(
                          ( RuntimeFieldHandle ) m_Creators[typeof( RuntimeFieldHandle )].
                                                 Item1.First( x => x.ArgCount == a.Length ).
                                                 Create( a ) ) )
                },
                {
                    typeof( SerializationInfo ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Runtime_Serialization_SerializationInfo(
                          ( SerializationInfo ) m_Creators[typeof( SerializationInfo )].
                                                Item1.First( x => x.ArgCount == a.Length ).
                                                Create( a ) ) )
                },
                {
                    typeof( SerializationInfoEnumerator ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Runtime_Serialization_SerializationInfoEnumerator(
                          ( SerializationInfoEnumerator ) m_Creators[typeof( SerializationInfoEnumerator )].
                                                          Item1.First( x => x.ArgCount == a.Length ).
                                                          Create( a ) ) )
                },
                {
                    typeof( SerializationEntry ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Runtime_Serialization_SerializationEntry(
                          ( SerializationEntry ) m_Creators[typeof( SerializationEntry )].
                                                 Item1.First( x => x.ArgCount == a.Length ).
                                                 Create( a ) ) )
                },
                {
                    typeof( char ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Char(
                          ( char ) m_Creators[typeof( char )].Item1.First( x => x.ArgCount == a.Length ).Create( a ) ) )
                },
                {
                    typeof( CultureInfo ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Globalization_CultureInfo(
                          ( CultureInfo ) m_Creators[typeof( CultureInfo )].
                                          Item1.First( x => x.ArgCount == a.Length ).
                                          Create( a ) ) )
                },
                {
                    typeof( Calendar ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Globalization_Calendar(
                          ( Calendar ) m_Creators[typeof( Calendar )].
                                       Item1.First( x => x.ArgCount == a.Length ).
                                       Create( a ) ) )
                },
                {
                    typeof( DateTime ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_DateTime(
                          ( DateTime ) m_Creators[typeof( DateTime )].
                                       Item1.First( x => x.ArgCount == a.Length ).
                                       Create( a ) ) )
                },
                {
                    typeof( TimeSpan ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_TimeSpan(
                          ( TimeSpan ) m_Creators[typeof( TimeSpan )].
                                       Item1.First( x => x.ArgCount == a.Length ).
                                       Create( a ) ) )
                },
                {
                    typeof( TextInfo ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Globalization_TextInfo(
                          ( TextInfo ) m_Creators[typeof( TextInfo )].
                                       Item1.First( x => x.ArgCount == a.Length ).
                                       Create( a ) ) )
                },
                {
                    typeof( CompareInfo ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Globalization_CompareInfo(
                          ( CompareInfo ) m_Creators[typeof( CompareInfo )].
                                          Item1.First( x => x.ArgCount == a.Length ).
                                          Create( a ) ) )
                },
                {
                    typeof( SortVersion ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Globalization_SortVersion(
                          ( SortVersion ) m_Creators[typeof( SortVersion )].
                                          Item1.First( x => x.ArgCount == a.Length ).
                                          Create( a ) ) )
                },
                {
                    typeof( Guid ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Guid(
                          ( Guid ) m_Creators[typeof( Guid )].Item1.First( x => x.ArgCount == a.Length ).Create( a ) ) )
                },
                {
                    typeof( SortKey ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Globalization_SortKey(
                          ( SortKey ) m_Creators[typeof( SortKey )].
                                      Item1.First( x => x.ArgCount == a.Length ).
                                      Create( a ) ) )
                },
                {
                    typeof( Assembly ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Reflection_Assembly(
                          ( Assembly ) m_Creators[typeof( Assembly )].
                                       Item1.First( x => x.ArgCount == a.Length ).
                                       Create( a ) ) )
                },
                {
                    typeof( IPermission ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Security_IPermission(
                          ( IPermission ) m_Creators[typeof( IPermission )].
                                          Item1.First( x => x.ArgCount == a.Length ).
                                          Create( a ) ) )
                },
                {
                    typeof( SecurityElement ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Security_SecurityElement(
                          ( SecurityElement ) m_Creators[typeof( SecurityElement )].
                                              Item1.First( x => x.ArgCount == a.Length ).
                                              Create( a ) ) )
                },
                {
                    typeof( Hashtable ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Collections_Hashtable(
                          ( Hashtable ) m_Creators[typeof( Hashtable )].
                                        Item1.First( x => x.ArgCount == a.Length ).
                                        Create( a ) ) )
                },
                {
                    typeof( ICollection ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Collections_ICollection(
                          ( ICollection ) m_Creators[typeof( ICollection )].
                                          Item1.First( x => x.ArgCount == a.Length ).
                                          Create( a ) ) )
                },
                {
                    typeof( IDictionaryEnumerator ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Collections_IDictionaryEnumerator(
                          ( IDictionaryEnumerator ) m_Creators[typeof( IDictionaryEnumerator )].
                                                    Item1.First( x => x.ArgCount == a.Length ).
                                                    Create( a ) ) )
                },
                {
                    typeof( DictionaryEntry ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Collections_DictionaryEntry(
                          ( DictionaryEntry ) m_Creators[typeof( DictionaryEntry )].
                                              Item1.First( x => x.ArgCount == a.Length ).
                                              Create( a ) ) )
                },
                {
                    typeof( StreamingContext ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Runtime_Serialization_StreamingContext(
                          ( StreamingContext ) m_Creators[typeof( StreamingContext )].
                                               Item1.First( x => x.ArgCount == a.Length ).
                                               Create( a ) ) )
                },
                {
                    typeof( ArrayList ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Collections_ArrayList(
                          ( ArrayList ) m_Creators[typeof( ArrayList )].
                                        Item1.First( x => x.ArgCount == a.Length ).
                                        Create( a ) ) )
                },
                {
                    typeof( IList ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Collections_IList(
                          ( IList ) m_Creators[typeof( IList )].
                                    Item1.First( x => x.ArgCount == a.Length ).
                                    Create( a ) ) )
                },
                {
                    typeof( ModuleResolveEventHandler ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Reflection_ModuleResolveEventHandler(
                          ( ModuleResolveEventHandler ) m_Creators[typeof( ModuleResolveEventHandler )].
                                                        Item1.First( x => x.ArgCount == a.Length ).
                                                        Create( a ) ) )
                },
                {
                    typeof( ResolveEventArgs ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_ResolveEventArgs(
                          ( ResolveEventArgs ) m_Creators[typeof( ResolveEventArgs )].
                                               Item1.First( x => x.ArgCount == a.Length ).
                                               Create( a ) ) )
                },
                {
                    typeof( EventArgs ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_EventArgs(
                          ( EventArgs ) m_Creators[typeof( EventArgs )].
                                        Item1.First( x => x.ArgCount == a.Length ).
                                        Create( a ) ) )
                },
                {
                    typeof( IAsyncResult ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_IAsyncResult(
                          ( IAsyncResult ) m_Creators[typeof( IAsyncResult )].
                                           Item1.First( x => x.ArgCount == a.Length ).
                                           Create( a ) ) )
                },
                {
                    typeof( WaitHandle ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Threading_WaitHandle(
                          ( WaitHandle ) m_Creators[typeof( WaitHandle )].
                                         Item1.First( x => x.ArgCount == a.Length ).
                                         Create( a ) ) )
                },
                {
                    typeof( SafeWaitHandle ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_Microsoft_Win32_SafeHandles_SafeWaitHandle(
                          ( SafeWaitHandle ) m_Creators[typeof( SafeWaitHandle )].
                                             Item1.First( x => x.ArgCount == a.Length ).
                                             Create( a ) ) )
                },
                {
                    typeof( SafeHandleZeroOrMinusOneIsInvalid ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_Microsoft_Win32_SafeHandles_SafeHandleZeroOrMinusOneIsInvalid(
                          ( SafeHandleZeroOrMinusOneIsInvalid ) m_Creators[typeof( SafeHandleZeroOrMinusOneIsInvalid )].
                                                                Item1.First( x => x.ArgCount == a.Length ).
                                                                Create( a ) ) )
                },
                {
                    typeof( SafeHandle ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Runtime_InteropServices_SafeHandle(
                          ( SafeHandle ) m_Creators[typeof( SafeHandle )].
                                         Item1.First( x => x.ArgCount == a.Length ).
                                         Create( a ) ) )
                },
                {
                    typeof( CriticalFinalizerObject ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Runtime_ConstrainedExecution_CriticalFinalizerObject(
                          ( CriticalFinalizerObject ) m_Creators[typeof( CriticalFinalizerObject )].
                                                      Item1.First( x => x.ArgCount == a.Length ).
                                                      Create( a ) ) )
                },
                {
                    typeof( IDictionary ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Collections_IDictionary(
                          ( IDictionary ) m_Creators[typeof( IDictionary )].
                                          Item1.First( x => x.ArgCount == a.Length ).
                                          Create( a ) ) )
                },
                {
                    typeof( MarshalByRefObject ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_MarshalByRefObject(
                          ( MarshalByRefObject ) m_Creators[typeof( MarshalByRefObject )].
                                                 Item1.First( x => x.ArgCount == a.Length ).
                                                 Create( a ) ) )
                },
                {
                    typeof( AsyncCallback ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_AsyncCallback(
                          ( AsyncCallback ) m_Creators[typeof( AsyncCallback )].
                                            Item1.First( x => x.ArgCount == a.Length ).
                                            Create( a ) ) )
                },
                {
                    typeof( MulticastDelegate ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_MulticastDelegate(
                          ( MulticastDelegate ) m_Creators[typeof( MulticastDelegate )].
                                                Item1.First( x => x.ArgCount == a.Length ).
                                                Create( a ) ) )
                },
                {
                    typeof( Delegate ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Delegate(
                          ( Delegate ) m_Creators[typeof( Delegate )].
                                       Item1.First( x => x.ArgCount == a.Length ).
                                       Create( a ) ) )
                },
                {
                    typeof( FileStream ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_IO_FileStream(
                          ( FileStream ) m_Creators[typeof( FileStream )].
                                         Item1.First( x => x.ArgCount == a.Length ).
                                         Create( a ) ) )
                },
                {
                    typeof( SafeFileHandle ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_Microsoft_Win32_SafeHandles_SafeFileHandle(
                          ( SafeFileHandle ) m_Creators[typeof( SafeFileHandle )].
                                             Item1.First( x => x.ArgCount == a.Length ).
                                             Create( a ) ) )
                },
                {
                    typeof( ReadOnlyCollectionBase ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Collections_ReadOnlyCollectionBase(
                          ( ReadOnlyCollectionBase ) m_Creators[typeof( ReadOnlyCollectionBase )].
                                                     Item1.First( x => x.ArgCount == a.Length ).
                                                     Create( a ) ) )
                },
                {
                    typeof( Task ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Threading_Tasks_Task(
                          ( Task ) m_Creators[typeof( Task )].Item1.First( x => x.ArgCount == a.Length ).Create( a ) ) )
                },
                {
                    typeof( TaskFactory ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Threading_Tasks_TaskFactory(
                          ( TaskFactory ) m_Creators[typeof( TaskFactory )].
                                          Item1.First( x => x.ArgCount == a.Length ).
                                          Create( a ) ) )
                },
                {
                    typeof( CancellationToken ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Threading_CancellationToken(
                          ( CancellationToken ) m_Creators[typeof( CancellationToken )].
                                                Item1.First( x => x.ArgCount == a.Length ).
                                                Create( a ) ) )
                },
                {
                    typeof( CancellationTokenRegistration ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Threading_CancellationTokenRegistration(
                          ( CancellationTokenRegistration ) m_Creators[typeof( CancellationTokenRegistration )].
                                                            Item1.First( x => x.ArgCount == a.Length ).
                                                            Create( a ) ) )
                },
                {
                    typeof( Action ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Action(
                          ( Action ) m_Creators[typeof( Action )].
                                     Item1.First( x => x.ArgCount == a.Length ).
                                     Create( a ) ) )
                },
                {
                    typeof( TaskScheduler ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Threading_Tasks_TaskScheduler(
                          ( TaskScheduler ) m_Creators[typeof( TaskScheduler )].
                                            Item1.First( x => x.ArgCount == a.Length ).
                                            Create( a ) ) )
                },
                {
                    typeof( AggregateException ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_AggregateException(
                          ( AggregateException ) m_Creators[typeof( AggregateException )].
                                                 Item1.First( x => x.ArgCount == a.Length ).
                                                 Create( a ) ) )
                },
                {
                    typeof( Exception ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Exception(
                          ( Exception ) m_Creators[typeof( Exception )].
                                        Item1.First( x => x.ArgCount == a.Length ).
                                        Create( a ) ) )
                },
                {
                    typeof( MethodBase ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Reflection_MethodBase(
                          ( MethodBase ) m_Creators[typeof( MethodBase )].
                                         Item1.First( x => x.ArgCount == a.Length ).
                                         Create( a ) ) )
                },
                {
                    typeof( RuntimeMethodHandle ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_RuntimeMethodHandle(
                          ( RuntimeMethodHandle ) m_Creators[typeof( RuntimeMethodHandle )].
                                                  Item1.First( x => x.ArgCount == a.Length ).
                                                  Create( a ) ) )
                },
                {
                    typeof( Binder ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Reflection_Binder(
                          ( Binder ) m_Creators[typeof( Binder )].
                                     Item1.First( x => x.ArgCount == a.Length ).
                                     Create( a ) ) )
                },
                {
                    typeof( FieldInfo ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Reflection_FieldInfo(
                          ( FieldInfo ) m_Creators[typeof( FieldInfo )].
                                        Item1.First( x => x.ArgCount == a.Length ).
                                        Create( a ) ) )
                },
                {
                    typeof( RuntimeTypeHandle ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_RuntimeTypeHandle(
                          ( RuntimeTypeHandle ) m_Creators[typeof( RuntimeTypeHandle )].
                                                Item1.First( x => x.ArgCount == a.Length ).
                                                Create( a ) ) )
                },
                {
                    typeof( PropertyInfo ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Reflection_PropertyInfo(
                          ( PropertyInfo ) m_Creators[typeof( PropertyInfo )].
                                           Item1.First( x => x.ArgCount == a.Length ).
                                           Create( a ) ) )
                },
                {
                    typeof( MethodBody ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Reflection_MethodBody(
                          ( MethodBody ) m_Creators[typeof( MethodBody )].
                                         Item1.First( x => x.ArgCount == a.Length ).
                                         Create( a ) ) )
                },
                {
                    typeof( TaskAwaiter ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Runtime_CompilerServices_TaskAwaiter(
                          ( TaskAwaiter ) m_Creators[typeof( TaskAwaiter )].
                                          Item1.First( x => x.ArgCount == a.Length ).
                                          Create( a ) ) )
                },
                {
                    typeof( ConfiguredTaskAwaitable ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Runtime_CompilerServices_ConfiguredTaskAwaitable(
                          ( ConfiguredTaskAwaitable ) m_Creators[typeof( ConfiguredTaskAwaitable )].
                                                      Item1.First( x => x.ArgCount == a.Length ).
                                                      Create( a ) ) )
                },
                {
                    typeof( YieldAwaitable ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Runtime_CompilerServices_YieldAwaitable(
                          ( YieldAwaitable ) m_Creators[typeof( YieldAwaitable )].
                                             Item1.First( x => x.ArgCount == a.Length ).
                                             Create( a ) ) )
                },
                {
                    typeof( Stream ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_IO_Stream(
                          ( Stream ) m_Creators[typeof( Stream )].
                                     Item1.First( x => x.ArgCount == a.Length ).
                                     Create( a ) ) )
                },
                {
                    typeof( AssemblyName ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Reflection_AssemblyName(
                          ( AssemblyName ) m_Creators[typeof( AssemblyName )].
                                           Item1.First( x => x.ArgCount == a.Length ).
                                           Create( a ) ) )
                },
                {
                    typeof( StrongNameKeyPair ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Reflection_StrongNameKeyPair(
                          ( StrongNameKeyPair ) m_Creators[typeof( StrongNameKeyPair )].
                                                Item1.First( x => x.ArgCount == a.Length ).
                                                Create( a ) ) )
                },
                {
                    typeof( Version ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Version(
                          ( Version ) m_Creators[typeof( Version )].
                                      Item1.First( x => x.ArgCount == a.Length ).
                                      Create( a ) ) )
                },
                {
                    typeof( ManifestResourceInfo ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Reflection_ManifestResourceInfo(
                          ( ManifestResourceInfo ) m_Creators[typeof( ManifestResourceInfo )].
                                                   Item1.First( x => x.ArgCount == a.Length ).
                                                   Create( a ) ) )
                },
                {
                    typeof( NumberFormatInfo ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Globalization_NumberFormatInfo(
                          ( NumberFormatInfo ) m_Creators[typeof( NumberFormatInfo )].
                                               Item1.First( x => x.ArgCount == a.Length ).
                                               Create( a ) ) )
                },
                {
                    typeof( DateTimeFormatInfo ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Globalization_DateTimeFormatInfo(
                          ( DateTimeFormatInfo ) m_Creators[typeof( DateTimeFormatInfo )].
                                                 Item1.First( x => x.ArgCount == a.Length ).
                                                 Create( a ) ) )
                },
                {
                    typeof( TypeFilter ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Reflection_TypeFilter(
                          ( TypeFilter ) m_Creators[typeof( TypeFilter )].
                                         Item1.First( x => x.ArgCount == a.Length ).
                                         Create( a ) ) )
                },
                {
                    typeof( X509Certificate ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Security_Cryptography_X509Certificates_X509Certificate(
                          ( X509Certificate ) m_Creators[typeof( X509Certificate )].
                                              Item1.First( x => x.ArgCount == a.Length ).
                                              Create( a ) ) )
                },
                {
                    typeof( SecureString ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Security_SecureString(
                          ( SecureString ) m_Creators[typeof( SecureString )].
                                           Item1.First( x => x.ArgCount == a.Length ).
                                           Create( a ) ) )
                },
                {
                    typeof( ICustomAttributeProvider ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_System_Reflection_ICustomAttributeProvider(
                          ( ICustomAttributeProvider ) m_Creators[typeof( ICustomAttributeProvider )].
                                                       Item1.First( x => x.ArgCount == a.Length ).
                                                       Create( a ) ) )
                },
                {
                    typeof( UIBehaviour ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_EventSystems_UIBehaviour(
                          ( UIBehaviour ) m_Creators[typeof( UIBehaviour )].
                                          Item1.First( x => x.ArgCount == a.Length ).
                                          Create( a ) ) )
                },
                {
                    typeof( Image ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_UI_Image(
                          ( Image ) m_Creators[typeof( Image )].
                                    Item1.First( x => x.ArgCount == a.Length ).
                                    Create( a ) ) )
                },
                {
                    typeof( MaskableGraphic ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_UI_MaskableGraphic(
                          ( MaskableGraphic ) m_Creators[typeof( MaskableGraphic )].
                                              Item1.First( x => x.ArgCount == a.Length ).
                                              Create( a ) ) )
                },
                {
                    typeof( Animator ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Animator(
                          ( Animator ) m_Creators[typeof( Animator )].
                                       Item1.First( x => x.ArgCount == a.Length ).
                                       Create( a ) ) )
                },
                {
                    typeof( RuntimeAnimatorController ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_RuntimeAnimatorController(
                          ( RuntimeAnimatorController ) m_Creators[typeof( RuntimeAnimatorController )].
                                                        Item1.First( x => x.ArgCount == a.Length ).
                                                        Create( a ) ) )
                },
                {
                    typeof( Avatar ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Avatar(
                          ( Avatar ) m_Creators[typeof( Avatar )].
                                     Item1.First( x => x.ArgCount == a.Length ).
                                     Create( a ) ) )
                },
                {
                    typeof( HumanDescription ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_HumanDescription(
                          ( HumanDescription ) m_Creators[typeof( HumanDescription )].
                                               Item1.First( x => x.ArgCount == a.Length ).
                                               Create( a ) ) )
                },
                {
                    typeof( PlayableGraph ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Playables_PlayableGraph(
                          ( PlayableGraph ) m_Creators[typeof( PlayableGraph )].
                                            Item1.First( x => x.ArgCount == a.Length ).
                                            Create( a ) ) )
                },
                {
                    typeof( Playable ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Playables_Playable(
                          ( Playable ) m_Creators[typeof( Playable )].
                                       Item1.First( x => x.ArgCount == a.Length ).
                                       Create( a ) ) )
                },
                {
                    typeof( PlayableHandle ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Playables_PlayableHandle(
                          ( PlayableHandle ) m_Creators[typeof( PlayableHandle )].
                                             Item1.First( x => x.ArgCount == a.Length ).
                                             Create( a ) ) )
                },
                {
                    typeof( PlayableOutput ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Playables_PlayableOutput(
                          ( PlayableOutput ) m_Creators[typeof( PlayableOutput )].
                                             Item1.First( x => x.ArgCount == a.Length ).
                                             Create( a ) ) )
                },
                {
                    typeof( PlayableOutputHandle ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Playables_PlayableOutputHandle(
                          ( PlayableOutputHandle ) m_Creators[typeof( PlayableOutputHandle )].
                                                   Item1.First( x => x.ArgCount == a.Length ).
                                                   Create( a ) ) )
                },
                {
                    typeof( IExposedPropertyTable ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_IExposedPropertyTable(
                          ( IExposedPropertyTable ) m_Creators[typeof( IExposedPropertyTable )].
                                                    Item1.First( x => x.ArgCount == a.Length ).
                                                    Create( a ) ) )
                },
                {
                    typeof( PropertyName ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_PropertyName(
                          ( PropertyName ) m_Creators[typeof( PropertyName )].
                                           Item1.First( x => x.ArgCount == a.Length ).
                                           Create( a ) ) )
                },
                {
                    typeof( AnimatorStateInfo ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_AnimatorStateInfo(
                          ( AnimatorStateInfo ) m_Creators[typeof( AnimatorStateInfo )].
                                                Item1.First( x => x.ArgCount == a.Length ).
                                                Create( a ) ) )
                },
                {
                    typeof( AnimatorTransitionInfo ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_AnimatorTransitionInfo(
                          ( AnimatorTransitionInfo ) m_Creators[typeof( AnimatorTransitionInfo )].
                                                     Item1.First( x => x.ArgCount == a.Length ).
                                                     Create( a ) ) )
                },
                {
                    typeof( AnimatorControllerParameter ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_AnimatorControllerParameter(
                          ( AnimatorControllerParameter ) m_Creators[typeof( AnimatorControllerParameter )].
                                                          Item1.First( x => x.ArgCount == a.Length ).
                                                          Create( a ) ) )
                },
                {
                    typeof( MatchTargetWeightMask ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_MatchTargetWeightMask(
                          ( MatchTargetWeightMask ) m_Creators[typeof( MatchTargetWeightMask )].
                                                    Item1.First( x => x.ArgCount == a.Length ).
                                                    Create( a ) ) )
                },
                {
                    typeof( AxisEventData ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_EventSystems_AxisEventData(
                          ( AxisEventData ) m_Creators[typeof( AxisEventData )].
                                            Item1.First( x => x.ArgCount == a.Length ).
                                            Create( a ) ) )
                },
                {
                    typeof( BaseInputModule ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_EventSystems_BaseInputModule(
                          ( BaseInputModule ) m_Creators[typeof( BaseInputModule )].
                                              Item1.First( x => x.ArgCount == a.Length ).
                                              Create( a ) ) )
                },
                {
                    typeof( BaseInput ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_EventSystems_BaseInput(
                          ( BaseInput ) m_Creators[typeof( BaseInput )].
                                        Item1.First( x => x.ArgCount == a.Length ).
                                        Create( a ) ) )
                },
                {
                    typeof( BaseEventData ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_EventSystems_BaseEventData(
                          ( BaseEventData ) m_Creators[typeof( BaseEventData )].
                                            Item1.First( x => x.ArgCount == a.Length ).
                                            Create( a ) ) )
                },
                {
                    typeof( AbstractEventData ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_EventSystems_AbstractEventData(
                          ( AbstractEventData ) m_Creators[typeof( AbstractEventData )].
                                                Item1.First( x => x.ArgCount == a.Length ).
                                                Create( a ) ) )
                },
                {
                    typeof( PointerEventData ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_EventSystems_PointerEventData(
                          ( PointerEventData ) m_Creators[typeof( PointerEventData )].
                                               Item1.First( x => x.ArgCount == a.Length ).
                                               Create( a ) ) )
                },
                {
                    typeof( RaycastResult ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_EventSystems_RaycastResult(
                          ( RaycastResult ) m_Creators[typeof( RaycastResult )].
                                            Item1.First( x => x.ArgCount == a.Length ).
                                            Create( a ) ) )
                },
                {
                    typeof( BaseRaycaster ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_EventSystems_BaseRaycaster(
                          ( BaseRaycaster ) m_Creators[typeof( BaseRaycaster )].
                                            Item1.First( x => x.ArgCount == a.Length ).
                                            Create( a ) ) )
                },
                {
                    typeof( Button ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_UI_Button(
                          ( Button ) m_Creators[typeof( Button )].
                                     Item1.First( x => x.ArgCount == a.Length ).
                                     Create( a ) ) )
                },
                {
                    typeof( InputField ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_UI_InputField(
                          ( InputField ) m_Creators[typeof( InputField )].
                                         Item1.First( x => x.ArgCount == a.Length ).
                                         Create( a ) ) )
                },
                {
                    typeof( Text ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_UI_Text(
                          ( Text ) m_Creators[typeof( Text )].Item1.First( x => x.ArgCount == a.Length ).Create( a ) ) )
                },
                {
                    typeof( TextGenerator ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_TextGenerator(
                          ( TextGenerator ) m_Creators[typeof( TextGenerator )].
                                            Item1.First( x => x.ArgCount == a.Length ).
                                            Create( a ) ) )
                },
                {
                    typeof( TextGenerationSettings ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_TextGenerationSettings(
                          ( TextGenerationSettings ) m_Creators[typeof( TextGenerationSettings )].
                                                     Item1.First( x => x.ArgCount == a.Length ).
                                                     Create( a ) ) )
                },
                {
                    typeof( Font ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Font(
                          ( Font ) m_Creators[typeof( Font )].Item1.First( x => x.ArgCount == a.Length ).Create( a ) ) )
                },
                {
                    typeof( TouchScreenKeyboard ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_TouchScreenKeyboard(
                          ( TouchScreenKeyboard ) m_Creators[typeof( TouchScreenKeyboard )].
                                                  Item1.First( x => x.ArgCount == a.Length ).
                                                  Create( a ) ) )
                },
                {
                    typeof( RangeInt ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_RangeInt(
                          ( RangeInt ) m_Creators[typeof( RangeInt )].
                                       Item1.First( x => x.ArgCount == a.Length ).
                                       Create( a ) ) )
                },
                {
                    typeof( Event ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Event(
                          ( Event ) m_Creators[typeof( Event )].
                                    Item1.First( x => x.ArgCount == a.Length ).
                                    Create( a ) ) )
                },
                {
                    typeof( MeshFilter ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_MeshFilter(
                          ( MeshFilter ) m_Creators[typeof( MeshFilter )].
                                         Item1.First( x => x.ArgCount == a.Length ).
                                         Create( a ) ) )
                },
                {
                    typeof( MeshRenderer ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_MeshRenderer(
                          ( MeshRenderer ) m_Creators[typeof( MeshRenderer )].
                                           Item1.First( x => x.ArgCount == a.Length ).
                                           Create( a ) ) )
                },
                {
                    typeof( Resources ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Resources(
                          ( Resources ) m_Creators[typeof( Resources )].
                                        Item1.First( x => x.ArgCount == a.Length ).
                                        Create( a ) ) )
                },
                {
                    typeof( ResourceRequest ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_ResourceRequest(
                          ( ResourceRequest ) m_Creators[typeof( ResourceRequest )].
                                              Item1.First( x => x.ArgCount == a.Length ).
                                              Create( a ) ) )
                },
                {
                    typeof( MeshCollider ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_MeshCollider(
                          ( MeshCollider ) m_Creators[typeof( MeshCollider )].
                                           Item1.First( x => x.ArgCount == a.Length ).
                                           Create( a ) ) )
                },
                {
                    typeof( SphereCollider ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_SphereCollider(
                          ( SphereCollider ) m_Creators[typeof( SphereCollider )].
                                             Item1.First( x => x.ArgCount == a.Length ).
                                             Create( a ) ) )
                },
                {
                    typeof( BoxCollider ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_BoxCollider(
                          ( BoxCollider ) m_Creators[typeof( BoxCollider )].
                                          Item1.First( x => x.ArgCount == a.Length ).
                                          Create( a ) ) )
                },
                {
                    typeof( CapsuleCollider ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_CapsuleCollider(
                          ( CapsuleCollider ) m_Creators[typeof( CapsuleCollider )].
                                              Item1.First( x => x.ArgCount == a.Length ).
                                              Create( a ) ) )
                },
                {
                    typeof( LayerMask ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_LayerMask(
                          ( LayerMask ) m_Creators[typeof( LayerMask )].
                                        Item1.First( x => x.ArgCount == a.Length ).
                                        Create( a ) ) )
                },
                {
                    typeof( ScriptableObject ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_ScriptableObject(
                          ( ScriptableObject ) m_Creators[typeof( ScriptableObject )].
                                               Item1.First( x => x.ArgCount == a.Length ).
                                               Create( a ) ) )
                },
                {
                    typeof( Mathf ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Mathf(
                          ( Mathf ) m_Creators[typeof( Mathf )].
                                    Item1.First( x => x.ArgCount == a.Length ).
                                    Create( a ) ) )
                },
                {
                    typeof( Debug ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Debug(
                          ( Debug ) m_Creators[typeof( Debug )].
                                    Item1.First( x => x.ArgCount == a.Length ).
                                    Create( a ) ) )
                },
                {
                    typeof( ILogger ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_ILogger(
                          ( ILogger ) m_Creators[typeof( ILogger )].
                                      Item1.First( x => x.ArgCount == a.Length ).
                                      Create( a ) ) )
                },
                {
                    typeof( ILogHandler ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_ILogHandler(
                          ( ILogHandler ) m_Creators[typeof( ILogHandler )].
                                          Item1.First( x => x.ArgCount == a.Length ).
                                          Create( a ) ) )
                },
                {
                    typeof( Time ),
                    ( new IWrapperObjectCreator[] { },
                      a => new BSWrapperObject_UnityEngine_Time(
                          ( Time ) m_Creators[typeof( Time )].Item1.First( x => x.ArgCount == a.Length ).Create( a ) ) )
                },

            };
        }

        public ABSObject Get( Type t, object[] args )
        {
            return ( ABSObject ) m_Creators[t].Item2( args );
        }

        public bool HasType( Type t )
        {
            return m_Creators.ContainsKey( t );
        }

        #endregion
    }

    public class UnityCoreStaticDB : WrapperStaticDataBase
    {
        #region Public

        public UnityCoreStaticDB()
        {
            StaticTypes[typeof( SceneManager )] = new BSStaticWrapperObject_UnityEngine_SceneManagement_SceneManager();
            StaticTypes[typeof( object )] = new BSStaticWrapperObject_System_Object();
            StaticTypes[typeof( Scene )] = new BSStaticWrapperObject_UnityEngine_SceneManagement_Scene();
            StaticTypes[typeof( ValueType )] = new BSStaticWrapperObject_System_ValueType();

            StaticTypes[typeof( CreateSceneParameters )] =
                new BSStaticWrapperObject_UnityEngine_SceneManagement_CreateSceneParameters();

            StaticTypes[typeof( GameObject )] = new BSStaticWrapperObject_UnityEngine_GameObject();
            StaticTypes[typeof( Transform )] = new BSStaticWrapperObject_UnityEngine_Transform();
            StaticTypes[typeof( Vector3 )] = new BSStaticWrapperObject_UnityEngine_Vector3();
            StaticTypes[typeof( IFormatProvider )] = new BSStaticWrapperObject_System_IFormatProvider();
            StaticTypes[typeof( Quaternion )] = new BSStaticWrapperObject_UnityEngine_Quaternion();
            StaticTypes[typeof( Matrix4x4 )] = new BSStaticWrapperObject_UnityEngine_Matrix4x4();
            StaticTypes[typeof( FrustumPlanes )] = new BSStaticWrapperObject_UnityEngine_FrustumPlanes();
            StaticTypes[typeof( Vector4 )] = new BSStaticWrapperObject_UnityEngine_Vector4();
            StaticTypes[typeof( Plane )] = new BSStaticWrapperObject_UnityEngine_Plane();
            StaticTypes[typeof( IEnumerator )] = new BSStaticWrapperObject_System_Collections_IEnumerator();
            StaticTypes[typeof( Component )] = new BSStaticWrapperObject_UnityEngine_Component();
            StaticTypes[typeof( Object )] = new BSStaticWrapperObject_UnityEngine_Object();

            StaticTypes[typeof( LoadSceneParameters )] =
                new BSStaticWrapperObject_UnityEngine_SceneManagement_LoadSceneParameters();

            StaticTypes[typeof( AsyncOperation )] = new BSStaticWrapperObject_UnityEngine_AsyncOperation();
            StaticTypes[typeof( YieldInstruction )] = new BSStaticWrapperObject_UnityEngine_YieldInstruction();
            StaticTypes[typeof( MonoBehaviour )] = new BSStaticWrapperObject_UnityEngine_MonoBehaviour();
            StaticTypes[typeof( Coroutine )] = new BSStaticWrapperObject_UnityEngine_Coroutine();
            StaticTypes[typeof( Behaviour )] = new BSStaticWrapperObject_UnityEngine_Behaviour();
            StaticTypes[typeof( Physics )] = new BSStaticWrapperObject_UnityEngine_Physics();
            StaticTypes[typeof( PhysicsScene )] = new BSStaticWrapperObject_UnityEngine_PhysicsScene();
            StaticTypes[typeof( Collider )] = new BSStaticWrapperObject_UnityEngine_Collider();
            StaticTypes[typeof( Rigidbody )] = new BSStaticWrapperObject_UnityEngine_Rigidbody();
            StaticTypes[typeof( ArticulationBody )] = new BSStaticWrapperObject_UnityEngine_ArticulationBody();
            StaticTypes[typeof( ArticulationDrive )] = new BSStaticWrapperObject_UnityEngine_ArticulationDrive();

            StaticTypes[typeof( ArticulationReducedSpace )] =
                new BSStaticWrapperObject_UnityEngine_ArticulationReducedSpace();

            StaticTypes[typeof( Bounds )] = new BSStaticWrapperObject_UnityEngine_Bounds();
            StaticTypes[typeof( Ray )] = new BSStaticWrapperObject_UnityEngine_Ray();
            StaticTypes[typeof( PhysicMaterial )] = new BSStaticWrapperObject_UnityEngine_PhysicMaterial();
            StaticTypes[typeof( Input )] = new BSStaticWrapperObject_UnityEngine_Input();
            StaticTypes[typeof( Vector2 )] = new BSStaticWrapperObject_UnityEngine_Vector2();
            StaticTypes[typeof( LocationService )] = new BSStaticWrapperObject_UnityEngine_LocationService();
            StaticTypes[typeof( LocationInfo )] = new BSStaticWrapperObject_UnityEngine_LocationInfo();
            StaticTypes[typeof( Compass )] = new BSStaticWrapperObject_UnityEngine_Compass();
            StaticTypes[typeof( Gyroscope )] = new BSStaticWrapperObject_UnityEngine_Gyroscope();
            StaticTypes[typeof( Touch )] = new BSStaticWrapperObject_UnityEngine_Touch();
            StaticTypes[typeof( AccelerationEvent )] = new BSStaticWrapperObject_UnityEngine_AccelerationEvent();
            StaticTypes[typeof( Slider )] = new BSStaticWrapperObject_UnityEngine_UI_Slider();
            StaticTypes[typeof( RectTransform )] = new BSStaticWrapperObject_UnityEngine_RectTransform();
            StaticTypes[typeof( Rect )] = new BSStaticWrapperObject_UnityEngine_Rect();
            StaticTypes[typeof( Navigation )] = new BSStaticWrapperObject_UnityEngine_UI_Navigation();
            StaticTypes[typeof( Selectable )] = new BSStaticWrapperObject_UnityEngine_UI_Selectable();
            StaticTypes[typeof( ColorBlock )] = new BSStaticWrapperObject_UnityEngine_UI_ColorBlock();
            StaticTypes[typeof( Color )] = new BSStaticWrapperObject_UnityEngine_Color();
            StaticTypes[typeof( SpriteState )] = new BSStaticWrapperObject_UnityEngine_UI_SpriteState();
            StaticTypes[typeof( Sprite )] = new BSStaticWrapperObject_UnityEngine_Sprite();
            StaticTypes[typeof( Texture2D )] = new BSStaticWrapperObject_UnityEngine_Texture2D();
            StaticTypes[typeof( Hash128 )] = new BSStaticWrapperObject_UnityEngine_Hash128();
            StaticTypes[typeof( IntPtr )] = new BSStaticWrapperObject_System_IntPtr();
            StaticTypes[typeof( Texture )] = new BSStaticWrapperObject_UnityEngine_Texture();
            StaticTypes[typeof( AnimationTriggers )] = new BSStaticWrapperObject_UnityEngine_UI_AnimationTriggers();
            StaticTypes[typeof( Graphic )] = new BSStaticWrapperObject_UnityEngine_UI_Graphic();
            StaticTypes[typeof( Material )] = new BSStaticWrapperObject_UnityEngine_Material();
            StaticTypes[typeof( Shader )] = new BSStaticWrapperObject_UnityEngine_Shader();
            StaticTypes[typeof( ShaderTagId )] = new BSStaticWrapperObject_UnityEngine_Rendering_ShaderTagId();
            StaticTypes[typeof( RenderTexture )] = new BSStaticWrapperObject_UnityEngine_RenderTexture();
            StaticTypes[typeof( RenderBuffer )] = new BSStaticWrapperObject_UnityEngine_RenderBuffer();

            StaticTypes[typeof( RenderTextureDescriptor )] =
                new BSStaticWrapperObject_UnityEngine_RenderTextureDescriptor();

            StaticTypes[typeof( ComputeBuffer )] = new BSStaticWrapperObject_UnityEngine_ComputeBuffer();
            StaticTypes[typeof( Array )] = new BSStaticWrapperObject_System_Array();
            StaticTypes[typeof( IComparer )] = new BSStaticWrapperObject_System_Collections_IComparer();
            StaticTypes[typeof( GraphicsBuffer )] = new BSStaticWrapperObject_UnityEngine_GraphicsBuffer();
            StaticTypes[typeof( Canvas )] = new BSStaticWrapperObject_UnityEngine_Canvas();
            StaticTypes[typeof( Camera )] = new BSStaticWrapperObject_UnityEngine_Camera();
            StaticTypes[typeof( Cubemap )] = new BSStaticWrapperObject_UnityEngine_Cubemap();
            StaticTypes[typeof( CommandBuffer )] = new BSStaticWrapperObject_UnityEngine_Rendering_CommandBuffer();

            StaticTypes[typeof( RenderTargetIdentifier )] =
                new BSStaticWrapperObject_UnityEngine_Rendering_RenderTargetIdentifier();

            StaticTypes[typeof( ComputeShader )] = new BSStaticWrapperObject_UnityEngine_ComputeShader();

            StaticTypes[typeof( RayTracingShader )] =
                new BSStaticWrapperObject_UnityEngine_Experimental_Rendering_RayTracingShader();

            StaticTypes[typeof( RayTracingAccelerationStructure )] =
                new BSStaticWrapperObject_UnityEngine_Experimental_Rendering_RayTracingAccelerationStructure();

            StaticTypes[typeof( Renderer )] = new BSStaticWrapperObject_UnityEngine_Renderer();

            StaticTypes[typeof( MaterialPropertyBlock )] =
                new BSStaticWrapperObject_UnityEngine_MaterialPropertyBlock();

            StaticTypes[typeof( CustomSampler )] = new BSStaticWrapperObject_UnityEngine_Profiling_CustomSampler();
            StaticTypes[typeof( Recorder )] = new BSStaticWrapperObject_UnityEngine_Profiling_Recorder();
            StaticTypes[typeof( Sampler )] = new BSStaticWrapperObject_UnityEngine_Profiling_Sampler();

            StaticTypes[typeof( RenderTargetBinding )] =
                new BSStaticWrapperObject_UnityEngine_Rendering_RenderTargetBinding();

            StaticTypes[typeof( GraphicsFence )] = new BSStaticWrapperObject_UnityEngine_Rendering_GraphicsFence();
            StaticTypes[typeof( Mesh )] = new BSStaticWrapperObject_UnityEngine_Mesh();

            StaticTypes[typeof( VertexAttributeDescriptor )] =
                new BSStaticWrapperObject_UnityEngine_Rendering_VertexAttributeDescriptor();

            StaticTypes[typeof( SubMeshDescriptor )] =
                new BSStaticWrapperObject_UnityEngine_Rendering_SubMeshDescriptor();

            StaticTypes[typeof( RectInt )] = new BSStaticWrapperObject_UnityEngine_RectInt();
            StaticTypes[typeof( Vector2Int )] = new BSStaticWrapperObject_UnityEngine_Vector2Int();
            StaticTypes[typeof( GraphicsFence )] = new BSStaticWrapperObject_UnityEngine_Rendering_GPUFence();
            StaticTypes[typeof( CanvasRenderer )] = new BSStaticWrapperObject_UnityEngine_CanvasRenderer();
            StaticTypes[typeof( UnityAction )] = new BSStaticWrapperObject_UnityEngine_Events_UnityAction();
            StaticTypes[typeof( MethodInfo )] = new BSStaticWrapperObject_System_Reflection_MethodInfo();
            StaticTypes[typeof( ParameterInfo )] = new BSStaticWrapperObject_System_Reflection_ParameterInfo();
            StaticTypes[typeof( MemberInfo )] = new BSStaticWrapperObject_System_Reflection_MemberInfo();
            StaticTypes[typeof( Module )] = new BSStaticWrapperObject_System_Reflection_Module();
            StaticTypes[typeof( ModuleHandle )] = new BSStaticWrapperObject_System_ModuleHandle();
            StaticTypes[typeof( RuntimeFieldHandle )] = new BSStaticWrapperObject_System_RuntimeFieldHandle();

            StaticTypes[typeof( SerializationInfo )] =
                new BSStaticWrapperObject_System_Runtime_Serialization_SerializationInfo();

            StaticTypes[typeof( SerializationInfoEnumerator )] =
                new BSStaticWrapperObject_System_Runtime_Serialization_SerializationInfoEnumerator();

            StaticTypes[typeof( SerializationEntry )] =
                new BSStaticWrapperObject_System_Runtime_Serialization_SerializationEntry();

            StaticTypes[typeof( char )] = new BSStaticWrapperObject_System_Char();
            StaticTypes[typeof( CultureInfo )] = new BSStaticWrapperObject_System_Globalization_CultureInfo();
            StaticTypes[typeof( Calendar )] = new BSStaticWrapperObject_System_Globalization_Calendar();
            StaticTypes[typeof( DateTime )] = new BSStaticWrapperObject_System_DateTime();
            StaticTypes[typeof( TimeSpan )] = new BSStaticWrapperObject_System_TimeSpan();
            StaticTypes[typeof( TextInfo )] = new BSStaticWrapperObject_System_Globalization_TextInfo();
            StaticTypes[typeof( CompareInfo )] = new BSStaticWrapperObject_System_Globalization_CompareInfo();
            StaticTypes[typeof( SortVersion )] = new BSStaticWrapperObject_System_Globalization_SortVersion();
            StaticTypes[typeof( Guid )] = new BSStaticWrapperObject_System_Guid();
            StaticTypes[typeof( SortKey )] = new BSStaticWrapperObject_System_Globalization_SortKey();
            StaticTypes[typeof( Assembly )] = new BSStaticWrapperObject_System_Reflection_Assembly();
            StaticTypes[typeof( IPermission )] = new BSStaticWrapperObject_System_Security_IPermission();
            StaticTypes[typeof( SecurityElement )] = new BSStaticWrapperObject_System_Security_SecurityElement();
            StaticTypes[typeof( Hashtable )] = new BSStaticWrapperObject_System_Collections_Hashtable();
            StaticTypes[typeof( ICollection )] = new BSStaticWrapperObject_System_Collections_ICollection();

            StaticTypes[typeof( IDictionaryEnumerator )] =
                new BSStaticWrapperObject_System_Collections_IDictionaryEnumerator();

            StaticTypes[typeof( DictionaryEntry )] = new BSStaticWrapperObject_System_Collections_DictionaryEntry();

            StaticTypes[typeof( StreamingContext )] =
                new BSStaticWrapperObject_System_Runtime_Serialization_StreamingContext();

            StaticTypes[typeof( ArrayList )] = new BSStaticWrapperObject_System_Collections_ArrayList();
            StaticTypes[typeof( IList )] = new BSStaticWrapperObject_System_Collections_IList();

            StaticTypes[typeof( ModuleResolveEventHandler )] =
                new BSStaticWrapperObject_System_Reflection_ModuleResolveEventHandler();

            StaticTypes[typeof( ResolveEventArgs )] = new BSStaticWrapperObject_System_ResolveEventArgs();
            StaticTypes[typeof( EventArgs )] = new BSStaticWrapperObject_System_EventArgs();
            StaticTypes[typeof( IAsyncResult )] = new BSStaticWrapperObject_System_IAsyncResult();
            StaticTypes[typeof( WaitHandle )] = new BSStaticWrapperObject_System_Threading_WaitHandle();

            StaticTypes[typeof( SafeWaitHandle )] =
                new BSStaticWrapperObject_Microsoft_Win32_SafeHandles_SafeWaitHandle();

            StaticTypes[typeof( SafeHandleZeroOrMinusOneIsInvalid )] =
                new BSStaticWrapperObject_Microsoft_Win32_SafeHandles_SafeHandleZeroOrMinusOneIsInvalid();

            StaticTypes[typeof( SafeHandle )] = new BSStaticWrapperObject_System_Runtime_InteropServices_SafeHandle();

            StaticTypes[typeof( CriticalFinalizerObject )] =
                new BSStaticWrapperObject_System_Runtime_ConstrainedExecution_CriticalFinalizerObject();

            StaticTypes[typeof( IDictionary )] = new BSStaticWrapperObject_System_Collections_IDictionary();
            StaticTypes[typeof( MarshalByRefObject )] = new BSStaticWrapperObject_System_MarshalByRefObject();
            StaticTypes[typeof( AsyncCallback )] = new BSStaticWrapperObject_System_AsyncCallback();
            StaticTypes[typeof( MulticastDelegate )] = new BSStaticWrapperObject_System_MulticastDelegate();
            StaticTypes[typeof( Delegate )] = new BSStaticWrapperObject_System_Delegate();
            StaticTypes[typeof( FileStream )] = new BSStaticWrapperObject_System_IO_FileStream();

            StaticTypes[typeof( SafeFileHandle )] =
                new BSStaticWrapperObject_Microsoft_Win32_SafeHandles_SafeFileHandle();

            StaticTypes[typeof( ReadOnlyCollectionBase )] =
                new BSStaticWrapperObject_System_Collections_ReadOnlyCollectionBase();

            StaticTypes[typeof( Task )] = new BSStaticWrapperObject_System_Threading_Tasks_Task();
            StaticTypes[typeof( TaskFactory )] = new BSStaticWrapperObject_System_Threading_Tasks_TaskFactory();
            StaticTypes[typeof( CancellationToken )] = new BSStaticWrapperObject_System_Threading_CancellationToken();

            StaticTypes[typeof( CancellationTokenRegistration )] =
                new BSStaticWrapperObject_System_Threading_CancellationTokenRegistration();

            StaticTypes[typeof( Action )] = new BSStaticWrapperObject_System_Action();
            StaticTypes[typeof( TaskScheduler )] = new BSStaticWrapperObject_System_Threading_Tasks_TaskScheduler();
            StaticTypes[typeof( AggregateException )] = new BSStaticWrapperObject_System_AggregateException();
            StaticTypes[typeof( Exception )] = new BSStaticWrapperObject_System_Exception();
            StaticTypes[typeof( MethodBase )] = new BSStaticWrapperObject_System_Reflection_MethodBase();
            StaticTypes[typeof( RuntimeMethodHandle )] = new BSStaticWrapperObject_System_RuntimeMethodHandle();
            StaticTypes[typeof( Binder )] = new BSStaticWrapperObject_System_Reflection_Binder();
            StaticTypes[typeof( FieldInfo )] = new BSStaticWrapperObject_System_Reflection_FieldInfo();
            StaticTypes[typeof( RuntimeTypeHandle )] = new BSStaticWrapperObject_System_RuntimeTypeHandle();
            StaticTypes[typeof( PropertyInfo )] = new BSStaticWrapperObject_System_Reflection_PropertyInfo();
            StaticTypes[typeof( MethodBody )] = new BSStaticWrapperObject_System_Reflection_MethodBody();

            StaticTypes[typeof( TaskAwaiter )] =
                new BSStaticWrapperObject_System_Runtime_CompilerServices_TaskAwaiter();

            StaticTypes[typeof( ConfiguredTaskAwaitable )] =
                new BSStaticWrapperObject_System_Runtime_CompilerServices_ConfiguredTaskAwaitable();

            StaticTypes[typeof( YieldAwaitable )] =
                new BSStaticWrapperObject_System_Runtime_CompilerServices_YieldAwaitable();

            StaticTypes[typeof( Stream )] = new BSStaticWrapperObject_System_IO_Stream();
            StaticTypes[typeof( AssemblyName )] = new BSStaticWrapperObject_System_Reflection_AssemblyName();
            StaticTypes[typeof( StrongNameKeyPair )] = new BSStaticWrapperObject_System_Reflection_StrongNameKeyPair();
            StaticTypes[typeof( Version )] = new BSStaticWrapperObject_System_Version();

            StaticTypes[typeof( ManifestResourceInfo )] =
                new BSStaticWrapperObject_System_Reflection_ManifestResourceInfo();

            StaticTypes[typeof( NumberFormatInfo )] = new BSStaticWrapperObject_System_Globalization_NumberFormatInfo();

            StaticTypes[typeof( DateTimeFormatInfo )] =
                new BSStaticWrapperObject_System_Globalization_DateTimeFormatInfo();

            StaticTypes[typeof( TypeFilter )] = new BSStaticWrapperObject_System_Reflection_TypeFilter();

            StaticTypes[typeof( X509Certificate )] =
                new BSStaticWrapperObject_System_Security_Cryptography_X509Certificates_X509Certificate();

            StaticTypes[typeof( SecureString )] = new BSStaticWrapperObject_System_Security_SecureString();

            StaticTypes[typeof( ICustomAttributeProvider )] =
                new BSStaticWrapperObject_System_Reflection_ICustomAttributeProvider();

            StaticTypes[typeof( UIBehaviour )] = new BSStaticWrapperObject_UnityEngine_EventSystems_UIBehaviour();
            StaticTypes[typeof( Image )] = new BSStaticWrapperObject_UnityEngine_UI_Image();
            StaticTypes[typeof( MaskableGraphic )] = new BSStaticWrapperObject_UnityEngine_UI_MaskableGraphic();
            StaticTypes[typeof( Animator )] = new BSStaticWrapperObject_UnityEngine_Animator();

            StaticTypes[typeof( RuntimeAnimatorController )] =
                new BSStaticWrapperObject_UnityEngine_RuntimeAnimatorController();

            StaticTypes[typeof( Avatar )] = new BSStaticWrapperObject_UnityEngine_Avatar();
            StaticTypes[typeof( HumanDescription )] = new BSStaticWrapperObject_UnityEngine_HumanDescription();
            StaticTypes[typeof( PlayableGraph )] = new BSStaticWrapperObject_UnityEngine_Playables_PlayableGraph();
            StaticTypes[typeof( Playable )] = new BSStaticWrapperObject_UnityEngine_Playables_Playable();
            StaticTypes[typeof( PlayableHandle )] = new BSStaticWrapperObject_UnityEngine_Playables_PlayableHandle();
            StaticTypes[typeof( PlayableOutput )] = new BSStaticWrapperObject_UnityEngine_Playables_PlayableOutput();

            StaticTypes[typeof( PlayableOutputHandle )] =
                new BSStaticWrapperObject_UnityEngine_Playables_PlayableOutputHandle();

            StaticTypes[typeof( IExposedPropertyTable )] =
                new BSStaticWrapperObject_UnityEngine_IExposedPropertyTable();

            StaticTypes[typeof( PropertyName )] = new BSStaticWrapperObject_UnityEngine_PropertyName();
            StaticTypes[typeof( AnimatorStateInfo )] = new BSStaticWrapperObject_UnityEngine_AnimatorStateInfo();

            StaticTypes[typeof( AnimatorTransitionInfo )] =
                new BSStaticWrapperObject_UnityEngine_AnimatorTransitionInfo();

            StaticTypes[typeof( AnimatorControllerParameter )] =
                new BSStaticWrapperObject_UnityEngine_AnimatorControllerParameter();

            StaticTypes[typeof( MatchTargetWeightMask )] =
                new BSStaticWrapperObject_UnityEngine_MatchTargetWeightMask();

            StaticTypes[typeof( AxisEventData )] = new BSStaticWrapperObject_UnityEngine_EventSystems_AxisEventData();

            StaticTypes[typeof( BaseInputModule )] =
                new BSStaticWrapperObject_UnityEngine_EventSystems_BaseInputModule();

            StaticTypes[typeof( BaseInput )] = new BSStaticWrapperObject_UnityEngine_EventSystems_BaseInput();
            StaticTypes[typeof( BaseEventData )] = new BSStaticWrapperObject_UnityEngine_EventSystems_BaseEventData();

            StaticTypes[typeof( AbstractEventData )] =
                new BSStaticWrapperObject_UnityEngine_EventSystems_AbstractEventData();

            StaticTypes[typeof( PointerEventData )] =
                new BSStaticWrapperObject_UnityEngine_EventSystems_PointerEventData();

            StaticTypes[typeof( RaycastResult )] = new BSStaticWrapperObject_UnityEngine_EventSystems_RaycastResult();
            StaticTypes[typeof( BaseRaycaster )] = new BSStaticWrapperObject_UnityEngine_EventSystems_BaseRaycaster();
            StaticTypes[typeof( Button )] = new BSStaticWrapperObject_UnityEngine_UI_Button();
            StaticTypes[typeof( InputField )] = new BSStaticWrapperObject_UnityEngine_UI_InputField();
            StaticTypes[typeof( Text )] = new BSStaticWrapperObject_UnityEngine_UI_Text();
            StaticTypes[typeof( TextGenerator )] = new BSStaticWrapperObject_UnityEngine_TextGenerator();

            StaticTypes[typeof( TextGenerationSettings )] =
                new BSStaticWrapperObject_UnityEngine_TextGenerationSettings();

            StaticTypes[typeof( Font )] = new BSStaticWrapperObject_UnityEngine_Font();
            StaticTypes[typeof( TouchScreenKeyboard )] = new BSStaticWrapperObject_UnityEngine_TouchScreenKeyboard();
            StaticTypes[typeof( RangeInt )] = new BSStaticWrapperObject_UnityEngine_RangeInt();
            StaticTypes[typeof( Event )] = new BSStaticWrapperObject_UnityEngine_Event();
            StaticTypes[typeof( MeshFilter )] = new BSStaticWrapperObject_UnityEngine_MeshFilter();
            StaticTypes[typeof( MeshRenderer )] = new BSStaticWrapperObject_UnityEngine_MeshRenderer();
            StaticTypes[typeof( Resources )] = new BSStaticWrapperObject_UnityEngine_Resources();
            StaticTypes[typeof( ResourceRequest )] = new BSStaticWrapperObject_UnityEngine_ResourceRequest();
            StaticTypes[typeof( MeshCollider )] = new BSStaticWrapperObject_UnityEngine_MeshCollider();
            StaticTypes[typeof( SphereCollider )] = new BSStaticWrapperObject_UnityEngine_SphereCollider();
            StaticTypes[typeof( BoxCollider )] = new BSStaticWrapperObject_UnityEngine_BoxCollider();
            StaticTypes[typeof( CapsuleCollider )] = new BSStaticWrapperObject_UnityEngine_CapsuleCollider();
            StaticTypes[typeof( LayerMask )] = new BSStaticWrapperObject_UnityEngine_LayerMask();
            StaticTypes[typeof( ScriptableObject )] = new BSStaticWrapperObject_UnityEngine_ScriptableObject();
            StaticTypes[typeof( Mathf )] = new BSStaticWrapperObject_UnityEngine_Mathf();
            StaticTypes[typeof( Random )] = new BSStaticWrapperObject_UnityEngine_Random();
            StaticTypes[typeof( Debug )] = new BSStaticWrapperObject_UnityEngine_Debug();
            StaticTypes[typeof( ILogger )] = new BSStaticWrapperObject_UnityEngine_ILogger();
            StaticTypes[typeof( ILogHandler )] = new BSStaticWrapperObject_UnityEngine_ILogHandler();
            StaticTypes[typeof( Time )] = new BSStaticWrapperObject_UnityEngine_Time();

        }

        #endregion
    }

}
